[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/spectrum_material-design-lite/packages/spectrum_material-design-lite.js                          //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n(function(){                                                                                                 // 1\n                                                                                                             // 2\n///////////////////////////////////////////////////////////////////////////////////////////////////////      // 3\n//                                                                                                   //      // 4\n// packages/spectrum:material-design-lite/material.js                                                //      // 5\n//                                                                                                   //      // 6\n///////////////////////////////////////////////////////////////////////////////////////////////////////      // 7\n                                                                                                     //      // 8\n/**                                                                                                  // 1    // 9\n * @license                                                                                          // 2    // 10\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 3    // 11\n *                                                                                                   // 4    // 12\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 5    // 13\n * you may not use this file except in compliance with the License.                                  // 6    // 14\n * You may obtain a copy of the License at                                                           // 7    // 15\n *                                                                                                   // 8    // 16\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 9    // 17\n *                                                                                                   // 10   // 18\n * Unless required by applicable law or agreed to in writing, software                               // 11   // 19\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 12   // 20\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 13   // 21\n * See the License for the specific language governing permissions and                               // 14   // 22\n * limitations under the License.                                                                    // 15   // 23\n */                                                                                                  // 16   // 24\n                                                                                                     // 17   // 25\n/**                                                                                                  // 18   // 26\n * A component handler interface using the revealing module design pattern.                          // 19   // 27\n * More details on this pattern design here:                                                         // 20   // 28\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 21   // 29\n * @author Jason Mayes.                                                                              // 22   // 30\n */                                                                                                  // 23   // 31\n/* exported componentHandler */                                                                      // 24   // 32\nvar componentHandler = (function() {                                                                 // 25   // 33\n  'use strict';                                                                                      // 26   // 34\n                                                                                                     // 27   // 35\n  var registeredComponents_ = [];                                                                    // 28   // 36\n  var createdComponents_ = [];                                                                       // 29   // 37\n  var downgradeMethod_ = 'mdlDowngrade_';                                                            // 30   // 38\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';                                      // 31   // 39\n                                                                                                     // 32   // 40\n  /**                                                                                                // 33   // 41\n   * Searches registered components for a class we are interested in using.                          // 34   // 42\n   * Optionally replaces a match with passed object if specified.                                    // 35   // 43\n   * @param {string} name The name of a class we want to use.                                        // 36   // 44\n   * @param {object} optReplace Optional object to replace match with.                               // 37   // 45\n   * @return {object | false}                                                                        // 38   // 46\n   * @private                                                                                        // 39   // 47\n   */                                                                                                // 40   // 48\n  function findRegisteredClass_(name, optReplace) {                                                  // 41   // 49\n    for (var i = 0; i < registeredComponents_.length; i++) {                                         // 42   // 50\n      if (registeredComponents_[i].className === name) {                                             // 43   // 51\n        if (optReplace !== undefined) {                                                              // 44   // 52\n          registeredComponents_[i] = optReplace;                                                     // 45   // 53\n        }                                                                                            // 46   // 54\n        return registeredComponents_[i];                                                             // 47   // 55\n      }                                                                                              // 48   // 56\n    }                                                                                                // 49   // 57\n    return false;                                                                                    // 50   // 58\n  }                                                                                                  // 51   // 59\n                                                                                                     // 52   // 60\n  /**                                                                                                // 53   // 61\n   * Searches existing DOM for elements of our component type and upgrades them                      // 54   // 62\n   * if they have not already been upgraded.                                                         // 55   // 63\n   * @param {string} jsClass the programatic name of the element class we need                       // 56   // 64\n   * to create a new instance of.                                                                    // 57   // 65\n   * @param {string} cssClass the name of the CSS class elements of this type                        // 58   // 66\n   * will have.                                                                                      // 59   // 67\n   */                                                                                                // 60   // 68\n  function upgradeDomInternal(jsClass, cssClass) {                                                   // 61   // 69\n    if (jsClass === undefined && cssClass === undefined) {                                           // 62   // 70\n      for (var i = 0; i < registeredComponents_.length; i++) {                                       // 63   // 71\n        upgradeDomInternal(registeredComponents_[i].className,                                       // 64   // 72\n            registeredComponents_[i].cssClass);                                                      // 65   // 73\n      }                                                                                              // 66   // 74\n    } else {                                                                                         // 67   // 75\n      if (cssClass === undefined) {                                                                  // 68   // 76\n        var registeredClass = findRegisteredClass_(jsClass);                                         // 69   // 77\n        if (registeredClass) {                                                                       // 70   // 78\n          cssClass = registeredClass.cssClass;                                                       // 71   // 79\n        }                                                                                            // 72   // 80\n      }                                                                                              // 73   // 81\n                                                                                                     // 74   // 82\n      var elements = document.querySelectorAll('.' + cssClass);                                      // 75   // 83\n      for (var n = 0; n < elements.length; n++) {                                                    // 76   // 84\n        upgradeElementInternal(elements[n], jsClass);                                                // 77   // 85\n      }                                                                                              // 78   // 86\n    }                                                                                                // 79   // 87\n  }                                                                                                  // 80   // 88\n                                                                                                     // 81   // 89\n  /**                                                                                                // 82   // 90\n   * Upgrades a specific element rather than all in the DOM.                                         // 83   // 91\n   * @param {HTMLElement} element The element we wish to upgrade.                                    // 84   // 92\n   * @param {string} jsClass The name of the class we want to upgrade                                // 85   // 93\n   * the element to.                                                                                 // 86   // 94\n   */                                                                                                // 87   // 95\n  function upgradeElementInternal(element, jsClass) {                                                // 88   // 96\n    // Only upgrade elements that have not already been upgraded.                                    // 89   // 97\n    var dataUpgraded = element.getAttribute('data-upgraded');                                        // 90   // 98\n                                                                                                     // 91   // 99\n    if (dataUpgraded === null || dataUpgraded.indexOf(jsClass) === -1) {                             // 92   // 100\n      // Upgrade element.                                                                            // 93   // 101\n      if (dataUpgraded === null) {                                                                   // 94   // 102\n        dataUpgraded = '';                                                                           // 95   // 103\n      }                                                                                              // 96   // 104\n      element.setAttribute('data-upgraded', dataUpgraded + ',' + jsClass);                           // 97   // 105\n      var registeredClass = findRegisteredClass_(jsClass);                                           // 98   // 106\n      if (registeredClass) {                                                                         // 99   // 107\n        // new                                                                                       // 100  // 108\n        var instance = new registeredClass.classConstructor(element);                                // 101  // 109\n        instance[componentConfigProperty_] = registeredClass;                                        // 102  // 110\n        createdComponents_.push(instance);                                                           // 103  // 111\n        // Call any callbacks the user has registered with this component type.                      // 104  // 112\n        registeredClass.callbacks.forEach(function(callback) {                                       // 105  // 113\n          callback(element);                                                                         // 106  // 114\n        });                                                                                          // 107  // 115\n                                                                                                     // 108  // 116\n        if (registeredClass.widget) {                                                                // 109  // 117\n          // Assign per element instance for control over API                                        // 110  // 118\n          element[jsClass] = instance;                                                               // 111  // 119\n        }                                                                                            // 112  // 120\n      } else {                                                                                       // 113  // 121\n        throw 'Unable to find a registered component for the given class.';                          // 114  // 122\n      }                                                                                              // 115  // 123\n                                                                                                     // 116  // 124\n      var ev = document.createEvent('Events');                                                       // 117  // 125\n      ev.initEvent('mdl-componentupgraded', true, true);                                             // 118  // 126\n      element.dispatchEvent(ev);                                                                     // 119  // 127\n    }                                                                                                // 120  // 128\n  }                                                                                                  // 121  // 129\n                                                                                                     // 122  // 130\n  /**                                                                                                // 123  // 131\n   * Registers a class for future use and attempts to upgrade existing DOM.                          // 124  // 132\n   * @param {object} config An object containing:                                                    // 125  // 133\n   * {constructor: Constructor, classAsString: string, cssClass: string}                             // 126  // 134\n   */                                                                                                // 127  // 135\n  function registerInternal(config) {                                                                // 128  // 136\n    var newConfig = {                                                                                // 129  // 137\n      'classConstructor': config.constructor,                                                        // 130  // 138\n      'className': config.classAsString,                                                             // 131  // 139\n      'cssClass': config.cssClass,                                                                   // 132  // 140\n      'widget': config.widget === undefined ? true : config.widget,                                  // 133  // 141\n      'callbacks': []                                                                                // 134  // 142\n    };                                                                                               // 135  // 143\n                                                                                                     // 136  // 144\n    registeredComponents_.forEach(function(item) {                                                   // 137  // 145\n      if (item.cssClass === newConfig.cssClass) {                                                    // 138  // 146\n        throw 'The provided cssClass has already been registered.';                                  // 139  // 147\n      }                                                                                              // 140  // 148\n      if (item.className === newConfig.className) {                                                  // 141  // 149\n        throw 'The provided className has already been registered';                                  // 142  // 150\n      }                                                                                              // 143  // 151\n    });                                                                                              // 144  // 152\n                                                                                                     // 145  // 153\n    if (config.constructor.prototype                                                                 // 146  // 154\n        .hasOwnProperty(componentConfigProperty_)) {                                                 // 147  // 155\n      throw 'MDL component classes must not have ' + componentConfigProperty_ +                      // 148  // 156\n          ' defined as a property.';                                                                 // 149  // 157\n    }                                                                                                // 150  // 158\n                                                                                                     // 151  // 159\n    var found = findRegisteredClass_(config.classAsString, newConfig);                               // 152  // 160\n                                                                                                     // 153  // 161\n    if (!found) {                                                                                    // 154  // 162\n      registeredComponents_.push(newConfig);                                                         // 155  // 163\n    }                                                                                                // 156  // 164\n  }                                                                                                  // 157  // 165\n                                                                                                     // 158  // 166\n  /**                                                                                                // 159  // 167\n   * Allows user to be alerted to any upgrades that are performed for a given                        // 160  // 168\n   * component type                                                                                  // 161  // 169\n   * @param {string} jsClass The class name of the MDL component we wish                             // 162  // 170\n   * to hook into for any upgrades performed.                                                        // 163  // 171\n   * @param {function} callback The function to call upon an upgrade. This                           // 164  // 172\n   * function should expect 1 parameter - the HTMLElement which got upgraded.                        // 165  // 173\n   */                                                                                                // 166  // 174\n  function registerUpgradedCallbackInternal(jsClass, callback) {                                     // 167  // 175\n    var regClass = findRegisteredClass_(jsClass);                                                    // 168  // 176\n    if (regClass) {                                                                                  // 169  // 177\n      regClass.callbacks.push(callback);                                                             // 170  // 178\n    }                                                                                                // 171  // 179\n  }                                                                                                  // 172  // 180\n                                                                                                     // 173  // 181\n  /**                                                                                                // 174  // 182\n   * Upgrades all registered components found in the current DOM. This is                            // 175  // 183\n   * automatically called on window load.                                                            // 176  // 184\n   */                                                                                                // 177  // 185\n  function upgradeAllRegisteredInternal() {                                                          // 178  // 186\n    for (var n = 0; n < registeredComponents_.length; n++) {                                         // 179  // 187\n      upgradeDomInternal(registeredComponents_[n].className);                                        // 180  // 188\n    }                                                                                                // 181  // 189\n  }                                                                                                  // 182  // 190\n                                                                                                     // 183  // 191\n  /**                                                                                                // 184  // 192\n   * Finds a created component by a given DOM node.                                                  // 185  // 193\n   *                                                                                                 // 186  // 194\n   * @param {!Element} node                                                                          // 187  // 195\n   * @return {*}                                                                                     // 188  // 196\n   */                                                                                                // 189  // 197\n  function findCreatedComponentByNodeInternal(node) {                                                // 190  // 198\n    for (var n = 0; n < createdComponents_.length; n++) {                                            // 191  // 199\n      var component = createdComponents_[n];                                                         // 192  // 200\n      if (component.element_ === node) {                                                             // 193  // 201\n        return component;                                                                            // 194  // 202\n      }                                                                                              // 195  // 203\n    }                                                                                                // 196  // 204\n  }                                                                                                  // 197  // 205\n                                                                                                     // 198  // 206\n  /**                                                                                                // 199  // 207\n   * Check the component for the downgrade method.                                                   // 200  // 208\n   * Execute if found.                                                                               // 201  // 209\n   * Remove component from createdComponents list.                                                   // 202  // 210\n   *                                                                                                 // 203  // 211\n   * @param {*} component                                                                            // 204  // 212\n   */                                                                                                // 205  // 213\n  function deconstructComponentInternal(component) {                                                 // 206  // 214\n    if (component &&                                                                                 // 207  // 215\n        component[componentConfigProperty_]                                                          // 208  // 216\n          .classConstructor.prototype                                                                // 209  // 217\n          .hasOwnProperty(downgradeMethod_)) {                                                       // 210  // 218\n      component[downgradeMethod_]();                                                                 // 211  // 219\n      var componentIndex = createdComponents_.indexOf(component);                                    // 212  // 220\n      createdComponents_.splice(componentIndex, 1);                                                  // 213  // 221\n                                                                                                     // 214  // 222\n      var upgrades = component.element_.dataset.upgraded.split(',');                                 // 215  // 223\n      var componentPlace = upgrades.indexOf(                                                         // 216  // 224\n          component[componentConfigProperty_].classAsString);                                        // 217  // 225\n      upgrades.splice(componentPlace, 1);                                                            // 218  // 226\n      component.element_.dataset.upgraded = upgrades.join(',');                                      // 219  // 227\n                                                                                                     // 220  // 228\n      var ev = document.createEvent('Events');                                                       // 221  // 229\n      ev.initEvent('mdl-componentdowngraded', true, true);                                           // 222  // 230\n      component.element_.dispatchEvent(ev);                                                          // 223  // 231\n    }                                                                                                // 224  // 232\n  }                                                                                                  // 225  // 233\n                                                                                                     // 226  // 234\n  /**                                                                                                // 227  // 235\n   * Downgrade either a given node, an array of nodes, or a NodeList.                                // 228  // 236\n   *                                                                                                 // 229  // 237\n   * @param {*} nodes                                                                                // 230  // 238\n   */                                                                                                // 231  // 239\n  function downgradeNodesInternal(nodes) {                                                           // 232  // 240\n    var downgradeNode = function(node) {                                                             // 233  // 241\n      deconstructComponentInternal(findCreatedComponentByNodeInternal(node));                        // 234  // 242\n    };                                                                                               // 235  // 243\n    if (nodes instanceof Array || nodes instanceof NodeList) {                                       // 236  // 244\n      for (var n = 0; n < nodes.length; n++) {                                                       // 237  // 245\n        downgradeNode(nodes[n]);                                                                     // 238  // 246\n      }                                                                                              // 239  // 247\n    } else if (nodes instanceof Node) {                                                              // 240  // 248\n      downgradeNode(nodes);                                                                          // 241  // 249\n    } else {                                                                                         // 242  // 250\n      throw 'Invalid argument provided to downgrade MDL nodes.';                                     // 243  // 251\n    }                                                                                                // 244  // 252\n  }                                                                                                  // 245  // 253\n                                                                                                     // 246  // 254\n  // Now return the functions that should be made public with their publicly                         // 247  // 255\n  // facing names...                                                                                 // 248  // 256\n  return {                                                                                           // 249  // 257\n    upgradeDom: upgradeDomInternal,                                                                  // 250  // 258\n    upgradeElement: upgradeElementInternal,                                                          // 251  // 259\n    upgradeAllRegistered: upgradeAllRegisteredInternal,                                              // 252  // 260\n    registerUpgradedCallback: registerUpgradedCallbackInternal,                                      // 253  // 261\n    register: registerInternal,                                                                      // 254  // 262\n    downgradeElements: downgradeNodesInternal                                                        // 255  // 263\n  };                                                                                                 // 256  // 264\n})();                                                                                                // 257  // 265\n                                                                                                     // 258  // 266\nwindow.addEventListener('load', function() {                                                         // 259  // 267\n  'use strict';                                                                                      // 260  // 268\n                                                                                                     // 261  // 269\n  /**                                                                                                // 262  // 270\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features                     // 263  // 271\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL                     // 264  // 272\n   * components requiring JavaScript.                                                                // 265  // 273\n   */                                                                                                // 266  // 274\n  if ('classList' in document.createElement('div') &&                                                // 267  // 275\n      'querySelector' in document &&                                                                 // 268  // 276\n      'addEventListener' in window && Array.prototype.forEach) {                                     // 269  // 277\n    document.documentElement.classList.add('mdl-js');                                                // 270  // 278\n    componentHandler.upgradeAllRegistered();                                                         // 271  // 279\n  } else {                                                                                           // 272  // 280\n    componentHandler.upgradeElement =                                                                // 273  // 281\n        componentHandler.register = function() {};                                                   // 274  // 282\n  }                                                                                                  // 275  // 283\n});                                                                                                  // 276  // 284\n                                                                                                     // 277  // 285\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js      // 278  // 286\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from                         // 279  // 287\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/                              // 280  // 288\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating          // 281  // 289\n                                                                                                     // 282  // 290\n// requestAnimationFrame polyfill by Erik Möller.                                                    // 283  // 291\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon                       // 284  // 292\n                                                                                                     // 285  // 293\n// MIT license                                                                                       // 286  // 294\n                                                                                                     // 287  // 295\n(function() {                                                                                        // 288  // 296\n'use strict';                                                                                        // 289  // 297\n                                                                                                     // 290  // 298\nif (!Date.now) {                                                                                     // 291  // 299\n  Date.now = function() { return new Date().getTime(); };                                            // 292  // 300\n}                                                                                                    // 293  // 301\n                                                                                                     // 294  // 302\nvar vendors = ['webkit', 'moz'];                                                                     // 295  // 303\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {                          // 296  // 304\n  var vp = vendors[i];                                                                               // 297  // 305\n  window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];                               // 298  // 306\n  window.cancelAnimationFrame = (window[vp + 'CancelAnimationFrame'] ||                              // 299  // 307\n  window[vp + 'CancelRequestAnimationFrame']);                                                       // 300  // 308\n}                                                                                                    // 301  // 309\n                                                                                                     // 302  // 310\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  var lastTime = 0;                                                                                  // 304  // 312\n  window.requestAnimationFrame = function(callback) {                                                // 305  // 313\n      var now = Date.now();                                                                          // 306  // 314\n      var nextTime = Math.max(lastTime + 16, now);                                                   // 307  // 315\n      return setTimeout(function() { callback(lastTime = nextTime); },                               // 308  // 316\n                        nextTime - now);                                                             // 309  // 317\n    };                                                                                               // 310  // 318\n  window.cancelAnimationFrame = clearTimeout;                                                        // 311  // 319\n}                                                                                                    // 312  // 320\n                                                                                                     // 313  // 321\n})();                                                                                                // 314  // 322\n                                                                                                     // 315  // 323\n                                                                                                     // 316  // 324\n/**                                                                                                  // 317  // 325\n * @license                                                                                          // 318  // 326\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 319  // 327\n *                                                                                                   // 320  // 328\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 321  // 329\n * you may not use this file except in compliance with the License.                                  // 322  // 330\n * You may obtain a copy of the License at                                                           // 323  // 331\n *                                                                                                   // 324  // 332\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 325  // 333\n *                                                                                                   // 326  // 334\n * Unless required by applicable law or agreed to in writing, software                               // 327  // 335\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 328  // 336\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 329  // 337\n * See the License for the specific language governing permissions and                               // 330  // 338\n * limitations under the License.                                                                    // 331  // 339\n */                                                                                                  // 332  // 340\n                                                                                                     // 333  // 341\n/**                                                                                                  // 334  // 342\n * Class constructor for Button MDL component.                                                       // 335  // 343\n * Implements MDL component design pattern defined at:                                               // 336  // 344\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 337  // 345\n * @param {HTMLElement} element The element that will be upgraded.                                   // 338  // 346\n */                                                                                                  // 339  // 347\nfunction MaterialButton(element) {                                                                   // 340  // 348\n  'use strict';                                                                                      // 341  // 349\n                                                                                                     // 342  // 350\n  this.element_ = element;                                                                           // 343  // 351\n                                                                                                     // 344  // 352\n  // Initialize instance.                                                                            // 345  // 353\n  this.init();                                                                                       // 346  // 354\n}                                                                                                    // 347  // 355\n                                                                                                     // 348  // 356\n/**                                                                                                  // 349  // 357\n * Store constants in one place so they can be updated easily.                                       // 350  // 358\n * @enum {string | number}                                                                           // 351  // 359\n * @private                                                                                          // 352  // 360\n */                                                                                                  // 353  // 361\nMaterialButton.prototype.Constant_ = {                                                               // 354  // 362\n  // None for now.                                                                                   // 355  // 363\n};                                                                                                   // 356  // 364\n                                                                                                     // 357  // 365\n/**                                                                                                  // 358  // 366\n * Store strings for class names defined by this component that are used in                          // 359  // 367\n * JavaScript. This allows us to simply change it in one place should we                             // 360  // 368\n * decide to modify at a later date.                                                                 // 361  // 369\n * @enum {string}                                                                                    // 362  // 370\n * @private                                                                                          // 363  // 371\n */                                                                                                  // 364  // 372\nMaterialButton.prototype.CssClasses_ = {                                                             // 365  // 373\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 366  // 374\n  RIPPLE_CONTAINER: 'mdl-button__ripple-container',                                                  // 367  // 375\n  RIPPLE: 'mdl-ripple'                                                                               // 368  // 376\n};                                                                                                   // 369  // 377\n                                                                                                     // 370  // 378\n/**                                                                                                  // 371  // 379\n * Handle blur of element.                                                                           // 372  // 380\n * @param {HTMLElement} element The instance of a button we want to blur.                            // 373  // 381\n * @private                                                                                          // 374  // 382\n */                                                                                                  // 375  // 383\nMaterialButton.prototype.blurHandler = function(event) {                                             // 376  // 384\n  'use strict';                                                                                      // 377  // 385\n                                                                                                     // 378  // 386\n  if (event) {                                                                                       // 379  // 387\n    this.element_.blur();                                                                            // 380  // 388\n  }                                                                                                  // 381  // 389\n};                                                                                                   // 382  // 390\n                                                                                                     // 383  // 391\n// Public methods.                                                                                   // 384  // 392\n                                                                                                     // 385  // 393\n/**                                                                                                  // 386  // 394\n * Disable button.                                                                                   // 387  // 395\n * @public                                                                                           // 388  // 396\n */                                                                                                  // 389  // 397\nMaterialButton.prototype.disable = function() {                                                      // 390  // 398\n  'use strict';                                                                                      // 391  // 399\n                                                                                                     // 392  // 400\n  this.element_.disabled = true;                                                                     // 393  // 401\n};                                                                                                   // 394  // 402\n                                                                                                     // 395  // 403\n/**                                                                                                  // 396  // 404\n * Enable button.                                                                                    // 397  // 405\n * @public                                                                                           // 398  // 406\n */                                                                                                  // 399  // 407\nMaterialButton.prototype.enable = function() {                                                       // 400  // 408\n  'use strict';                                                                                      // 401  // 409\n                                                                                                     // 402  // 410\n  this.element_.disabled = false;                                                                    // 403  // 411\n};                                                                                                   // 404  // 412\n                                                                                                     // 405  // 413\n/**                                                                                                  // 406  // 414\n * Initialize element.                                                                               // 407  // 415\n */                                                                                                  // 408  // 416\nMaterialButton.prototype.init = function() {                                                         // 409  // 417\n  'use strict';                                                                                      // 410  // 418\n                                                                                                     // 411  // 419\n  if (this.element_) {                                                                               // 412  // 420\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {                          // 413  // 421\n      var rippleContainer = document.createElement('span');                                          // 414  // 422\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);                              // 415  // 423\n      this.rippleElement_ = document.createElement('span');                                          // 416  // 424\n      this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);                                    // 417  // 425\n      rippleContainer.appendChild(this.rippleElement_);                                              // 418  // 426\n      this.boundRippleBlurHandler = this.blurHandler.bind(this);                                     // 419  // 427\n      this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);                  // 420  // 428\n      this.element_.appendChild(rippleContainer);                                                    // 421  // 429\n    }                                                                                                // 422  // 430\n    this.boundButtonBlurHandler = this.blurHandler.bind(this);                                       // 423  // 431\n    this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);                          // 424  // 432\n    this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);                       // 425  // 433\n  }                                                                                                  // 426  // 434\n};                                                                                                   // 427  // 435\n                                                                                                     // 428  // 436\n/**                                                                                                  // 429  // 437\n * Downgrade the element.                                                                            // 430  // 438\n */                                                                                                  // 431  // 439\nMaterialButton.prototype.mdlDowngrade_ = function() {                                                // 432  // 440\n  'use strict';                                                                                      // 433  // 441\n  if (this.rippleElement_) {                                                                         // 434  // 442\n    this.rippleElement_.removeEventListener('mouseup', this.boundRippleBlurHandler);                 // 435  // 443\n  }                                                                                                  // 436  // 444\n  this.element_.removeEventListener('mouseup', this.boundButtonBlurHandler);                         // 437  // 445\n  this.element_.removeEventListener('mouseleave', this.boundButtonBlurHandler);                      // 438  // 446\n};                                                                                                   // 439  // 447\n                                                                                                     // 440  // 448\n// The component registers itself. It can assume componentHandler is available                       // 441  // 449\n// in the global scope.                                                                              // 442  // 450\ncomponentHandler.register({                                                                          // 443  // 451\n  constructor: MaterialButton,                                                                       // 444  // 452\n  classAsString: 'MaterialButton',                                                                   // 445  // 453\n  cssClass: 'mdl-js-button'                                                                          // 446  // 454\n});                                                                                                  // 447  // 455\n                                                                                                     // 448  // 456\n/**                                                                                                  // 449  // 457\n * @license                                                                                          // 450  // 458\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 451  // 459\n *                                                                                                   // 452  // 460\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 453  // 461\n * you may not use this file except in compliance with the License.                                  // 454  // 462\n * You may obtain a copy of the License at                                                           // 455  // 463\n *                                                                                                   // 456  // 464\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 457  // 465\n *                                                                                                   // 458  // 466\n * Unless required by applicable law or agreed to in writing, software                               // 459  // 467\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 460  // 468\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 461  // 469\n * See the License for the specific language governing permissions and                               // 462  // 470\n * limitations under the License.                                                                    // 463  // 471\n */                                                                                                  // 464  // 472\n                                                                                                     // 465  // 473\n/**                                                                                                  // 466  // 474\n * Class constructor for Checkbox MDL component.                                                     // 467  // 475\n * Implements MDL component design pattern defined at:                                               // 468  // 476\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 469  // 477\n * @param {HTMLElement} element The element that will be upgraded.                                   // 470  // 478\n */                                                                                                  // 471  // 479\nfunction MaterialCheckbox(element) {                                                                 // 472  // 480\n  'use strict';                                                                                      // 473  // 481\n                                                                                                     // 474  // 482\n  this.element_ = element;                                                                           // 475  // 483\n                                                                                                     // 476  // 484\n  // Initialize instance.                                                                            // 477  // 485\n  this.init();                                                                                       // 478  // 486\n}                                                                                                    // 479  // 487\n                                                                                                     // 480  // 488\n/**                                                                                                  // 481  // 489\n * Store constants in one place so they can be updated easily.                                       // 482  // 490\n * @enum {string | number}                                                                           // 483  // 491\n * @private                                                                                          // 484  // 492\n */                                                                                                  // 485  // 493\nMaterialCheckbox.prototype.Constant_ = {                                                             // 486  // 494\n  TINY_TIMEOUT: 0.001                                                                                // 487  // 495\n};                                                                                                   // 488  // 496\n                                                                                                     // 489  // 497\n/**                                                                                                  // 490  // 498\n * Store strings for class names defined by this component that are used in                          // 491  // 499\n * JavaScript. This allows us to simply change it in one place should we                             // 492  // 500\n * decide to modify at a later date.                                                                 // 493  // 501\n * @enum {string}                                                                                    // 494  // 502\n * @private                                                                                          // 495  // 503\n */                                                                                                  // 496  // 504\nMaterialCheckbox.prototype.CssClasses_ = {                                                           // 497  // 505\n  INPUT: 'mdl-checkbox__input',                                                                      // 498  // 506\n  BOX_OUTLINE: 'mdl-checkbox__box-outline',                                                          // 499  // 507\n  FOCUS_HELPER: 'mdl-checkbox__focus-helper',                                                        // 500  // 508\n  TICK_OUTLINE: 'mdl-checkbox__tick-outline',                                                        // 501  // 509\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 502  // 510\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 503  // 511\n  RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',                                                // 504  // 512\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 505  // 513\n  RIPPLE: 'mdl-ripple',                                                                              // 506  // 514\n  IS_FOCUSED: 'is-focused',                                                                          // 507  // 515\n  IS_DISABLED: 'is-disabled',                                                                        // 508  // 516\n  IS_CHECKED: 'is-checked',                                                                          // 509  // 517\n  IS_UPGRADED: 'is-upgraded'                                                                         // 510  // 518\n};                                                                                                   // 511  // 519\n                                                                                                     // 512  // 520\n/**                                                                                                  // 513  // 521\n * Handle change of state.                                                                           // 514  // 522\n * @param {Event} event The event that fired.                                                        // 515  // 523\n * @private                                                                                          // 516  // 524\n */                                                                                                  // 517  // 525\nMaterialCheckbox.prototype.onChange_ = function(event) {                                             // 518  // 526\n  'use strict';                                                                                      // 519  // 527\n                                                                                                     // 520  // 528\n  this.updateClasses_();                                                                             // 521  // 529\n};                                                                                                   // 522  // 530\n                                                                                                     // 523  // 531\n/**                                                                                                  // 524  // 532\n * Handle focus of element.                                                                          // 525  // 533\n * @param {Event} event The event that fired.                                                        // 526  // 534\n * @private                                                                                          // 527  // 535\n */                                                                                                  // 528  // 536\nMaterialCheckbox.prototype.onFocus_ = function(event) {                                              // 529  // 537\n  'use strict';                                                                                      // 530  // 538\n                                                                                                     // 531  // 539\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 532  // 540\n};                                                                                                   // 533  // 541\n                                                                                                     // 534  // 542\n/**                                                                                                  // 535  // 543\n * Handle lost focus of element.                                                                     // 536  // 544\n * @param {Event} event The event that fired.                                                        // 537  // 545\n * @private                                                                                          // 538  // 546\n */                                                                                                  // 539  // 547\nMaterialCheckbox.prototype.onBlur_ = function(event) {                                               // 540  // 548\n  'use strict';                                                                                      // 541  // 549\n                                                                                                     // 542  // 550\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 543  // 551\n};                                                                                                   // 544  // 552\n                                                                                                     // 545  // 553\n/**                                                                                                  // 546  // 554\n * Handle mouseup.                                                                                   // 547  // 555\n * @param {Event} event The event that fired.                                                        // 548  // 556\n * @private                                                                                          // 549  // 557\n */                                                                                                  // 550  // 558\nMaterialCheckbox.prototype.onMouseUp_ = function(event) {                                            // 551  // 559\n  'use strict';                                                                                      // 552  // 560\n                                                                                                     // 553  // 561\n  this.blur_();                                                                                      // 554  // 562\n};                                                                                                   // 555  // 563\n                                                                                                     // 556  // 564\n/**                                                                                                  // 557  // 565\n * Handle class updates.                                                                             // 558  // 566\n * @param {HTMLElement} button The button whose classes we should update.                            // 559  // 567\n * @param {HTMLElement} label The label whose classes we should update.                              // 560  // 568\n * @private                                                                                          // 561  // 569\n */                                                                                                  // 562  // 570\nMaterialCheckbox.prototype.updateClasses_ = function() {                                             // 563  // 571\n  'use strict';                                                                                      // 564  // 572\n                                                                                                     // 565  // 573\n  if (this.inputElement_.disabled) {                                                                 // 566  // 574\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);                                       // 567  // 575\n  } else {                                                                                           // 568  // 576\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);                                    // 569  // 577\n  }                                                                                                  // 570  // 578\n                                                                                                     // 571  // 579\n  if (this.inputElement_.checked) {                                                                  // 572  // 580\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);                                        // 573  // 581\n  } else {                                                                                           // 574  // 582\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);                                     // 575  // 583\n  }                                                                                                  // 576  // 584\n};                                                                                                   // 577  // 585\n                                                                                                     // 578  // 586\n/**                                                                                                  // 579  // 587\n * Add blur.                                                                                         // 580  // 588\n * @private                                                                                          // 581  // 589\n */                                                                                                  // 582  // 590\nMaterialCheckbox.prototype.blur_ = function(event) {                                                 // 583  // 591\n  'use strict';                                                                                      // 584  // 592\n                                                                                                     // 585  // 593\n  // TODO: figure out why there's a focus event being fired after our blur,                          // 586  // 594\n  // so that we can avoid this hack.                                                                 // 587  // 595\n  window.setTimeout(function() {                                                                     // 588  // 596\n    this.inputElement_.blur();                                                                       // 589  // 597\n  }.bind(this), this.Constant_.TINY_TIMEOUT);                                                        // 590  // 598\n};                                                                                                   // 591  // 599\n                                                                                                     // 592  // 600\n// Public methods.                                                                                   // 593  // 601\n                                                                                                     // 594  // 602\n/**                                                                                                  // 595  // 603\n * Disable checkbox.                                                                                 // 596  // 604\n * @public                                                                                           // 597  // 605\n */                                                                                                  // 598  // 606\nMaterialCheckbox.prototype.disable = function() {                                                    // 599  // 607\n  'use strict';                                                                                      // 600  // 608\n                                                                                                     // 601  // 609\n  this.inputElement_.disabled = true;                                                                // 602  // 610\n  this.updateClasses_();                                                                             // 603  // 611\n};                                                                                                   // 604  // 612\n                                                                                                     // 605  // 613\n/**                                                                                                  // 606  // 614\n * Enable checkbox.                                                                                  // 607  // 615\n * @public                                                                                           // 608  // 616\n */                                                                                                  // 609  // 617\nMaterialCheckbox.prototype.enable = function() {                                                     // 610  // 618\n  'use strict';                                                                                      // 611  // 619\n                                                                                                     // 612  // 620\n  this.inputElement_.disabled = false;                                                               // 613  // 621\n  this.updateClasses_();                                                                             // 614  // 622\n};                                                                                                   // 615  // 623\n                                                                                                     // 616  // 624\n/**                                                                                                  // 617  // 625\n * Check checkbox.                                                                                   // 618  // 626\n * @public                                                                                           // 619  // 627\n */                                                                                                  // 620  // 628\nMaterialCheckbox.prototype.check = function() {                                                      // 621  // 629\n  'use strict';                                                                                      // 622  // 630\n                                                                                                     // 623  // 631\n  this.inputElement_.checked = true;                                                                 // 624  // 632\n  this.updateClasses_();                                                                             // 625  // 633\n};                                                                                                   // 626  // 634\n                                                                                                     // 627  // 635\n/**                                                                                                  // 628  // 636\n * Uncheck checkbox.                                                                                 // 629  // 637\n * @public                                                                                           // 630  // 638\n */                                                                                                  // 631  // 639\nMaterialCheckbox.prototype.uncheck = function() {                                                    // 632  // 640\n  'use strict';                                                                                      // 633  // 641\n                                                                                                     // 634  // 642\n  this.inputElement_.checked = false;                                                                // 635  // 643\n  this.updateClasses_();                                                                             // 636  // 644\n};                                                                                                   // 637  // 645\n                                                                                                     // 638  // 646\n/**                                                                                                  // 639  // 647\n * Initialize element.                                                                               // 640  // 648\n */                                                                                                  // 641  // 649\nMaterialCheckbox.prototype.init = function() {                                                       // 642  // 650\n  'use strict';                                                                                      // 643  // 651\n                                                                                                     // 644  // 652\n  if (this.element_) {                                                                               // 645  // 653\n    this.inputElement_ = this.element_.querySelector('.' +                                           // 646  // 654\n        this.CssClasses_.INPUT);                                                                     // 647  // 655\n                                                                                                     // 648  // 656\n    var boxOutline = document.createElement('span');                                                 // 649  // 657\n    boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);                                          // 650  // 658\n                                                                                                     // 651  // 659\n    var tickContainer = document.createElement('span');                                              // 652  // 660\n    tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);                                      // 653  // 661\n                                                                                                     // 654  // 662\n    var tickOutline = document.createElement('span');                                                // 655  // 663\n    tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);                                        // 656  // 664\n                                                                                                     // 657  // 665\n    boxOutline.appendChild(tickOutline);                                                             // 658  // 666\n                                                                                                     // 659  // 667\n    this.element_.appendChild(tickContainer);                                                        // 660  // 668\n    this.element_.appendChild(boxOutline);                                                           // 661  // 669\n                                                                                                     // 662  // 670\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {                          // 663  // 671\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);                            // 664  // 672\n      this.rippleContainerElement_ = document.createElement('span');                                 // 665  // 673\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);                 // 666  // 674\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);                    // 667  // 675\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);                    // 668  // 676\n      this.boundRippleMouseUp = this.onMouseUp_.bind(this);                                          // 669  // 677\n      this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);             // 670  // 678\n                                                                                                     // 671  // 679\n      var ripple = document.createElement('span');                                                   // 672  // 680\n      ripple.classList.add(this.CssClasses_.RIPPLE);                                                 // 673  // 681\n                                                                                                     // 674  // 682\n      this.rippleContainerElement_.appendChild(ripple);                                              // 675  // 683\n      this.element_.appendChild(this.rippleContainerElement_);                                       // 676  // 684\n    }                                                                                                // 677  // 685\n    this.boundInputOnChange = this.onChange_.bind(this);                                             // 678  // 686\n    this.boundInputOnFocus = this.onFocus_.bind(this);                                               // 679  // 687\n    this.boundInputOnBlur = this.onBlur_.bind(this);                                                 // 680  // 688\n    this.boundElementMouseUp = this.onMouseUp_.bind(this);                                           // 681  // 689\n    this.inputElement_.addEventListener('change', this.boundInputOnChange);                          // 682  // 690\n    this.inputElement_.addEventListener('focus', this.boundInputOnFocus);                            // 683  // 691\n    this.inputElement_.addEventListener('blur', this.boundInputOnBlur);                              // 684  // 692\n    this.element_.addEventListener('mouseup', this.boundElementMouseUp);                             // 685  // 693\n                                                                                                     // 686  // 694\n    this.updateClasses_();                                                                           // 687  // 695\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 688  // 696\n  }                                                                                                  // 689  // 697\n};                                                                                                   // 690  // 698\n                                                                                                     // 691  // 699\n/*                                                                                                   // 692  // 700\n* Downgrade the component.                                                                           // 693  // 701\n*/                                                                                                   // 694  // 702\nMaterialCheckbox.prototype.mdlDowngrade_ = function() {                                              // 695  // 703\n  'use strict';                                                                                      // 696  // 704\n  if (this.rippleContainerElement_) {                                                                // 697  // 705\n    this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);            // 698  // 706\n  }                                                                                                  // 699  // 707\n  this.inputElement_.removeEventListener('change', this.boundInputOnChange);                         // 700  // 708\n  this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);                           // 701  // 709\n  this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);                             // 702  // 710\n  this.element_.removeEventListener('mouseup', this.boundElementMouseUp);                            // 703  // 711\n};                                                                                                   // 704  // 712\n                                                                                                     // 705  // 713\n// The component registers itself. It can assume componentHandler is available                       // 706  // 714\n// in the global scope.                                                                              // 707  // 715\ncomponentHandler.register({                                                                          // 708  // 716\n  constructor: MaterialCheckbox,                                                                     // 709  // 717\n  classAsString: 'MaterialCheckbox',                                                                 // 710  // 718\n  cssClass: 'mdl-js-checkbox'                                                                        // 711  // 719\n});                                                                                                  // 712  // 720\n                                                                                                     // 713  // 721\n/**                                                                                                  // 714  // 722\n * @license                                                                                          // 715  // 723\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 716  // 724\n *                                                                                                   // 717  // 725\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 718  // 726\n * you may not use this file except in compliance with the License.                                  // 719  // 727\n * You may obtain a copy of the License at                                                           // 720  // 728\n *                                                                                                   // 721  // 729\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 722  // 730\n *                                                                                                   // 723  // 731\n * Unless required by applicable law or agreed to in writing, software                               // 724  // 732\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 725  // 733\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 726  // 734\n * See the License for the specific language governing permissions and                               // 727  // 735\n * limitations under the License.                                                                    // 728  // 736\n */                                                                                                  // 729  // 737\n                                                                                                     // 730  // 738\n/**                                                                                                  // 731  // 739\n * Class constructor for icon toggle MDL component.                                                  // 732  // 740\n * Implements MDL component design pattern defined at:                                               // 733  // 741\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 734  // 742\n * @param {HTMLElement} element The element that will be upgraded.                                   // 735  // 743\n */                                                                                                  // 736  // 744\nfunction MaterialIconToggle(element) {                                                               // 737  // 745\n  'use strict';                                                                                      // 738  // 746\n                                                                                                     // 739  // 747\n  this.element_ = element;                                                                           // 740  // 748\n                                                                                                     // 741  // 749\n  // Initialize instance.                                                                            // 742  // 750\n  this.init();                                                                                       // 743  // 751\n}                                                                                                    // 744  // 752\n                                                                                                     // 745  // 753\n/**                                                                                                  // 746  // 754\n * Store constants in one place so they can be updated easily.                                       // 747  // 755\n * @enum {string | number}                                                                           // 748  // 756\n * @private                                                                                          // 749  // 757\n */                                                                                                  // 750  // 758\nMaterialIconToggle.prototype.Constant_ = {                                                           // 751  // 759\n  TINY_TIMEOUT: 0.001                                                                                // 752  // 760\n};                                                                                                   // 753  // 761\n                                                                                                     // 754  // 762\n/**                                                                                                  // 755  // 763\n * Store strings for class names defined by this component that are used in                          // 756  // 764\n * JavaScript. This allows us to simply change it in one place should we                             // 757  // 765\n * decide to modify at a later date.                                                                 // 758  // 766\n * @enum {string}                                                                                    // 759  // 767\n * @private                                                                                          // 760  // 768\n */                                                                                                  // 761  // 769\nMaterialIconToggle.prototype.CssClasses_ = {                                                         // 762  // 770\n  INPUT: 'mdl-icon-toggle__input',                                                                   // 763  // 771\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                          // 764  // 772\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 765  // 773\n  RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',                                             // 766  // 774\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 767  // 775\n  RIPPLE: 'mdl-ripple',                                                                              // 768  // 776\n  IS_FOCUSED: 'is-focused',                                                                          // 769  // 777\n  IS_DISABLED: 'is-disabled',                                                                        // 770  // 778\n  IS_CHECKED: 'is-checked'                                                                           // 771  // 779\n};                                                                                                   // 772  // 780\n                                                                                                     // 773  // 781\n/**                                                                                                  // 774  // 782\n * Handle change of state.                                                                           // 775  // 783\n * @param {Event} event The event that fired.                                                        // 776  // 784\n * @private                                                                                          // 777  // 785\n */                                                                                                  // 778  // 786\nMaterialIconToggle.prototype.onChange_ = function(event) {                                           // 779  // 787\n  'use strict';                                                                                      // 780  // 788\n                                                                                                     // 781  // 789\n  this.updateClasses_();                                                                             // 782  // 790\n};                                                                                                   // 783  // 791\n                                                                                                     // 784  // 792\n/**                                                                                                  // 785  // 793\n * Handle focus of element.                                                                          // 786  // 794\n * @param {Event} event The event that fired.                                                        // 787  // 795\n * @private                                                                                          // 788  // 796\n */                                                                                                  // 789  // 797\nMaterialIconToggle.prototype.onFocus_ = function(event) {                                            // 790  // 798\n  'use strict';                                                                                      // 791  // 799\n                                                                                                     // 792  // 800\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 793  // 801\n};                                                                                                   // 794  // 802\n                                                                                                     // 795  // 803\n/**                                                                                                  // 796  // 804\n * Handle lost focus of element.                                                                     // 797  // 805\n * @param {Event} event The event that fired.                                                        // 798  // 806\n * @private                                                                                          // 799  // 807\n */                                                                                                  // 800  // 808\nMaterialIconToggle.prototype.onBlur_ = function(event) {                                             // 801  // 809\n  'use strict';                                                                                      // 802  // 810\n                                                                                                     // 803  // 811\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 804  // 812\n};                                                                                                   // 805  // 813\n                                                                                                     // 806  // 814\n/**                                                                                                  // 807  // 815\n * Handle mouseup.                                                                                   // 808  // 816\n * @param {Event} event The event that fired.                                                        // 809  // 817\n * @private                                                                                          // 810  // 818\n */                                                                                                  // 811  // 819\nMaterialIconToggle.prototype.onMouseUp_ = function(event) {                                          // 812  // 820\n  'use strict';                                                                                      // 813  // 821\n                                                                                                     // 814  // 822\n  this.blur_();                                                                                      // 815  // 823\n};                                                                                                   // 816  // 824\n                                                                                                     // 817  // 825\n/**                                                                                                  // 818  // 826\n * Handle class updates.                                                                             // 819  // 827\n * @param {HTMLElement} button The button whose classes we should update.                            // 820  // 828\n * @param {HTMLElement} label The label whose classes we should update.                              // 821  // 829\n * @private                                                                                          // 822  // 830\n */                                                                                                  // 823  // 831\nMaterialIconToggle.prototype.updateClasses_ = function() {                                           // 824  // 832\n  'use strict';                                                                                      // 825  // 833\n                                                                                                     // 826  // 834\n  if (this.inputElement_.disabled) {                                                                 // 827  // 835\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);                                       // 828  // 836\n  } else {                                                                                           // 829  // 837\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);                                    // 830  // 838\n  }                                                                                                  // 831  // 839\n                                                                                                     // 832  // 840\n  if (this.inputElement_.checked) {                                                                  // 833  // 841\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);                                        // 834  // 842\n  } else {                                                                                           // 835  // 843\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);                                     // 836  // 844\n  }                                                                                                  // 837  // 845\n};                                                                                                   // 838  // 846\n                                                                                                     // 839  // 847\n/**                                                                                                  // 840  // 848\n * Add blur.                                                                                         // 841  // 849\n * @private                                                                                          // 842  // 850\n */                                                                                                  // 843  // 851\nMaterialIconToggle.prototype.blur_ = function(event) {                                               // 844  // 852\n  'use strict';                                                                                      // 845  // 853\n                                                                                                     // 846  // 854\n  // TODO: figure out why there's a focus event being fired after our blur,                          // 847  // 855\n  // so that we can avoid this hack.                                                                 // 848  // 856\n  window.setTimeout(function() {                                                                     // 849  // 857\n    this.inputElement_.blur();                                                                       // 850  // 858\n  }.bind(this), this.Constant_.TINY_TIMEOUT);                                                        // 851  // 859\n};                                                                                                   // 852  // 860\n                                                                                                     // 853  // 861\n// Public methods.                                                                                   // 854  // 862\n                                                                                                     // 855  // 863\n/**                                                                                                  // 856  // 864\n * Disable icon toggle.                                                                              // 857  // 865\n * @public                                                                                           // 858  // 866\n */                                                                                                  // 859  // 867\nMaterialIconToggle.prototype.disable = function() {                                                  // 860  // 868\n  'use strict';                                                                                      // 861  // 869\n                                                                                                     // 862  // 870\n  this.inputElement_.disabled = true;                                                                // 863  // 871\n  this.updateClasses_();                                                                             // 864  // 872\n};                                                                                                   // 865  // 873\n                                                                                                     // 866  // 874\n/**                                                                                                  // 867  // 875\n * Enable icon toggle.                                                                               // 868  // 876\n * @public                                                                                           // 869  // 877\n */                                                                                                  // 870  // 878\nMaterialIconToggle.prototype.enable = function() {                                                   // 871  // 879\n  'use strict';                                                                                      // 872  // 880\n                                                                                                     // 873  // 881\n  this.inputElement_.disabled = false;                                                               // 874  // 882\n  this.updateClasses_();                                                                             // 875  // 883\n};                                                                                                   // 876  // 884\n                                                                                                     // 877  // 885\n/**                                                                                                  // 878  // 886\n * Check icon toggle.                                                                                // 879  // 887\n * @public                                                                                           // 880  // 888\n */                                                                                                  // 881  // 889\nMaterialIconToggle.prototype.check = function() {                                                    // 882  // 890\n  'use strict';                                                                                      // 883  // 891\n                                                                                                     // 884  // 892\n  this.inputElement_.checked = true;                                                                 // 885  // 893\n  this.updateClasses_();                                                                             // 886  // 894\n};                                                                                                   // 887  // 895\n                                                                                                     // 888  // 896\n/**                                                                                                  // 889  // 897\n * Uncheck icon toggle.                                                                              // 890  // 898\n * @public                                                                                           // 891  // 899\n */                                                                                                  // 892  // 900\nMaterialIconToggle.prototype.uncheck = function() {                                                  // 893  // 901\n  'use strict';                                                                                      // 894  // 902\n                                                                                                     // 895  // 903\n  this.inputElement_.checked = false;                                                                // 896  // 904\n  this.updateClasses_();                                                                             // 897  // 905\n};                                                                                                   // 898  // 906\n                                                                                                     // 899  // 907\n/**                                                                                                  // 900  // 908\n * Initialize element.                                                                               // 901  // 909\n */                                                                                                  // 902  // 910\nMaterialIconToggle.prototype.init = function() {                                                     // 903  // 911\n  'use strict';                                                                                      // 904  // 912\n                                                                                                     // 905  // 913\n  if (this.element_) {                                                                               // 906  // 914\n    this.inputElement_ =                                                                             // 907  // 915\n        this.element_.querySelector('.' + this.CssClasses_.INPUT);                                   // 908  // 916\n                                                                                                     // 909  // 917\n    if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {                       // 910  // 918\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);                            // 911  // 919\n      this.rippleContainerElement_ = document.createElement('span');                                 // 912  // 920\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);                 // 913  // 921\n      this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);                 // 914  // 922\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);                    // 915  // 923\n      this.boundRippleMouseUp = this.onMouseUp_.bind(this);                                          // 916  // 924\n      this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);             // 917  // 925\n                                                                                                     // 918  // 926\n      var ripple = document.createElement('span');                                                   // 919  // 927\n      ripple.classList.add(this.CssClasses_.RIPPLE);                                                 // 920  // 928\n                                                                                                     // 921  // 929\n      this.rippleContainerElement_.appendChild(ripple);                                              // 922  // 930\n      this.element_.appendChild(this.rippleContainerElement_);                                       // 923  // 931\n    }                                                                                                // 924  // 932\n                                                                                                     // 925  // 933\n    this.boundInputOnChange = this.onChange_.bind(this);                                             // 926  // 934\n    this.boundInputOnFocus = this.onFocus_.bind(this);                                               // 927  // 935\n    this.boundInputOnBlur = this.onBlur_.bind(this);                                                 // 928  // 936\n    this.boundElementOnMouseUp = this.onMouseUp_.bind(this);                                         // 929  // 937\n    this.inputElement_.addEventListener('change', this.boundInputOnChange);                          // 930  // 938\n    this.inputElement_.addEventListener('focus', this.boundInputOnFocus);                            // 931  // 939\n    this.inputElement_.addEventListener('blur', this.boundInputOnBlur);                              // 932  // 940\n    this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);                           // 933  // 941\n                                                                                                     // 934  // 942\n    this.updateClasses_();                                                                           // 935  // 943\n    this.element_.classList.add('is-upgraded');                                                      // 936  // 944\n  }                                                                                                  // 937  // 945\n};                                                                                                   // 938  // 946\n                                                                                                     // 939  // 947\n/*                                                                                                   // 940  // 948\n* Downgrade the component                                                                            // 941  // 949\n*/                                                                                                   // 942  // 950\nMaterialIconToggle.prototype.mdlDowngrade_ = function() {                                            // 943  // 951\n  'use strict';                                                                                      // 944  // 952\n  if (this.rippleContainerElement_) {                                                                // 945  // 953\n    this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);            // 946  // 954\n  }                                                                                                  // 947  // 955\n  this.inputElement_.removeEventListener('change', this.boundInputOnChange);                         // 948  // 956\n  this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);                           // 949  // 957\n  this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);                             // 950  // 958\n  this.element_.removeEventListener('mouseup', this.boundElementOnMouseUp);                          // 951  // 959\n};                                                                                                   // 952  // 960\n                                                                                                     // 953  // 961\n// The component registers itself. It can assume componentHandler is available                       // 954  // 962\n// in the global scope.                                                                              // 955  // 963\ncomponentHandler.register({                                                                          // 956  // 964\n  constructor: MaterialIconToggle,                                                                   // 957  // 965\n  classAsString: 'MaterialIconToggle',                                                               // 958  // 966\n  cssClass: 'mdl-js-icon-toggle'                                                                     // 959  // 967\n});                                                                                                  // 960  // 968\n                                                                                                     // 961  // 969\n/**                                                                                                  // 962  // 970\n * @license                                                                                          // 963  // 971\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 964  // 972\n *                                                                                                   // 965  // 973\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 966  // 974\n * you may not use this file except in compliance with the License.                                  // 967  // 975\n * You may obtain a copy of the License at                                                           // 968  // 976\n *                                                                                                   // 969  // 977\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 970  // 978\n *                                                                                                   // 971  // 979\n * Unless required by applicable law or agreed to in writing, software                               // 972  // 980\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 973  // 981\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 974  // 982\n * See the License for the specific language governing permissions and                               // 975  // 983\n * limitations under the License.                                                                    // 976  // 984\n */                                                                                                  // 977  // 985\n                                                                                                     // 978  // 986\n/**                                                                                                  // 979  // 987\n * Class constructor for dropdown MDL component.                                                     // 980  // 988\n * Implements MDL component design pattern defined at:                                               // 981  // 989\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 982  // 990\n * @param {HTMLElement} element The element that will be upgraded.                                   // 983  // 991\n */                                                                                                  // 984  // 992\nfunction MaterialMenu(element) {                                                                     // 985  // 993\n  'use strict';                                                                                      // 986  // 994\n                                                                                                     // 987  // 995\n  this.element_ = element;                                                                           // 988  // 996\n                                                                                                     // 989  // 997\n  // Initialize instance.                                                                            // 990  // 998\n  this.init();                                                                                       // 991  // 999\n}                                                                                                    // 992  // 1000\n                                                                                                     // 993  // 1001\n/**                                                                                                  // 994  // 1002\n * Store constants in one place so they can be updated easily.                                       // 995  // 1003\n * @enum {string | number}                                                                           // 996  // 1004\n * @private                                                                                          // 997  // 1005\n */                                                                                                  // 998  // 1006\nMaterialMenu.prototype.Constant_ = {                                                                 // 999  // 1007\n  // Total duration of the menu animation.                                                           // 1000\n  TRANSITION_DURATION_SECONDS: 0.3,                                                                  // 1001\n  // The fraction of the total duration we want to use for menu item animations.                     // 1002\n  TRANSITION_DURATION_FRACTION: 0.8,                                                                 // 1003\n  // How long the menu stays open after choosing an option (so the user can see                      // 1004\n  // the ripple).                                                                                    // 1005\n  CLOSE_TIMEOUT: 150                                                                                 // 1006\n};                                                                                                   // 1007\n                                                                                                     // 1008\n/**                                                                                                  // 1009\n * Keycodes, for code readability.                                                                   // 1010\n * @enum {number}                                                                                    // 1011\n * @private                                                                                          // 1012\n */                                                                                                  // 1013\nMaterialMenu.prototype.Keycodes_ = {                                                                 // 1014\n  ENTER: 13,                                                                                         // 1015\n  ESCAPE: 27,                                                                                        // 1016\n  SPACE: 32,                                                                                         // 1017\n  UP_ARROW: 38,                                                                                      // 1018\n  DOWN_ARROW: 40                                                                                     // 1019\n};                                                                                                   // 1020\n                                                                                                     // 1021\n/**                                                                                                  // 1022\n * Store strings for class names defined by this component that are used in                          // 1023\n * JavaScript. This allows us to simply change it in one place should we                             // 1024\n * decide to modify at a later date.                                                                 // 1025\n * @enum {string}                                                                                    // 1026\n * @private                                                                                          // 1027\n */                                                                                                  // 1028\nMaterialMenu.prototype.CssClasses_ = {                                                               // 1029\n  CONTAINER: 'mdl-menu__container',                                                                  // 1030\n  OUTLINE: 'mdl-menu__outline',                                                                      // 1031\n  ITEM: 'mdl-menu__item',                                                                            // 1032\n  ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',                                          // 1033\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 1034\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 1035\n  RIPPLE: 'mdl-ripple',                                                                              // 1036\n  // Statuses                                                                                        // 1037\n  IS_UPGRADED: 'is-upgraded',                                                                        // 1038\n  IS_VISIBLE: 'is-visible',                                                                          // 1039\n  IS_ANIMATING: 'is-animating',                                                                      // 1040\n  // Alignment options                                                                               // 1041\n  BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.                                     // 1042\n  BOTTOM_RIGHT: 'mdl-menu--bottom-right',                                                            // 1043\n  TOP_LEFT: 'mdl-menu--top-left',                                                                    // 1044\n  TOP_RIGHT: 'mdl-menu--top-right',                                                                  // 1045\n  UNALIGNED: 'mdl-menu--unaligned'                                                                   // 1046\n};                                                                                                   // 1047\n                                                                                                     // 1048\n/**                                                                                                  // 1049\n * Initialize element.                                                                               // 1050\n */                                                                                                  // 1051\nMaterialMenu.prototype.init = function() {                                                           // 1052\n  'use strict';                                                                                      // 1053\n                                                                                                     // 1054\n  if (this.element_) {                                                                               // 1055\n    // Create container for the menu.                                                                // 1056\n    var container = document.createElement('div');                                                   // 1057\n    container.classList.add(this.CssClasses_.CONTAINER);                                             // 1058\n    this.element_.parentElement.insertBefore(container, this.element_);                              // 1059\n    this.element_.parentElement.removeChild(this.element_);                                          // 1060\n    container.appendChild(this.element_);                                                            // 1061\n    this.container_ = container;                                                                     // 1062\n                                                                                                     // 1063\n    // Create outline for the menu (shadow and background).                                          // 1064\n    var outline = document.createElement('div');                                                     // 1065\n    outline.classList.add(this.CssClasses_.OUTLINE);                                                 // 1066\n    this.outline_ = outline;                                                                         // 1067\n    container.insertBefore(outline, this.element_);                                                  // 1068\n                                                                                                     // 1069\n    // Find the \"for\" element and bind events to it.                                                 // 1070\n    var forElId = this.element_.getAttribute('for');                                                 // 1071\n    var forEl = null;                                                                                // 1072\n    if (forElId) {                                                                                   // 1073\n      forEl = document.getElementById(forElId);                                                      // 1074\n      if (forEl) {                                                                                   // 1075\n        this.forElement_ = forEl;                                                                    // 1076\n        forEl.addEventListener('click', this.handleForClick_.bind(this));                            // 1077\n        forEl.addEventListener('keydown',                                                            // 1078\n            this.handleForKeyboardEvent_.bind(this));                                                // 1079\n      }                                                                                              // 1080\n    }                                                                                                // 1081\n                                                                                                     // 1082\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);                         // 1083\n                                                                                                     // 1084\n    for (var i = 0; i < items.length; i++) {                                                         // 1085\n      // Add a listener to each menu item.                                                           // 1086\n      items[i].addEventListener('click', this.handleItemClick_.bind(this));                          // 1087\n      // Add a tab index to each menu item.                                                          // 1088\n      items[i].tabIndex = '-1';                                                                      // 1089\n      // Add a keyboard listener to each menu item.                                                  // 1090\n      items[i].addEventListener('keydown',                                                           // 1091\n          this.handleItemKeyboardEvent_.bind(this));                                                 // 1092\n    }                                                                                                // 1093\n                                                                                                     // 1094\n    // Add ripple classes to each item, if the user has enabled ripples.                             // 1095\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {                          // 1096\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);                            // 1097\n                                                                                                     // 1098\n      for (i = 0; i < items.length; i++) {                                                           // 1099\n        var item = items[i];                                                                         // 1100\n                                                                                                     // 1101\n        var rippleContainer = document.createElement('span');                                        // 1102\n        rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);                       // 1103\n                                                                                                     // 1104\n        var ripple = document.createElement('span');                                                 // 1105\n        ripple.classList.add(this.CssClasses_.RIPPLE);                                               // 1106\n        rippleContainer.appendChild(ripple);                                                         // 1107\n                                                                                                     // 1108\n        item.appendChild(rippleContainer);                                                           // 1109\n        item.classList.add(this.CssClasses_.RIPPLE_EFFECT);                                          // 1110\n      }                                                                                              // 1111\n    }                                                                                                // 1112\n                                                                                                     // 1113\n    // Copy alignment classes to the container, so the outline can use them.                         // 1114\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {                            // 1115\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);                                     // 1116\n    }                                                                                                // 1117\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {                           // 1118\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);                                    // 1119\n    }                                                                                                // 1120\n    if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {                               // 1121\n      this.outline_.classList.add(this.CssClasses_.TOP_LEFT);                                        // 1122\n    }                                                                                                // 1123\n    if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {                              // 1124\n      this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);                                       // 1125\n    }                                                                                                // 1126\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {                              // 1127\n      this.outline_.classList.add(this.CssClasses_.UNALIGNED);                                       // 1128\n    }                                                                                                // 1129\n                                                                                                     // 1130\n    container.classList.add(this.CssClasses_.IS_UPGRADED);                                           // 1131\n  }                                                                                                  // 1132\n};                                                                                                   // 1133\n                                                                                                     // 1134\n/**                                                                                                  // 1135\n * Handles a click on the \"for\" element, by positioning the menu and then                            // 1136\n * toggling it.                                                                                      // 1137\n * @private                                                                                          // 1138\n */                                                                                                  // 1139\nMaterialMenu.prototype.handleForClick_ = function(evt) {                                             // 1140\n  'use strict';                                                                                      // 1141\n                                                                                                     // 1142\n  if (this.element_ && this.forElement_) {                                                           // 1143\n    var rect = this.forElement_.getBoundingClientRect();                                             // 1144\n    var forRect = this.forElement_.parentElement.getBoundingClientRect();                            // 1145\n                                                                                                     // 1146\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {                              // 1147\n      // Do not position the menu automatically. Requires the developer to                           // 1148\n      // manually specify position.                                                                  // 1149\n    } else if (this.element_.classList.contains(                                                     // 1150\n        this.CssClasses_.BOTTOM_RIGHT)) {                                                            // 1151\n      // Position below the \"for\" element, aligned to its right.                                     // 1152\n      this.container_.style.right = (forRect.right - rect.right) + 'px';                             // 1153\n      this.container_.style.top =                                                                    // 1154\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';                         // 1155\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {                        // 1156\n      // Position above the \"for\" element, aligned to its left.                                      // 1157\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';                               // 1158\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';                             // 1159\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {                       // 1160\n      // Position above the \"for\" element, aligned to its right.                                     // 1161\n      this.container_.style.right = (forRect.right - rect.right) + 'px';                             // 1162\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';                             // 1163\n    } else {                                                                                         // 1164\n      // Default: position below the \"for\" element, aligned to its left.                             // 1165\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';                               // 1166\n      this.container_.style.top =                                                                    // 1167\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';                         // 1168\n    }                                                                                                // 1169\n  }                                                                                                  // 1170\n                                                                                                     // 1171\n  this.toggle(evt);                                                                                  // 1172\n};                                                                                                   // 1173\n                                                                                                     // 1174\n/**                                                                                                  // 1175\n * Handles a keyboard event on the \"for\" element.                                                    // 1176\n * @private                                                                                          // 1177\n */                                                                                                  // 1178\nMaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {                                     // 1179\n  'use strict';                                                                                      // 1180\n                                                                                                     // 1181\n  if (this.element_ && this.container_ && this.forElement_) {                                        // 1182\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +                         // 1183\n      ':not([disabled])');                                                                           // 1184\n                                                                                                     // 1185\n    if (items && items.length > 0 &&                                                                 // 1186\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {                           // 1187\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {                                                 // 1188\n        evt.preventDefault();                                                                        // 1189\n        items[items.length - 1].focus();                                                             // 1190\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {                                        // 1191\n        evt.preventDefault();                                                                        // 1192\n        items[0].focus();                                                                            // 1193\n      }                                                                                              // 1194\n    }                                                                                                // 1195\n  }                                                                                                  // 1196\n};                                                                                                   // 1197\n                                                                                                     // 1198\n/**                                                                                                  // 1199\n * Handles a keyboard event on an item.                                                              // 1200\n * @private                                                                                          // 1201\n */                                                                                                  // 1202\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {                                    // 1203\n  'use strict';                                                                                      // 1204\n                                                                                                     // 1205\n  if (this.element_ && this.container_) {                                                            // 1206\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +                         // 1207\n      ':not([disabled])');                                                                           // 1208\n                                                                                                     // 1209\n    if (items && items.length > 0 &&                                                                 // 1210\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {                           // 1211\n      var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);                      // 1212\n                                                                                                     // 1213\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {                                                 // 1214\n        evt.preventDefault();                                                                        // 1215\n        if (currentIndex > 0) {                                                                      // 1216\n          items[currentIndex - 1].focus();                                                           // 1217\n        } else {                                                                                     // 1218\n          items[items.length - 1].focus();                                                           // 1219\n        }                                                                                            // 1220\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {                                        // 1221\n        evt.preventDefault();                                                                        // 1222\n        if (items.length > currentIndex + 1) {                                                       // 1223\n          items[currentIndex + 1].focus();                                                           // 1224\n        } else {                                                                                     // 1225\n          items[0].focus();                                                                          // 1226\n        }                                                                                            // 1227\n      } else if (evt.keyCode === this.Keycodes_.SPACE ||                                             // 1228\n            evt.keyCode === this.Keycodes_.ENTER) {                                                  // 1229\n        evt.preventDefault();                                                                        // 1230\n        // Send mousedown and mouseup to trigger ripple.                                             // 1231\n        var e = new MouseEvent('mousedown');                                                         // 1232\n        evt.target.dispatchEvent(e);                                                                 // 1233\n        e = new MouseEvent('mouseup');                                                               // 1234\n        evt.target.dispatchEvent(e);                                                                 // 1235\n        // Send click.                                                                               // 1236\n        evt.target.click();                                                                          // 1237\n      } else if (evt.keyCode === this.Keycodes_.ESCAPE) {                                            // 1238\n        evt.preventDefault();                                                                        // 1239\n        this.hide();                                                                                 // 1240\n      }                                                                                              // 1241\n    }                                                                                                // 1242\n  }                                                                                                  // 1243\n};                                                                                                   // 1244\n                                                                                                     // 1245\n/**                                                                                                  // 1246\n * Handles a click event on an item.                                                                 // 1247\n * @private                                                                                          // 1248\n */                                                                                                  // 1249\nMaterialMenu.prototype.handleItemClick_ = function(evt) {                                            // 1250\n  'use strict';                                                                                      // 1251\n                                                                                                     // 1252\n  if (evt.target.getAttribute('disabled') !== null) {                                                // 1253\n    evt.stopPropagation();                                                                           // 1254\n  } else {                                                                                           // 1255\n    // Wait some time before closing menu, so the user can see the ripple.                           // 1256\n    this.closing_ = true;                                                                            // 1257\n    window.setTimeout(function(evt) {                                                                // 1258\n      this.hide();                                                                                   // 1259\n      this.closing_ = false;                                                                         // 1260\n    }.bind(this), this.Constant_.CLOSE_TIMEOUT);                                                     // 1261\n  }                                                                                                  // 1262\n};                                                                                                   // 1263\n                                                                                                     // 1264\n/**                                                                                                  // 1265\n * Calculates the initial clip (for opening the menu) or final clip (for closing                     // 1266\n * it), and applies it. This allows us to animate from or to the correct point,                      // 1267\n * that is, the point it's aligned to in the \"for\" element.                                          // 1268\n * @private                                                                                          // 1269\n */                                                                                                  // 1270\nMaterialMenu.prototype.applyClip_ = function(height, width) {                                        // 1271\n  'use strict';                                                                                      // 1272\n                                                                                                     // 1273\n  if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {                                // 1274\n    // Do not clip.                                                                                  // 1275\n    this.element_.style.clip = null;                                                                 // 1276\n  } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {                      // 1277\n    // Clip to the top right corner of the menu.                                                     // 1278\n    this.element_.style.clip =                                                                       // 1279\n        'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';                                            // 1280\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {                          // 1281\n    // Clip to the bottom left corner of the menu.                                                   // 1282\n    this.element_.style.clip =                                                                       // 1283\n        'rect(' + height + 'px 0 ' + height + 'px 0)';                                               // 1284\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {                         // 1285\n    // Clip to the bottom right corner of the menu.                                                  // 1286\n    this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +                            // 1287\n        height + 'px ' + width + 'px)';                                                              // 1288\n  } else {                                                                                           // 1289\n    // Default: do not clip (same as clipping to the top left corner).                               // 1290\n    this.element_.style.clip = null;                                                                 // 1291\n  }                                                                                                  // 1292\n};                                                                                                   // 1293\n                                                                                                     // 1294\n/**                                                                                                  // 1295\n * Adds an event listener to clean up after the animation ends.                                      // 1296\n * @private                                                                                          // 1297\n */                                                                                                  // 1298\nMaterialMenu.prototype.addAnimationEndListener_ = function() {                                       // 1299\n  'use strict';                                                                                      // 1300\n                                                                                                     // 1301\n  var cleanup = function() {                                                                         // 1302\n    this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);                                   // 1303\n  }.bind(this);                                                                                      // 1304\n                                                                                                     // 1305\n  // Remove animation class once the transition is done.                                             // 1306\n  this.element_.addEventListener('transitionend', cleanup);                                          // 1307\n  this.element_.addEventListener('webkitTransitionEnd', cleanup);                                    // 1308\n};                                                                                                   // 1309\n                                                                                                     // 1310\n/**                                                                                                  // 1311\n * Displays the menu.                                                                                // 1312\n * @public                                                                                           // 1313\n */                                                                                                  // 1314\nMaterialMenu.prototype.show = function(evt) {                                                        // 1315\n  'use strict';                                                                                      // 1316\n                                                                                                     // 1317\n  if (this.element_ && this.container_ && this.outline_) {                                           // 1318\n    // Measure the inner element.                                                                    // 1319\n    var height = this.element_.getBoundingClientRect().height;                                       // 1320\n    var width = this.element_.getBoundingClientRect().width;                                         // 1321\n                                                                                                     // 1322\n    // Apply the inner element's size to the container and outline.                                  // 1323\n    this.container_.style.width = width + 'px';                                                      // 1324\n    this.container_.style.height = height + 'px';                                                    // 1325\n    this.outline_.style.width = width + 'px';                                                        // 1326\n    this.outline_.style.height = height + 'px';                                                      // 1327\n                                                                                                     // 1328\n    var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *                            // 1329\n        this.Constant_.TRANSITION_DURATION_FRACTION;                                                 // 1330\n                                                                                                     // 1331\n    // Calculate transition delays for individual menu items, so that they fade                      // 1332\n    // in one at a time.                                                                             // 1333\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);                         // 1334\n    for (var i = 0; i < items.length; i++) {                                                         // 1335\n      var itemDelay = null;                                                                          // 1336\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||                             // 1337\n          this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {                            // 1338\n        itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /                         // 1339\n            height * transitionDuration) + 's';                                                      // 1340\n      } else {                                                                                       // 1341\n        itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';                        // 1342\n      }                                                                                              // 1343\n      items[i].style.transitionDelay = itemDelay;                                                    // 1344\n    }                                                                                                // 1345\n                                                                                                     // 1346\n    // Apply the initial clip to the text before we start animating.                                 // 1347\n    this.applyClip_(height, width);                                                                  // 1348\n                                                                                                     // 1349\n    // Wait for the next frame, turn on animation, and apply the final clip.                         // 1350\n    // Also make it visible. This triggers the transitions.                                          // 1351\n    window.requestAnimationFrame(function() {                                                        // 1352\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);                                    // 1353\n      this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';                       // 1354\n      this.container_.classList.add(this.CssClasses_.IS_VISIBLE);                                    // 1355\n    }.bind(this));                                                                                   // 1356\n                                                                                                     // 1357\n    // Clean up after the animation is complete.                                                     // 1358\n    this.addAnimationEndListener_();                                                                 // 1359\n                                                                                                     // 1360\n    // Add a click listener to the document, to close the menu.                                      // 1361\n    var callback = function(e) {                                                                     // 1362\n      // Check to see if the document is processing the same event that                              // 1363\n      // displayed the menu in the first place. If so, do nothing.                                   // 1364\n      // Also check to see if the menu is in the process of closing itself, and                      // 1365\n      // do nothing in that case.                                                                    // 1366\n      if (e !== evt && !this.closing_) {                                                             // 1367\n        document.removeEventListener('click', callback);                                             // 1368\n        this.hide();                                                                                 // 1369\n      }                                                                                              // 1370\n    }.bind(this);                                                                                    // 1371\n    document.addEventListener('click', callback);                                                    // 1372\n  }                                                                                                  // 1373\n};                                                                                                   // 1374\n                                                                                                     // 1375\n/**                                                                                                  // 1376\n * Hides the menu.                                                                                   // 1377\n * @public                                                                                           // 1378\n */                                                                                                  // 1379\nMaterialMenu.prototype.hide = function() {                                                           // 1380\n  'use strict';                                                                                      // 1381\n                                                                                                     // 1382\n  if (this.element_ && this.container_ && this.outline_) {                                           // 1383\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);                         // 1384\n                                                                                                     // 1385\n    // Remove all transition delays; menu items fade out concurrently.                               // 1386\n    for (var i = 0; i < items.length; i++) {                                                         // 1387\n      items[i].style.transitionDelay = null;                                                         // 1388\n    }                                                                                                // 1389\n                                                                                                     // 1390\n    // Measure the inner element.                                                                    // 1391\n    var height = this.element_.getBoundingClientRect().height;                                       // 1392\n    var width = this.element_.getBoundingClientRect().width;                                         // 1393\n                                                                                                     // 1394\n    // Turn on animation, and apply the final clip. Also make invisible.                             // 1395\n    // This triggers the transitions.                                                                // 1396\n    this.element_.classList.add(this.CssClasses_.IS_ANIMATING);                                      // 1397\n    this.applyClip_(height, width);                                                                  // 1398\n    this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);                                   // 1399\n                                                                                                     // 1400\n    // Clean up after the animation is complete.                                                     // 1401\n    this.addAnimationEndListener_();                                                                 // 1402\n  }                                                                                                  // 1403\n};                                                                                                   // 1404\n                                                                                                     // 1405\n/**                                                                                                  // 1406\n * Displays or hides the menu, depending on current state.                                           // 1407\n * @public                                                                                           // 1408\n */                                                                                                  // 1409\nMaterialMenu.prototype.toggle = function(evt) {                                                      // 1410\n  'use strict';                                                                                      // 1411\n                                                                                                     // 1412\n  if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {                             // 1413\n    this.hide();                                                                                     // 1414\n  } else {                                                                                           // 1415\n    this.show(evt);                                                                                  // 1416\n  }                                                                                                  // 1417\n};                                                                                                   // 1418\n                                                                                                     // 1419\n// The component registers itself. It can assume componentHandler is available                       // 1420\n// in the global scope.                                                                              // 1421\ncomponentHandler.register({                                                                          // 1422\n  constructor: MaterialMenu,                                                                         // 1423\n  classAsString: 'MaterialMenu',                                                                     // 1424\n  cssClass: 'mdl-js-menu'                                                                            // 1425\n});                                                                                                  // 1426\n                                                                                                     // 1427\n/**                                                                                                  // 1428\n * @license                                                                                          // 1429\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 1430\n *                                                                                                   // 1431\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 1432\n * you may not use this file except in compliance with the License.                                  // 1433\n * You may obtain a copy of the License at                                                           // 1434\n *                                                                                                   // 1435\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 1436\n *                                                                                                   // 1437\n * Unless required by applicable law or agreed to in writing, software                               // 1438\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 1439\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 1440\n * See the License for the specific language governing permissions and                               // 1441\n * limitations under the License.                                                                    // 1442\n */                                                                                                  // 1443\n                                                                                                     // 1444\n/**                                                                                                  // 1445\n * Class constructor for Progress MDL component.                                                     // 1446\n * Implements MDL component design pattern defined at:                                               // 1447\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 1448\n * @param {HTMLElement} element The element that will be upgraded.                                   // 1449\n */                                                                                                  // 1450\nfunction MaterialProgress(element) {                                                                 // 1451\n  'use strict';                                                                                      // 1452\n                                                                                                     // 1453\n  this.element_ = element;                                                                           // 1454\n                                                                                                     // 1455\n  // Initialize instance.                                                                            // 1456\n  this.init();                                                                                       // 1457\n}                                                                                                    // 1458\n                                                                                                     // 1459\n/**                                                                                                  // 1460\n * Store constants in one place so they can be updated easily.                                       // 1461\n * @enum {string | number}                                                                           // 1462\n * @private                                                                                          // 1463\n */                                                                                                  // 1464\nMaterialProgress.prototype.Constant_ = {                                                             // 1465\n};                                                                                                   // 1466\n                                                                                                     // 1467\n/**                                                                                                  // 1468\n * Store strings for class names defined by this component that are used in                          // 1469\n * JavaScript. This allows us to simply change it in one place should we                             // 1470\n * decide to modify at a later date.                                                                 // 1471\n * @enum {string}                                                                                    // 1472\n * @private                                                                                          // 1473\n */                                                                                                  // 1474\nMaterialProgress.prototype.CssClasses_ = {                                                           // 1475\n  INDETERMINATE_CLASS: 'mdl-progress__indeterminate'                                                 // 1476\n};                                                                                                   // 1477\n                                                                                                     // 1478\nMaterialProgress.prototype.setProgress = function(p) {                                               // 1479\n  'use strict';                                                                                      // 1480\n                                                                                                     // 1481\n  if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {                      // 1482\n    return;                                                                                          // 1483\n  }                                                                                                  // 1484\n                                                                                                     // 1485\n  this.progressbar_.style.width = p + '%';                                                           // 1486\n};                                                                                                   // 1487\n                                                                                                     // 1488\nMaterialProgress.prototype.setBuffer = function(p) {                                                 // 1489\n  'use strict';                                                                                      // 1490\n                                                                                                     // 1491\n  this.bufferbar_.style.width = p + '%';                                                             // 1492\n  this.auxbar_.style.width = (100 - p) + '%';                                                        // 1493\n};                                                                                                   // 1494\n                                                                                                     // 1495\n/**                                                                                                  // 1496\n * Initialize element.                                                                               // 1497\n */                                                                                                  // 1498\nMaterialProgress.prototype.init = function() {                                                       // 1499\n  'use strict';                                                                                      // 1500\n                                                                                                     // 1501\n  if (this.element_) {                                                                               // 1502\n    var el = document.createElement('div');                                                          // 1503\n    el.className = 'progressbar bar bar1';                                                           // 1504\n    this.element_.appendChild(el);                                                                   // 1505\n    this.progressbar_ = el;                                                                          // 1506\n                                                                                                     // 1507\n    el = document.createElement('div');                                                              // 1508\n    el.className = 'bufferbar bar bar2';                                                             // 1509\n    this.element_.appendChild(el);                                                                   // 1510\n    this.bufferbar_ = el;                                                                            // 1511\n                                                                                                     // 1512\n    el = document.createElement('div');                                                              // 1513\n    el.className = 'auxbar bar bar3';                                                                // 1514\n    this.element_.appendChild(el);                                                                   // 1515\n    this.auxbar_ = el;                                                                               // 1516\n                                                                                                     // 1517\n    this.progressbar_.style.width = '0%';                                                            // 1518\n    this.bufferbar_.style.width = '100%';                                                            // 1519\n    this.auxbar_.style.width = '0%';                                                                 // 1520\n                                                                                                     // 1521\n    this.element_.classList.add('is-upgraded');                                                      // 1522\n  }                                                                                                  // 1523\n};                                                                                                   // 1524\n                                                                                                     // 1525\n// The component registers itself. It can assume componentHandler is available                       // 1526\n// in the global scope.                                                                              // 1527\ncomponentHandler.register({                                                                          // 1528\n  constructor: MaterialProgress,                                                                     // 1529\n  classAsString: 'MaterialProgress',                                                                 // 1530\n  cssClass: 'mdl-js-progress'                                                                        // 1531\n});                                                                                                  // 1532\n                                                                                                     // 1533\n/**                                                                                                  // 1534\n * @license                                                                                          // 1535\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 1536\n *                                                                                                   // 1537\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 1538\n * you may not use this file except in compliance with the License.                                  // 1539\n * You may obtain a copy of the License at                                                           // 1540\n *                                                                                                   // 1541\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 1542\n *                                                                                                   // 1543\n * Unless required by applicable law or agreed to in writing, software                               // 1544\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 1545\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 1546\n * See the License for the specific language governing permissions and                               // 1547\n * limitations under the License.                                                                    // 1548\n */                                                                                                  // 1549\n                                                                                                     // 1550\n/**                                                                                                  // 1551\n * Class constructor for Radio MDL component.                                                        // 1552\n * Implements MDL component design pattern defined at:                                               // 1553\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 1554\n * @param {HTMLElement} element The element that will be upgraded.                                   // 1555\n */                                                                                                  // 1556\nfunction MaterialRadio(element) {                                                                    // 1557\n  'use strict';                                                                                      // 1558\n                                                                                                     // 1559\n  this.element_ = element;                                                                           // 1560\n                                                                                                     // 1561\n  // Initialize instance.                                                                            // 1562\n  this.init();                                                                                       // 1563\n}                                                                                                    // 1564\n                                                                                                     // 1565\n/**                                                                                                  // 1566\n * Store constants in one place so they can be updated easily.                                       // 1567\n * @enum {string | number}                                                                           // 1568\n * @private                                                                                          // 1569\n */                                                                                                  // 1570\nMaterialRadio.prototype.Constant_ = {                                                                // 1571\n  TINY_TIMEOUT: 0.001                                                                                // 1572\n};                                                                                                   // 1573\n                                                                                                     // 1574\n/**                                                                                                  // 1575\n * Store strings for class names defined by this component that are used in                          // 1576\n * JavaScript. This allows us to simply change it in one place should we                             // 1577\n * decide to modify at a later date.                                                                 // 1578\n * @enum {string}                                                                                    // 1579\n * @private                                                                                          // 1580\n */                                                                                                  // 1581\nMaterialRadio.prototype.CssClasses_ = {                                                              // 1582\n  IS_FOCUSED: 'is-focused',                                                                          // 1583\n  IS_DISABLED: 'is-disabled',                                                                        // 1584\n  IS_CHECKED: 'is-checked',                                                                          // 1585\n  IS_UPGRADED: 'is-upgraded',                                                                        // 1586\n  JS_RADIO: 'mdl-js-radio',                                                                          // 1587\n  RADIO_BTN: 'mdl-radio__button',                                                                    // 1588\n  RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',                                                     // 1589\n  RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',                                                     // 1590\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 1591\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 1592\n  RIPPLE_CONTAINER: 'mdl-radio__ripple-container',                                                   // 1593\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 1594\n  RIPPLE: 'mdl-ripple'                                                                               // 1595\n};                                                                                                   // 1596\n                                                                                                     // 1597\n/**                                                                                                  // 1598\n * Handle change of state.                                                                           // 1599\n * @param {Event} event The event that fired.                                                        // 1600\n * @private                                                                                          // 1601\n */                                                                                                  // 1602\nMaterialRadio.prototype.onChange_ = function(event) {                                                // 1603\n  'use strict';                                                                                      // 1604\n                                                                                                     // 1605\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1606\n                                                                                                     // 1607\n  // Since other radio buttons don't get change events, we need to look for                          // 1608\n  // them to update their classes.                                                                   // 1609\n  var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);                           // 1610\n  for (var i = 0; i < radios.length; i++) {                                                          // 1611\n    var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);                          // 1612\n    // Different name == different group, so no point updating those.                                // 1613\n    if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {                     // 1614\n      this.updateClasses_(button, radios[i]);                                                        // 1615\n    }                                                                                                // 1616\n  }                                                                                                  // 1617\n};                                                                                                   // 1618\n                                                                                                     // 1619\n/**                                                                                                  // 1620\n * Handle focus.                                                                                     // 1621\n * @param {Event} event The event that fired.                                                        // 1622\n * @private                                                                                          // 1623\n */                                                                                                  // 1624\nMaterialRadio.prototype.onFocus_ = function(event) {                                                 // 1625\n  'use strict';                                                                                      // 1626\n                                                                                                     // 1627\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 1628\n};                                                                                                   // 1629\n                                                                                                     // 1630\n/**                                                                                                  // 1631\n * Handle lost focus.                                                                                // 1632\n * @param {Event} event The event that fired.                                                        // 1633\n * @private                                                                                          // 1634\n */                                                                                                  // 1635\nMaterialRadio.prototype.onBlur_ = function(event) {                                                  // 1636\n  'use strict';                                                                                      // 1637\n                                                                                                     // 1638\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 1639\n};                                                                                                   // 1640\n                                                                                                     // 1641\n/**                                                                                                  // 1642\n * Handle mouseup.                                                                                   // 1643\n * @param {Event} event The event that fired.                                                        // 1644\n * @private                                                                                          // 1645\n */                                                                                                  // 1646\nMaterialRadio.prototype.onMouseup_ = function(event) {                                               // 1647\n  'use strict';                                                                                      // 1648\n                                                                                                     // 1649\n  this.blur_();                                                                                      // 1650\n};                                                                                                   // 1651\n                                                                                                     // 1652\n/**                                                                                                  // 1653\n * Update classes.                                                                                   // 1654\n * @param {HTMLElement} button The button whose classes we should update.                            // 1655\n * @param {HTMLElement} label The label whose classes we should update.                              // 1656\n * @private                                                                                          // 1657\n */                                                                                                  // 1658\nMaterialRadio.prototype.updateClasses_ = function(button, label) {                                   // 1659\n  'use strict';                                                                                      // 1660\n                                                                                                     // 1661\n  if (button.disabled) {                                                                             // 1662\n    label.classList.add(this.CssClasses_.IS_DISABLED);                                               // 1663\n  } else {                                                                                           // 1664\n    label.classList.remove(this.CssClasses_.IS_DISABLED);                                            // 1665\n  }                                                                                                  // 1666\n                                                                                                     // 1667\n  if (button.checked) {                                                                              // 1668\n    label.classList.add(this.CssClasses_.IS_CHECKED);                                                // 1669\n  } else {                                                                                           // 1670\n    label.classList.remove(this.CssClasses_.IS_CHECKED);                                             // 1671\n  }                                                                                                  // 1672\n};                                                                                                   // 1673\n                                                                                                     // 1674\n/**                                                                                                  // 1675\n * Add blur.                                                                                         // 1676\n * @private                                                                                          // 1677\n */                                                                                                  // 1678\nMaterialRadio.prototype.blur_ = function(event) {                                                    // 1679\n  'use strict';                                                                                      // 1680\n                                                                                                     // 1681\n  // TODO: figure out why there's a focus event being fired after our blur,                          // 1682\n  // so that we can avoid this hack.                                                                 // 1683\n  window.setTimeout(function() {                                                                     // 1684\n    this.btnElement_.blur();                                                                         // 1685\n  }.bind(this), this.Constant_.TINY_TIMEOUT);                                                        // 1686\n};                                                                                                   // 1687\n                                                                                                     // 1688\n// Public methods.                                                                                   // 1689\n                                                                                                     // 1690\n/**                                                                                                  // 1691\n * Disable radio.                                                                                    // 1692\n * @public                                                                                           // 1693\n */                                                                                                  // 1694\nMaterialRadio.prototype.disable = function() {                                                       // 1695\n  'use strict';                                                                                      // 1696\n                                                                                                     // 1697\n  this.btnElement_.disabled = true;                                                                  // 1698\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1699\n};                                                                                                   // 1700\n                                                                                                     // 1701\n/**                                                                                                  // 1702\n * Enable radio.                                                                                     // 1703\n * @public                                                                                           // 1704\n */                                                                                                  // 1705\nMaterialRadio.prototype.enable = function() {                                                        // 1706\n  'use strict';                                                                                      // 1707\n                                                                                                     // 1708\n  this.btnElement_.disabled = false;                                                                 // 1709\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1710\n};                                                                                                   // 1711\n                                                                                                     // 1712\n/**                                                                                                  // 1713\n * Check radio.                                                                                      // 1714\n * @public                                                                                           // 1715\n */                                                                                                  // 1716\nMaterialRadio.prototype.check = function() {                                                         // 1717\n  'use strict';                                                                                      // 1718\n                                                                                                     // 1719\n  this.btnElement_.checked = true;                                                                   // 1720\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1721\n};                                                                                                   // 1722\n                                                                                                     // 1723\n/**                                                                                                  // 1724\n * Uncheck radio.                                                                                    // 1725\n * @public                                                                                           // 1726\n */                                                                                                  // 1727\nMaterialRadio.prototype.uncheck = function() {                                                       // 1728\n  'use strict';                                                                                      // 1729\n                                                                                                     // 1730\n  this.btnElement_.checked = false;                                                                  // 1731\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1732\n};                                                                                                   // 1733\n                                                                                                     // 1734\n/**                                                                                                  // 1735\n * Initialize element.                                                                               // 1736\n */                                                                                                  // 1737\nMaterialRadio.prototype.init = function() {                                                          // 1738\n  'use strict';                                                                                      // 1739\n                                                                                                     // 1740\n  if (this.element_) {                                                                               // 1741\n    this.btnElement_ = this.element_.querySelector('.' +                                             // 1742\n        this.CssClasses_.RADIO_BTN);                                                                 // 1743\n                                                                                                     // 1744\n    var outerCircle = document.createElement('span');                                                // 1745\n    outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);                                  // 1746\n                                                                                                     // 1747\n    var innerCircle = document.createElement('span');                                                // 1748\n    innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);                                  // 1749\n                                                                                                     // 1750\n    this.element_.appendChild(outerCircle);                                                          // 1751\n    this.element_.appendChild(innerCircle);                                                          // 1752\n                                                                                                     // 1753\n    var rippleContainer;                                                                             // 1754\n    if (this.element_.classList.contains(                                                            // 1755\n        this.CssClasses_.RIPPLE_EFFECT)) {                                                           // 1756\n      this.element_.classList.add(                                                                   // 1757\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);                                                    // 1758\n      rippleContainer = document.createElement('span');                                              // 1759\n      rippleContainer.classList.add(                                                                 // 1760\n          this.CssClasses_.RIPPLE_CONTAINER);                                                        // 1761\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);                                 // 1762\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);                                 // 1763\n      rippleContainer.addEventListener('mouseup', this.onMouseup_.bind(this));                       // 1764\n                                                                                                     // 1765\n      var ripple = document.createElement('span');                                                   // 1766\n      ripple.classList.add(this.CssClasses_.RIPPLE);                                                 // 1767\n                                                                                                     // 1768\n      rippleContainer.appendChild(ripple);                                                           // 1769\n      this.element_.appendChild(rippleContainer);                                                    // 1770\n    }                                                                                                // 1771\n                                                                                                     // 1772\n    this.btnElement_.addEventListener('change', this.onChange_.bind(this));                          // 1773\n    this.btnElement_.addEventListener('focus', this.onFocus_.bind(this));                            // 1774\n    this.btnElement_.addEventListener('blur', this.onBlur_.bind(this));                              // 1775\n    this.element_.addEventListener('mouseup', this.onMouseup_.bind(this));                           // 1776\n                                                                                                     // 1777\n    this.updateClasses_(this.btnElement_, this.element_);                                            // 1778\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 1779\n  }                                                                                                  // 1780\n};                                                                                                   // 1781\n                                                                                                     // 1782\n// The component registers itself. It can assume componentHandler is available                       // 1783\n// in the global scope.                                                                              // 1784\ncomponentHandler.register({                                                                          // 1785\n  constructor: MaterialRadio,                                                                        // 1786\n  classAsString: 'MaterialRadio',                                                                    // 1787\n  cssClass: 'mdl-js-radio'                                                                           // 1788\n});                                                                                                  // 1789\n                                                                                                     // 1790\n/**                                                                                                  // 1791\n * @license                                                                                          // 1792\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 1793\n *                                                                                                   // 1794\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 1795\n * you may not use this file except in compliance with the License.                                  // 1796\n * You may obtain a copy of the License at                                                           // 1797\n *                                                                                                   // 1798\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 1799\n *                                                                                                   // 1800\n * Unless required by applicable law or agreed to in writing, software                               // 1801\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 1802\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 1803\n * See the License for the specific language governing permissions and                               // 1804\n * limitations under the License.                                                                    // 1805\n */                                                                                                  // 1806\n                                                                                                     // 1807\n/**                                                                                                  // 1808\n * Class constructor for Slider MDL component.                                                       // 1809\n * Implements MDL component design pattern defined at:                                               // 1810\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 1811\n * @param {HTMLElement} element The element that will be upgraded.                                   // 1812\n */                                                                                                  // 1813\nfunction MaterialSlider(element) {                                                                   // 1814\n  'use strict';                                                                                      // 1815\n                                                                                                     // 1816\n  this.element_ = element;                                                                           // 1817\n  // Browser feature detection.                                                                      // 1818\n  this.isIE_ = window.navigator.msPointerEnabled;                                                    // 1819\n  // Initialize instance.                                                                            // 1820\n  this.init();                                                                                       // 1821\n}                                                                                                    // 1822\n                                                                                                     // 1823\n/**                                                                                                  // 1824\n * Store constants in one place so they can be updated easily.                                       // 1825\n * @enum {string | number}                                                                           // 1826\n * @private                                                                                          // 1827\n */                                                                                                  // 1828\nMaterialSlider.prototype.Constant_ = {                                                               // 1829\n  // None for now.                                                                                   // 1830\n};                                                                                                   // 1831\n                                                                                                     // 1832\n/**                                                                                                  // 1833\n * Store strings for class names defined by this component that are used in                          // 1834\n * JavaScript. This allows us to simply change it in one place should we                             // 1835\n * decide to modify at a later date.                                                                 // 1836\n * @enum {string}                                                                                    // 1837\n * @private                                                                                          // 1838\n */                                                                                                  // 1839\nMaterialSlider.prototype.CssClasses_ = {                                                             // 1840\n  IE_CONTAINER: 'mdl-slider__ie-container',                                                          // 1841\n  SLIDER_CONTAINER: 'mdl-slider__container',                                                         // 1842\n  BACKGROUND_FLEX: 'mdl-slider__background-flex',                                                    // 1843\n  BACKGROUND_LOWER: 'mdl-slider__background-lower',                                                  // 1844\n  BACKGROUND_UPPER: 'mdl-slider__background-upper',                                                  // 1845\n  IS_LOWEST_VALUE: 'is-lowest-value',                                                                // 1846\n  IS_UPGRADED: 'is-upgraded'                                                                         // 1847\n};                                                                                                   // 1848\n                                                                                                     // 1849\n/**                                                                                                  // 1850\n * Handle input on element.                                                                          // 1851\n * @param {Event} event The event that fired.                                                        // 1852\n * @private                                                                                          // 1853\n */                                                                                                  // 1854\nMaterialSlider.prototype.onInput_ = function(event) {                                                // 1855\n  'use strict';                                                                                      // 1856\n                                                                                                     // 1857\n  this.updateValueStyles_();                                                                         // 1858\n};                                                                                                   // 1859\n                                                                                                     // 1860\n/**                                                                                                  // 1861\n * Handle change on element.                                                                         // 1862\n * @param {Event} event The event that fired.                                                        // 1863\n * @private                                                                                          // 1864\n */                                                                                                  // 1865\nMaterialSlider.prototype.onChange_ = function(event) {                                               // 1866\n  'use strict';                                                                                      // 1867\n                                                                                                     // 1868\n  this.updateValueStyles_();                                                                         // 1869\n};                                                                                                   // 1870\n                                                                                                     // 1871\n/**                                                                                                  // 1872\n * Handle mouseup on element.                                                                        // 1873\n * @param {Event} event The event that fired.                                                        // 1874\n * @private                                                                                          // 1875\n */                                                                                                  // 1876\nMaterialSlider.prototype.onMouseUp_ = function(event) {                                              // 1877\n  'use strict';                                                                                      // 1878\n                                                                                                     // 1879\n  event.target.blur();                                                                               // 1880\n};                                                                                                   // 1881\n                                                                                                     // 1882\n/**                                                                                                  // 1883\n * Handle mousedown on container element.                                                            // 1884\n * This handler is purpose is to not require the use to click                                        // 1885\n * exactly on the 2px slider element, as FireFox seems to be very                                    // 1886\n * strict about this.                                                                                // 1887\n * @param {Event} event The event that fired.                                                        // 1888\n * @private                                                                                          // 1889\n */                                                                                                  // 1890\nMaterialSlider.prototype.onContainerMouseDown_ = function(event) {                                   // 1891\n  'use strict';                                                                                      // 1892\n                                                                                                     // 1893\n  // If this click is not on the parent element (but rather some child)                              // 1894\n  // ignore. It may still bubble up.                                                                 // 1895\n  if (event.target !== this.element_.parentElement) {                                                // 1896\n    return;                                                                                          // 1897\n  }                                                                                                  // 1898\n                                                                                                     // 1899\n  // Discard the original event and create a new event that                                          // 1900\n  // is on the slider element.                                                                       // 1901\n  event.preventDefault();                                                                            // 1902\n  var newEvent = new MouseEvent('mousedown', {                                                       // 1903\n    target: event.target,                                                                            // 1904\n    buttons: event.buttons,                                                                          // 1905\n    clientX: event.clientX,                                                                          // 1906\n    clientY: this.element_.getBoundingClientRect().y                                                 // 1907\n  });                                                                                                // 1908\n  this.element_.dispatchEvent(newEvent);                                                             // 1909\n};                                                                                                   // 1910\n                                                                                                     // 1911\n/**                                                                                                  // 1912\n * Handle updating of values.                                                                        // 1913\n * @param {Event} event The event that fired.                                                        // 1914\n * @private                                                                                          // 1915\n */                                                                                                  // 1916\nMaterialSlider.prototype.updateValueStyles_ = function(event) {                                      // 1917\n  'use strict';                                                                                      // 1918\n                                                                                                     // 1919\n  // Calculate and apply percentages to div structure behind slider.                                 // 1920\n  var fraction = (this.element_.value - this.element_.min) /                                         // 1921\n      (this.element_.max - this.element_.min);                                                       // 1922\n                                                                                                     // 1923\n  if (fraction === 0) {                                                                              // 1924\n    this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);                                   // 1925\n  } else {                                                                                           // 1926\n    this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);                                // 1927\n  }                                                                                                  // 1928\n                                                                                                     // 1929\n  if (!this.isIE_) {                                                                                 // 1930\n    this.backgroundLower_.style.flex = fraction;                                                     // 1931\n    this.backgroundLower_.style.webkitFlex = fraction;                                               // 1932\n    this.backgroundUpper_.style.flex = 1 - fraction;                                                 // 1933\n    this.backgroundUpper_.style.webkitFlex = 1 - fraction;                                           // 1934\n  }                                                                                                  // 1935\n};                                                                                                   // 1936\n                                                                                                     // 1937\n// Public methods.                                                                                   // 1938\n                                                                                                     // 1939\n/**                                                                                                  // 1940\n * Disable slider.                                                                                   // 1941\n * @public                                                                                           // 1942\n */                                                                                                  // 1943\nMaterialSlider.prototype.disable = function() {                                                      // 1944\n  'use strict';                                                                                      // 1945\n                                                                                                     // 1946\n  this.element_.disabled = true;                                                                     // 1947\n};                                                                                                   // 1948\n                                                                                                     // 1949\n/**                                                                                                  // 1950\n * Enable slider.                                                                                    // 1951\n * @public                                                                                           // 1952\n */                                                                                                  // 1953\nMaterialSlider.prototype.enable = function() {                                                       // 1954\n  'use strict';                                                                                      // 1955\n                                                                                                     // 1956\n  this.element_.disabled = false;                                                                    // 1957\n};                                                                                                   // 1958\n                                                                                                     // 1959\n/**                                                                                                  // 1960\n * Update slider value.                                                                              // 1961\n * @param {Number} value The value to which to set the control (optional).                           // 1962\n * @public                                                                                           // 1963\n */                                                                                                  // 1964\nMaterialSlider.prototype.change = function(value) {                                                  // 1965\n  'use strict';                                                                                      // 1966\n                                                                                                     // 1967\n  if (value) {                                                                                       // 1968\n    this.element_.value = value;                                                                     // 1969\n  }                                                                                                  // 1970\n  this.updateValueStyles_();                                                                         // 1971\n};                                                                                                   // 1972\n                                                                                                     // 1973\n/**                                                                                                  // 1974\n * Initialize element.                                                                               // 1975\n */                                                                                                  // 1976\nMaterialSlider.prototype.init = function() {                                                         // 1977\n  'use strict';                                                                                      // 1978\n                                                                                                     // 1979\n  if (this.element_) {                                                                               // 1980\n    if (this.isIE_) {                                                                                // 1981\n      // Since we need to specify a very large height in IE due to                                   // 1982\n      // implementation limitations, we add a parent here that trims it down to                      // 1983\n      // a reasonable size.                                                                          // 1984\n      var containerIE = document.createElement('div');                                               // 1985\n      containerIE.classList.add(this.CssClasses_.IE_CONTAINER);                                      // 1986\n      this.element_.parentElement.insertBefore(containerIE, this.element_);                          // 1987\n      this.element_.parentElement.removeChild(this.element_);                                        // 1988\n      containerIE.appendChild(this.element_);                                                        // 1989\n    } else {                                                                                         // 1990\n      // For non-IE browsers, we need a div structure that sits behind the                           // 1991\n      // slider and allows us to style the left and right sides of it with                           // 1992\n      // different colors.                                                                           // 1993\n      var container = document.createElement('div');                                                 // 1994\n      container.classList.add(this.CssClasses_.SLIDER_CONTAINER);                                    // 1995\n      this.element_.parentElement.insertBefore(container, this.element_);                            // 1996\n      this.element_.parentElement.removeChild(this.element_);                                        // 1997\n      container.appendChild(this.element_);                                                          // 1998\n      var backgroundFlex = document.createElement('div');                                            // 1999\n      backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);                                // 2000\n      container.appendChild(backgroundFlex);                                                         // 2001\n      this.backgroundLower_ = document.createElement('div');                                         // 2002\n      this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);                        // 2003\n      backgroundFlex.appendChild(this.backgroundLower_);                                             // 2004\n      this.backgroundUpper_ = document.createElement('div');                                         // 2005\n      this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);                        // 2006\n      backgroundFlex.appendChild(this.backgroundUpper_);                                             // 2007\n    }                                                                                                // 2008\n                                                                                                     // 2009\n    this.boundInputHandler = this.onInput_.bind(this);                                               // 2010\n    this.boundChangeHandler = this.onChange_.bind(this);                                             // 2011\n    this.boundMouseUpHandler = this.onMouseUp_.bind(this);                                           // 2012\n    this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);                     // 2013\n    this.element_.addEventListener('input', this.boundInputHandler);                                 // 2014\n    this.element_.addEventListener('change', this.boundChangeHandler);                               // 2015\n    this.element_.addEventListener('mouseup', this.boundMouseUpHandler);                             // 2016\n    this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);  // 2017\n                                                                                                     // 2018\n    this.updateValueStyles_();                                                                       // 2019\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 2020\n  }                                                                                                  // 2021\n};                                                                                                   // 2022\n                                                                                                     // 2023\n/*                                                                                                   // 2024\n* Downgrade the component                                                                            // 2025\n*/                                                                                                   // 2026\nMaterialSlider.prototype.mdlDowngrade_ = function() {                                                // 2027\n  'use strict';                                                                                      // 2028\n  this.element_.removeEventListener('input', this.boundInputHandler);                                // 2029\n  this.element_.removeEventListener('change', this.boundChangeHandler);                              // 2030\n  this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);                            // 2031\n  this.element_.parentElement.removeEventListener('mousedown', this.boundContainerMouseDownHandler);         // 2040\n};                                                                                                   // 2033\n                                                                                                     // 2034\n// The component registers itself. It can assume componentHandler is available                       // 2035\n// in the global scope.                                                                              // 2036\ncomponentHandler.register({                                                                          // 2037\n  constructor: MaterialSlider,                                                                       // 2038\n  classAsString: 'MaterialSlider',                                                                   // 2039\n  cssClass: 'mdl-js-slider'                                                                          // 2040\n});                                                                                                  // 2041\n                                                                                                     // 2042\n/**                                                                                                  // 2043\n * @license                                                                                          // 2044\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2045\n *                                                                                                   // 2046\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2047\n * you may not use this file except in compliance with the License.                                  // 2048\n * You may obtain a copy of the License at                                                           // 2049\n *                                                                                                   // 2050\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2051\n *                                                                                                   // 2052\n * Unless required by applicable law or agreed to in writing, software                               // 2053\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2054\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2055\n * See the License for the specific language governing permissions and                               // 2056\n * limitations under the License.                                                                    // 2057\n */                                                                                                  // 2058\n                                                                                                     // 2059\n/**                                                                                                  // 2060\n * Class constructor for Spinner MDL component.                                                      // 2061\n * Implements MDL component design pattern defined at:                                               // 2062\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2063\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2064\n * @constructor                                                                                      // 2065\n */                                                                                                  // 2066\nfunction MaterialSpinner(element) {                                                                  // 2067\n  'use strict';                                                                                      // 2068\n                                                                                                     // 2069\n  this.element_ = element;                                                                           // 2070\n                                                                                                     // 2071\n  // Initialize instance.                                                                            // 2072\n  this.init();                                                                                       // 2073\n}                                                                                                    // 2074\n                                                                                                     // 2075\n/**                                                                                                  // 2076\n * Store constants in one place so they can be updated easily.                                       // 2077\n * @enum {string | number}                                                                           // 2078\n * @private                                                                                          // 2079\n */                                                                                                  // 2080\nMaterialSpinner.prototype.Constant_ = {                                                              // 2081\n  MDL_SPINNER_LAYER_COUNT: 4                                                                         // 2082\n};                                                                                                   // 2083\n                                                                                                     // 2084\n/**                                                                                                  // 2085\n * Store strings for class names defined by this component that are used in                          // 2086\n * JavaScript. This allows us to simply change it in one place should we                             // 2087\n * decide to modify at a later date.                                                                 // 2088\n * @enum {string}                                                                                    // 2089\n * @private                                                                                          // 2090\n */                                                                                                  // 2091\nMaterialSpinner.prototype.CssClasses_ = {                                                            // 2092\n  MDL_SPINNER_LAYER: 'mdl-spinner__layer',                                                           // 2093\n  MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',                                         // 2094\n  MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',                                                         // 2095\n  MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',                                                   // 2096\n  MDL_SPINNER_LEFT: 'mdl-spinner__left',                                                             // 2097\n  MDL_SPINNER_RIGHT: 'mdl-spinner__right'                                                            // 2098\n};                                                                                                   // 2099\n                                                                                                     // 2100\n/**                                                                                                  // 2101\n* Auxiliary method to create a spinner layer.                                                        // 2102\n*/                                                                                                   // 2103\nMaterialSpinner.prototype.createLayer = function(index) {                                            // 2104\n  'use strict';                                                                                      // 2105\n                                                                                                     // 2106\n  var layer = document.createElement('div');                                                         // 2107\n  layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);                                           // 2108\n  layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);                             // 2109\n                                                                                                     // 2110\n  var leftClipper = document.createElement('div');                                                   // 2111\n  leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);                            // 2112\n  leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);                                      // 2113\n                                                                                                     // 2114\n  var gapPatch = document.createElement('div');                                                      // 2115\n  gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);                                    // 2116\n                                                                                                     // 2117\n  var rightClipper = document.createElement('div');                                                  // 2118\n  rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);                           // 2119\n  rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);                                    // 2120\n                                                                                                     // 2121\n  var circleOwners = [leftClipper, gapPatch, rightClipper];                                          // 2122\n                                                                                                     // 2123\n  for (var i = 0; i < circleOwners.length; i++) {                                                    // 2124\n    var circle = document.createElement('div');                                                      // 2125\n    circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);                                       // 2126\n    circleOwners[i].appendChild(circle);                                                             // 2127\n  }                                                                                                  // 2128\n                                                                                                     // 2129\n  layer.appendChild(leftClipper);                                                                    // 2130\n  layer.appendChild(gapPatch);                                                                       // 2131\n  layer.appendChild(rightClipper);                                                                   // 2132\n                                                                                                     // 2133\n  this.element_.appendChild(layer);                                                                  // 2134\n};                                                                                                   // 2135\n                                                                                                     // 2136\n/**                                                                                                  // 2137\n* Stops the spinner animation.                                                                       // 2138\n* Public method for users who need to stop the spinner for any reason.                               // 2139\n* @public                                                                                            // 2140\n*/                                                                                                   // 2141\nMaterialSpinner.prototype.stop = function() {                                                        // 2142\n  'use strict';                                                                                      // 2143\n                                                                                                     // 2144\n  this.element_.classList.remove('is-active');                                                       // 2145\n};                                                                                                   // 2146\n                                                                                                     // 2147\n/**                                                                                                  // 2148\n* Starts the spinner animation.                                                                      // 2149\n* Public method for users who need to manually start the spinner for any reason                      // 2150\n* (instead of just adding the 'is-active' class to their markup).                                    // 2151\n* @public                                                                                            // 2152\n*/                                                                                                   // 2153\nMaterialSpinner.prototype.start = function() {                                                       // 2154\n  'use strict';                                                                                      // 2155\n                                                                                                     // 2156\n  this.element_.classList.add('is-active');                                                          // 2157\n};                                                                                                   // 2158\n                                                                                                     // 2159\n/**                                                                                                  // 2160\n * Initialize element.                                                                               // 2161\n */                                                                                                  // 2162\nMaterialSpinner.prototype.init = function() {                                                        // 2163\n  'use strict';                                                                                      // 2164\n                                                                                                     // 2165\n  if (this.element_) {                                                                               // 2166\n    for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {                              // 2167\n      this.createLayer(i);                                                                           // 2168\n    }                                                                                                // 2169\n                                                                                                     // 2170\n    this.element_.classList.add('is-upgraded');                                                      // 2171\n  }                                                                                                  // 2172\n};                                                                                                   // 2173\n                                                                                                     // 2174\n// The component registers itself. It can assume componentHandler is available                       // 2175\n// in the global scope.                                                                              // 2176\ncomponentHandler.register({                                                                          // 2177\n  constructor: MaterialSpinner,                                                                      // 2178\n  classAsString: 'MaterialSpinner',                                                                  // 2179\n  cssClass: 'mdl-js-spinner'                                                                         // 2180\n});                                                                                                  // 2181\n                                                                                                     // 2182\n/**                                                                                                  // 2183\n * @license                                                                                          // 2184\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2185\n *                                                                                                   // 2186\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2187\n * you may not use this file except in compliance with the License.                                  // 2188\n * You may obtain a copy of the License at                                                           // 2189\n *                                                                                                   // 2190\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2191\n *                                                                                                   // 2192\n * Unless required by applicable law or agreed to in writing, software                               // 2193\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2194\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2195\n * See the License for the specific language governing permissions and                               // 2196\n * limitations under the License.                                                                    // 2197\n */                                                                                                  // 2198\n                                                                                                     // 2199\n/**                                                                                                  // 2200\n * Class constructor for Checkbox MDL component.                                                     // 2201\n * Implements MDL component design pattern defined at:                                               // 2202\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2203\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2204\n */                                                                                                  // 2205\nfunction MaterialSwitch(element) {                                                                   // 2206\n  'use strict';                                                                                      // 2207\n                                                                                                     // 2208\n  this.element_ = element;                                                                           // 2209\n                                                                                                     // 2210\n  // Initialize instance.                                                                            // 2211\n  this.init();                                                                                       // 2212\n}                                                                                                    // 2213\n                                                                                                     // 2214\n/**                                                                                                  // 2215\n * Store constants in one place so they can be updated easily.                                       // 2216\n * @enum {string | number}                                                                           // 2217\n * @private                                                                                          // 2218\n */                                                                                                  // 2219\nMaterialSwitch.prototype.Constant_ = {                                                               // 2220\n  TINY_TIMEOUT: 0.001                                                                                // 2221\n};                                                                                                   // 2222\n                                                                                                     // 2223\n/**                                                                                                  // 2224\n * Store strings for class names defined by this component that are used in                          // 2225\n * JavaScript. This allows us to simply change it in one place should we                             // 2226\n * decide to modify at a later date.                                                                 // 2227\n * @enum {string}                                                                                    // 2228\n * @private                                                                                          // 2229\n */                                                                                                  // 2230\nMaterialSwitch.prototype.CssClasses_ = {                                                             // 2231\n  INPUT: 'mdl-switch__input',                                                                        // 2232\n  TRACK: 'mdl-switch__track',                                                                        // 2233\n  THUMB: 'mdl-switch__thumb',                                                                        // 2234\n  FOCUS_HELPER: 'mdl-switch__focus-helper',                                                          // 2235\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 2236\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 2237\n  RIPPLE_CONTAINER: 'mdl-switch__ripple-container',                                                  // 2238\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 2239\n  RIPPLE: 'mdl-ripple',                                                                              // 2240\n  IS_FOCUSED: 'is-focused',                                                                          // 2241\n  IS_DISABLED: 'is-disabled',                                                                        // 2242\n  IS_CHECKED: 'is-checked'                                                                           // 2243\n};                                                                                                   // 2244\n                                                                                                     // 2245\n/**                                                                                                  // 2246\n * Handle change of state.                                                                           // 2247\n * @param {Event} event The event that fired.                                                        // 2248\n * @private                                                                                          // 2249\n */                                                                                                  // 2250\nMaterialSwitch.prototype.onChange_ = function(event) {                                               // 2251\n  'use strict';                                                                                      // 2252\n                                                                                                     // 2253\n  this.updateClasses_();                                                                             // 2254\n};                                                                                                   // 2255\n                                                                                                     // 2256\n/**                                                                                                  // 2257\n * Handle focus of element.                                                                          // 2258\n * @param {Event} event The event that fired.                                                        // 2259\n * @private                                                                                          // 2260\n */                                                                                                  // 2261\nMaterialSwitch.prototype.onFocus_ = function(event) {                                                // 2262\n  'use strict';                                                                                      // 2263\n                                                                                                     // 2264\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 2265\n};                                                                                                   // 2266\n                                                                                                     // 2267\n/**                                                                                                  // 2268\n * Handle lost focus of element.                                                                     // 2269\n * @param {Event} event The event that fired.                                                        // 2270\n * @private                                                                                          // 2271\n */                                                                                                  // 2272\nMaterialSwitch.prototype.onBlur_ = function(event) {                                                 // 2273\n  'use strict';                                                                                      // 2274\n                                                                                                     // 2275\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 2276\n};                                                                                                   // 2277\n                                                                                                     // 2278\n/**                                                                                                  // 2279\n * Handle mouseup.                                                                                   // 2280\n * @param {Event} event The event that fired.                                                        // 2281\n * @private                                                                                          // 2282\n */                                                                                                  // 2283\nMaterialSwitch.prototype.onMouseUp_ = function(event) {                                              // 2284\n  'use strict';                                                                                      // 2285\n                                                                                                     // 2286\n  this.blur_();                                                                                      // 2287\n};                                                                                                   // 2288\n                                                                                                     // 2289\n/**                                                                                                  // 2290\n * Handle class updates.                                                                             // 2291\n * @param {HTMLElement} button The button whose classes we should update.                            // 2292\n * @param {HTMLElement} label The label whose classes we should update.                              // 2293\n * @private                                                                                          // 2294\n */                                                                                                  // 2295\nMaterialSwitch.prototype.updateClasses_ = function() {                                               // 2296\n  'use strict';                                                                                      // 2297\n                                                                                                     // 2298\n  if (this.inputElement_.disabled) {                                                                 // 2299\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);                                       // 2300\n  } else {                                                                                           // 2301\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);                                    // 2302\n  }                                                                                                  // 2303\n                                                                                                     // 2304\n  if (this.inputElement_.checked) {                                                                  // 2305\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);                                        // 2306\n  } else {                                                                                           // 2307\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);                                     // 2308\n  }                                                                                                  // 2309\n};                                                                                                   // 2310\n                                                                                                     // 2311\n/**                                                                                                  // 2312\n * Add blur.                                                                                         // 2313\n * @private                                                                                          // 2314\n */                                                                                                  // 2315\nMaterialSwitch.prototype.blur_ = function(event) {                                                   // 2316\n  'use strict';                                                                                      // 2317\n                                                                                                     // 2318\n  // TODO: figure out why there's a focus event being fired after our blur,                          // 2319\n  // so that we can avoid this hack.                                                                 // 2320\n  window.setTimeout(function() {                                                                     // 2321\n    this.inputElement_.blur();                                                                       // 2322\n  }.bind(this), this.Constant_.TINY_TIMEOUT);                                                        // 2323\n};                                                                                                   // 2324\n                                                                                                     // 2325\n// Public methods.                                                                                   // 2326\n                                                                                                     // 2327\n/**                                                                                                  // 2328\n * Disable switch.                                                                                   // 2329\n * @public                                                                                           // 2330\n */                                                                                                  // 2331\nMaterialSwitch.prototype.disable = function() {                                                      // 2332\n  'use strict';                                                                                      // 2333\n                                                                                                     // 2334\n  this.inputElement_.disabled = true;                                                                // 2335\n  this.updateClasses_();                                                                             // 2336\n};                                                                                                   // 2337\n                                                                                                     // 2338\n/**                                                                                                  // 2339\n * Enable switch.                                                                                    // 2340\n * @public                                                                                           // 2341\n */                                                                                                  // 2342\nMaterialSwitch.prototype.enable = function() {                                                       // 2343\n  'use strict';                                                                                      // 2344\n                                                                                                     // 2345\n  this.inputElement_.disabled = false;                                                               // 2346\n  this.updateClasses_();                                                                             // 2347\n};                                                                                                   // 2348\n                                                                                                     // 2349\n/**                                                                                                  // 2350\n * Activate switch.                                                                                  // 2351\n * @public                                                                                           // 2352\n */                                                                                                  // 2353\nMaterialSwitch.prototype.on = function() {                                                           // 2354\n  'use strict';                                                                                      // 2355\n                                                                                                     // 2356\n  this.inputElement_.checked = true;                                                                 // 2357\n  this.updateClasses_();                                                                             // 2358\n};                                                                                                   // 2359\n                                                                                                     // 2360\n/**                                                                                                  // 2361\n * Deactivate switch.                                                                                // 2362\n * @public                                                                                           // 2363\n */                                                                                                  // 2364\nMaterialSwitch.prototype.off = function() {                                                          // 2365\n  'use strict';                                                                                      // 2366\n                                                                                                     // 2367\n  this.inputElement_.checked = false;                                                                // 2368\n  this.updateClasses_();                                                                             // 2369\n};                                                                                                   // 2370\n                                                                                                     // 2371\n/**                                                                                                  // 2372\n * Initialize element.                                                                               // 2373\n */                                                                                                  // 2374\nMaterialSwitch.prototype.init = function() {                                                         // 2375\n  'use strict';                                                                                      // 2376\n                                                                                                     // 2377\n  if (this.element_) {                                                                               // 2378\n    this.inputElement_ = this.element_.querySelector('.' +                                           // 2379\n        this.CssClasses_.INPUT);                                                                     // 2380\n                                                                                                     // 2381\n    var track = document.createElement('div');                                                       // 2382\n    track.classList.add(this.CssClasses_.TRACK);                                                     // 2383\n                                                                                                     // 2384\n    var thumb = document.createElement('div');                                                       // 2385\n    thumb.classList.add(this.CssClasses_.THUMB);                                                     // 2386\n                                                                                                     // 2387\n    var focusHelper = document.createElement('span');                                                // 2388\n    focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);                                        // 2389\n                                                                                                     // 2390\n    thumb.appendChild(focusHelper);                                                                  // 2391\n                                                                                                     // 2392\n    this.element_.appendChild(track);                                                                // 2393\n    this.element_.appendChild(thumb);                                                                // 2394\n                                                                                                     // 2395\n    this.boundMouseUpHandler = this.onMouseUp_.bind(this);                                           // 2396\n                                                                                                     // 2397\n    if (this.element_.classList.contains(                                                            // 2398\n        this.CssClasses_.RIPPLE_EFFECT)) {                                                           // 2399\n      this.element_.classList.add(                                                                   // 2400\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);                                                    // 2401\n      this.rippleContainerElement_ = document.createElement('span');                                 // 2402\n      this.rippleContainerElement_.classList.add(                                                    // 2403\n          this.CssClasses_.RIPPLE_CONTAINER);                                                        // 2404\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);                    // 2405\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);                    // 2406\n      this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);            // 2407\n                                                                                                     // 2408\n      var ripple = document.createElement('span');                                                   // 2409\n      ripple.classList.add(this.CssClasses_.RIPPLE);                                                 // 2410\n                                                                                                     // 2411\n      this.rippleContainerElement_.appendChild(ripple);                                              // 2412\n      this.element_.appendChild(this.rippleContainerElement_);                                       // 2413\n    }                                                                                                // 2414\n                                                                                                     // 2415\n    this.boundChangeHandler = this.onChange_.bind(this);                                             // 2416\n    this.boundFocusHandler = this.onFocus_.bind(this);                                               // 2417\n    this.boundBlurHandler = this.onBlur_.bind(this);                                                 // 2418\n                                                                                                     // 2419\n    this.inputElement_.addEventListener('change', this.boundChangeHandler);                          // 2420\n    this.inputElement_.addEventListener('focus', this.boundFocusHandler);                            // 2421\n    this.inputElement_.addEventListener('blur', this.boundBlurHandler);                              // 2422\n    this.element_.addEventListener('mouseup', this.boundMouseUpHandler);                             // 2423\n                                                                                                     // 2424\n    this.updateClasses_();                                                                           // 2425\n    this.element_.classList.add('is-upgraded');                                                      // 2426\n  }                                                                                                  // 2427\n};                                                                                                   // 2428\n                                                                                                     // 2429\n/*                                                                                                   // 2430\n* Downgrade the component.                                                                           // 2431\n*/                                                                                                   // 2432\nMaterialSwitch.prototype.mdlDowngrade_ = function() {                                                // 2433\n  'use strict';                                                                                      // 2434\n  if (this.rippleContainerElement_) {                                                                // 2435\n    this.rippleContainerElement_.removeEventListener('mouseup', this.boundMouseUpHandler);           // 2436\n  }                                                                                                  // 2437\n  this.inputElement_.removeEventListener('change', this.boundChangeHandler);                         // 2438\n  this.inputElement_.removeEventListener('focus', this.boundFocusHandler);                           // 2439\n  this.inputElement_.removeEventListener('blur', this.boundBlurHandler);                             // 2440\n  this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);                            // 2441\n};                                                                                                   // 2442\n                                                                                                     // 2443\n// The component registers itself. It can assume componentHandler is available                       // 2444\n// in the global scope.                                                                              // 2445\ncomponentHandler.register({                                                                          // 2446\n  constructor: MaterialSwitch,                                                                       // 2447\n  classAsString: 'MaterialSwitch',                                                                   // 2448\n  cssClass: 'mdl-js-switch'                                                                          // 2449\n});                                                                                                  // 2450\n                                                                                                     // 2451\n/**                                                                                                  // 2452\n * @license                                                                                          // 2453\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2454\n *                                                                                                   // 2455\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2456\n * you may not use this file except in compliance with the License.                                  // 2457\n * You may obtain a copy of the License at                                                           // 2458\n *                                                                                                   // 2459\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2460\n *                                                                                                   // 2461\n * Unless required by applicable law or agreed to in writing, software                               // 2462\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2463\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2464\n * See the License for the specific language governing permissions and                               // 2465\n * limitations under the License.                                                                    // 2466\n */                                                                                                  // 2467\n                                                                                                     // 2468\n/**                                                                                                  // 2469\n * Class constructor for Tabs MDL component.                                                         // 2470\n * Implements MDL component design pattern defined at:                                               // 2471\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2472\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2473\n */                                                                                                  // 2474\nfunction MaterialTabs(element) {                                                                     // 2475\n  'use strict';                                                                                      // 2476\n                                                                                                     // 2477\n  // Stores the HTML element.                                                                        // 2478\n  this.element_ = element;                                                                           // 2479\n                                                                                                     // 2480\n  // Initialize instance.                                                                            // 2481\n  this.init();                                                                                       // 2482\n}                                                                                                    // 2483\n                                                                                                     // 2484\n/**                                                                                                  // 2485\n * Store constants in one place so they can be updated easily.                                       // 2486\n * @enum {string}                                                                                    // 2487\n * @private                                                                                          // 2488\n */                                                                                                  // 2489\nMaterialTabs.prototype.Constant_ = {                                                                 // 2490\n  // None at the moment.                                                                             // 2491\n};                                                                                                   // 2492\n                                                                                                     // 2493\n/**                                                                                                  // 2494\n * Store strings for class names defined by this component that are used in                          // 2495\n * JavaScript. This allows us to simply change it in one place should we                             // 2496\n * decide to modify at a later date.                                                                 // 2497\n * @enum {string}                                                                                    // 2498\n * @private                                                                                          // 2499\n */                                                                                                  // 2500\nMaterialTabs.prototype.CssClasses_ = {                                                               // 2501\n  TAB_CLASS: 'mdl-tabs__tab',                                                                        // 2502\n  PANEL_CLASS: 'mdl-tabs__panel',                                                                    // 2503\n  ACTIVE_CLASS: 'is-active',                                                                         // 2504\n  UPGRADED_CLASS: 'is-upgraded',                                                                     // 2505\n                                                                                                     // 2506\n  MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                      // 2507\n  MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',                                                // 2508\n  MDL_RIPPLE: 'mdl-ripple',                                                                          // 2509\n  MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'                          // 2510\n};                                                                                                   // 2511\n                                                                                                     // 2512\n/**                                                                                                  // 2513\n * Handle clicks to a tabs component                                                                 // 2514\n * @private                                                                                          // 2515\n */                                                                                                  // 2516\nMaterialTabs.prototype.initTabs_ = function(e) {                                                     // 2517\n  'use strict';                                                                                      // 2518\n                                                                                                     // 2519\n  if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {                     // 2520\n    this.element_.classList.add(                                                                     // 2521\n      this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);                                          // 2522\n  }                                                                                                  // 2523\n                                                                                                     // 2524\n  // Select element tabs, document panels                                                            // 2525\n  this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);                     // 2526\n  this.panels_ =                                                                                     // 2527\n      this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);                            // 2528\n                                                                                                     // 2529\n  // Create new tabs for each tab element                                                            // 2530\n  for (var i = 0; i < this.tabs_.length; i++) {                                                      // 2531\n    new MaterialTab(this.tabs_[i], this);                                                            // 2532\n  }                                                                                                  // 2533\n                                                                                                     // 2534\n  this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);                                      // 2535\n};                                                                                                   // 2536\n                                                                                                     // 2537\n/**                                                                                                  // 2538\n * Reset tab state, dropping active classes                                                          // 2539\n * @private                                                                                          // 2540\n */                                                                                                  // 2541\nMaterialTabs.prototype.resetTabState_ = function() {                                                 // 2542\n  'use strict';                                                                                      // 2543\n                                                                                                     // 2544\n  for (var k = 0; k < this.tabs_.length; k++) {                                                      // 2545\n    this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);                                   // 2546\n  }                                                                                                  // 2547\n};                                                                                                   // 2548\n                                                                                                     // 2549\n/**                                                                                                  // 2550\n * Reset panel state, droping active classes                                                         // 2551\n * @private                                                                                          // 2552\n */                                                                                                  // 2553\nMaterialTabs.prototype.resetPanelState_ = function() {                                               // 2554\n  'use strict';                                                                                      // 2555\n                                                                                                     // 2556\n  for (var j = 0; j < this.panels_.length; j++) {                                                    // 2557\n    this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);                                 // 2558\n  }                                                                                                  // 2559\n};                                                                                                   // 2560\n                                                                                                     // 2561\nMaterialTabs.prototype.init = function() {                                                           // 2562\n  'use strict';                                                                                      // 2563\n                                                                                                     // 2564\n  if (this.element_) {                                                                               // 2565\n    this.initTabs_();                                                                                // 2566\n  }                                                                                                  // 2567\n};                                                                                                   // 2568\n                                                                                                     // 2569\nfunction MaterialTab(tab, ctx) {                                                                     // 2570\n  'use strict';                                                                                      // 2571\n                                                                                                     // 2572\n  if (tab) {                                                                                         // 2573\n    if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {                     // 2574\n      var rippleContainer = document.createElement('span');                                          // 2575\n      rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);                           // 2576\n      rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);                           // 2577\n      var ripple = document.createElement('span');                                                   // 2578\n      ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);                                              // 2579\n      rippleContainer.appendChild(ripple);                                                           // 2580\n      tab.appendChild(rippleContainer);                                                              // 2581\n    }                                                                                                // 2582\n                                                                                                     // 2583\n    tab.addEventListener('click', function(e) {                                                      // 2584\n      e.preventDefault();                                                                            // 2585\n      var href = tab.href.split('#')[1];                                                             // 2586\n      var panel = ctx.element_.querySelector('#' + href);                                            // 2587\n      ctx.resetTabState_();                                                                          // 2588\n      ctx.resetPanelState_();                                                                        // 2589\n      tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);                                               // 2590\n      panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);                                             // 2591\n    });                                                                                              // 2592\n                                                                                                     // 2593\n  }                                                                                                  // 2594\n}                                                                                                    // 2595\n                                                                                                     // 2596\n// The component registers itself. It can assume componentHandler is available                       // 2597\n// in the global scope.                                                                              // 2598\ncomponentHandler.register({                                                                          // 2599\n  constructor: MaterialTabs,                                                                         // 2600\n  classAsString: 'MaterialTabs',                                                                     // 2601\n  cssClass: 'mdl-js-tabs'                                                                            // 2602\n});                                                                                                  // 2603\n                                                                                                     // 2604\n/**                                                                                                  // 2605\n * @license                                                                                          // 2606\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2607\n *                                                                                                   // 2608\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2609\n * you may not use this file except in compliance with the License.                                  // 2610\n * You may obtain a copy of the License at                                                           // 2611\n *                                                                                                   // 2612\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2613\n *                                                                                                   // 2614\n * Unless required by applicable law or agreed to in writing, software                               // 2615\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2616\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2617\n * See the License for the specific language governing permissions and                               // 2618\n * limitations under the License.                                                                    // 2619\n */                                                                                                  // 2620\n                                                                                                     // 2621\n/**                                                                                                  // 2622\n * Class constructor for Textfield MDL component.                                                    // 2623\n * Implements MDL component design pattern defined at:                                               // 2624\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2625\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2626\n */                                                                                                  // 2627\nfunction MaterialTextfield(element) {                                                                // 2628\n  'use strict';                                                                                      // 2629\n                                                                                                     // 2630\n  this.element_ = element;                                                                           // 2631\n  this.maxRows = this.Constant_.NO_MAX_ROWS;                                                         // 2632\n  // Initialize instance.                                                                            // 2633\n  this.init();                                                                                       // 2634\n}                                                                                                    // 2635\n                                                                                                     // 2636\n/**                                                                                                  // 2637\n * Store constants in one place so they can be updated easily.                                       // 2638\n * @enum {string | number}                                                                           // 2639\n * @private                                                                                          // 2640\n */                                                                                                  // 2641\nMaterialTextfield.prototype.Constant_ = {                                                            // 2642\n  NO_MAX_ROWS: -1,                                                                                   // 2643\n  MAX_ROWS_ATTRIBUTE: 'maxrows'                                                                      // 2644\n};                                                                                                   // 2645\n                                                                                                     // 2646\n/**                                                                                                  // 2647\n * Store strings for class names defined by this component that are used in                          // 2648\n * JavaScript. This allows us to simply change it in one place should we                             // 2649\n * decide to modify at a later date.                                                                 // 2650\n * @enum {string}                                                                                    // 2651\n * @private                                                                                          // 2652\n */                                                                                                  // 2653\nMaterialTextfield.prototype.CssClasses_ = {                                                          // 2654\n  LABEL: 'mdl-textfield__label',                                                                     // 2655\n  INPUT: 'mdl-textfield__input',                                                                     // 2656\n  IS_DIRTY: 'is-dirty',                                                                              // 2657\n  IS_FOCUSED: 'is-focused',                                                                          // 2658\n  IS_DISABLED: 'is-disabled',                                                                        // 2659\n  IS_INVALID: 'is-invalid',                                                                          // 2660\n  IS_UPGRADED: 'is-upgraded'                                                                         // 2661\n};                                                                                                   // 2662\n                                                                                                     // 2663\n/**                                                                                                  // 2664\n * Handle input being entered.                                                                       // 2665\n * @param {Event} event The event that fired.                                                        // 2666\n * @private                                                                                          // 2667\n */                                                                                                  // 2668\nMaterialTextfield.prototype.onKeyDown_ = function(event) {                                           // 2669\n  'use strict';                                                                                      // 2670\n                                                                                                     // 2671\n  var currentRowCount = event.target.value.split('\\n').length;                                       // 2672\n  if (event.keyCode === 13) {                                                                        // 2673\n    if (currentRowCount >= this.maxRows) {                                                           // 2674\n      event.preventDefault();                                                                        // 2675\n    }                                                                                                // 2676\n  }                                                                                                  // 2677\n};                                                                                                   // 2678\n                                                                                                     // 2679\n/**                                                                                                  // 2680\n * Handle focus.                                                                                     // 2681\n * @param {Event} event The event that fired.                                                        // 2682\n * @private                                                                                          // 2683\n */                                                                                                  // 2684\nMaterialTextfield.prototype.onFocus_ = function(event) {                                             // 2685\n  'use strict';                                                                                      // 2686\n                                                                                                     // 2687\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 2688\n};                                                                                                   // 2689\n                                                                                                     // 2690\n/**                                                                                                  // 2691\n * Handle lost focus.                                                                                // 2692\n * @param {Event} event The event that fired.                                                        // 2693\n * @private                                                                                          // 2694\n */                                                                                                  // 2695\nMaterialTextfield.prototype.onBlur_ = function(event) {                                              // 2696\n  'use strict';                                                                                      // 2697\n                                                                                                     // 2698\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 2699\n};                                                                                                   // 2700\n                                                                                                     // 2701\n/**                                                                                                  // 2702\n * Handle class updates.                                                                             // 2703\n * @param {HTMLElement} button The button whose classes we should update.                            // 2704\n * @param {HTMLElement} label The label whose classes we should update.                              // 2705\n * @private                                                                                          // 2706\n */                                                                                                  // 2707\nMaterialTextfield.prototype.updateClasses_ = function() {                                            // 2708\n  'use strict';                                                                                      // 2709\n                                                                                                     // 2710\n  if (this.input_.disabled) {                                                                        // 2711\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);                                       // 2712\n  } else {                                                                                           // 2713\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);                                    // 2714\n  }                                                                                                  // 2715\n                                                                                                     // 2716\n  if (this.input_.validity.valid) {                                                                  // 2717\n    this.element_.classList.remove(this.CssClasses_.IS_INVALID);                                     // 2718\n  } else {                                                                                           // 2719\n    this.element_.classList.add(this.CssClasses_.IS_INVALID);                                        // 2720\n  }                                                                                                  // 2721\n                                                                                                     // 2722\n  if (this.input_.value && this.input_.value.length > 0) {                                           // 2723\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);                                          // 2724\n  } else {                                                                                           // 2725\n    this.element_.classList.remove(this.CssClasses_.IS_DIRTY);                                       // 2726\n  }                                                                                                  // 2727\n};                                                                                                   // 2728\n                                                                                                     // 2729\n// Public methods.                                                                                   // 2730\n                                                                                                     // 2731\n/**                                                                                                  // 2732\n * Disable text field.                                                                               // 2733\n * @public                                                                                           // 2734\n */                                                                                                  // 2735\nMaterialTextfield.prototype.disable = function() {                                                   // 2736\n  'use strict';                                                                                      // 2737\n                                                                                                     // 2738\n  this.input_.disabled = true;                                                                       // 2739\n  this.updateClasses_();                                                                             // 2740\n};                                                                                                   // 2741\n                                                                                                     // 2742\n/**                                                                                                  // 2743\n * Enable text field.                                                                                // 2744\n * @public                                                                                           // 2745\n */                                                                                                  // 2746\nMaterialTextfield.prototype.enable = function() {                                                    // 2747\n  'use strict';                                                                                      // 2748\n                                                                                                     // 2749\n  this.input_.disabled = false;                                                                      // 2750\n  this.updateClasses_();                                                                             // 2751\n};                                                                                                   // 2752\n                                                                                                     // 2753\n/**                                                                                                  // 2754\n * Update text field value.                                                                          // 2755\n * @param {String} value The value to which to set the control (optional).                           // 2756\n * @public                                                                                           // 2757\n */                                                                                                  // 2758\nMaterialTextfield.prototype.change = function(value) {                                               // 2759\n  'use strict';                                                                                      // 2760\n                                                                                                     // 2761\n  if (value) {                                                                                       // 2762\n    this.input_.value = value;                                                                       // 2763\n  }                                                                                                  // 2764\n  this.updateClasses_();                                                                             // 2765\n};                                                                                                   // 2766\n                                                                                                     // 2767\n/**                                                                                                  // 2768\n * Initialize element.                                                                               // 2769\n */                                                                                                  // 2770\nMaterialTextfield.prototype.init = function() {                                                      // 2771\n  'use strict';                                                                                      // 2772\n                                                                                                     // 2773\n  if (this.element_) {                                                                               // 2774\n    this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);                         // 2775\n    this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);                         // 2776\n                                                                                                     // 2777\n    if (this.input_) {                                                                               // 2778\n      if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {                             // 2779\n        this.maxRows = parseInt(this.input_.getAttribute(                                            // 2780\n            this.Constant_.MAX_ROWS_ATTRIBUTE), 10);                                                 // 2781\n        if (isNaN(this.maxRows)) {                                                                   // 2782\n          this.maxRows = this.Constant_.NO_MAX_ROWS;                                                 // 2783\n        }                                                                                            // 2784\n      }                                                                                              // 2785\n                                                                                                     // 2786\n      this.boundUpdateClassesHandler = this.updateClasses_.bind(this);                               // 2787\n      this.boundFocusHandler = this.onFocus_.bind(this);                                             // 2788\n      this.boundBlurHandler = this.onBlur_.bind(this);                                               // 2789\n      this.input_.addEventListener('input', this.boundUpdateClassesHandler);                         // 2790\n      this.input_.addEventListener('focus', this.boundFocusHandler);                                 // 2791\n      this.input_.addEventListener('blur', this.boundBlurHandler);                                   // 2792\n                                                                                                     // 2793\n      if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {                                             // 2794\n        // TODO: This should handle pasting multi line text.                                         // 2795\n        // Currently doesn't.                                                                        // 2796\n        this.boundKeyDownHandler = this.onKeyDown_.bind(this);                                       // 2797\n        this.input_.addEventListener('keydown', this.boundKeyDownHandler);                           // 2798\n      }                                                                                              // 2799\n                                                                                                     // 2800\n      this.updateClasses_();                                                                         // 2801\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                     // 2802\n    }                                                                                                // 2803\n  }                                                                                                  // 2804\n};                                                                                                   // 2805\n                                                                                                     // 2806\n/*                                                                                                   // 2807\n* Downgrade the component                                                                            // 2808\n*/                                                                                                   // 2809\nMaterialTextfield.prototype.mdlDowngrade_ = function() {                                             // 2810\n  'use strict';                                                                                      // 2811\n  this.input_.removeEventListener('input', this.boundUpdateClassesHandler);                          // 2812\n  this.input_.removeEventListener('focus', this.boundFocusHandler);                                  // 2813\n  this.input_.removeEventListener('blur', this.boundBlurHandler);                                    // 2814\n  if (this.boundKeyDownHandler) {                                                                    // 2815\n    this.input_.removeEventListener('keydown', this.boundKeyDownHandler);                            // 2816\n  }                                                                                                  // 2817\n};                                                                                                   // 2818\n                                                                                                     // 2819\n// The component registers itself. It can assume componentHandler is available                       // 2820\n// in the global scope.                                                                              // 2821\ncomponentHandler.register({                                                                          // 2822\n  constructor: MaterialTextfield,                                                                    // 2823\n  classAsString: 'MaterialTextfield',                                                                // 2824\n  cssClass: 'mdl-js-textfield'                                                                       // 2825\n});                                                                                                  // 2826\n                                                                                                     // 2827\n/**                                                                                                  // 2828\n * @license                                                                                          // 2829\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2830\n *                                                                                                   // 2831\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2832\n * you may not use this file except in compliance with the License.                                  // 2833\n * You may obtain a copy of the License at                                                           // 2834\n *                                                                                                   // 2835\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2836\n *                                                                                                   // 2837\n * Unless required by applicable law or agreed to in writing, software                               // 2838\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2839\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2840\n * See the License for the specific language governing permissions and                               // 2841\n * limitations under the License.                                                                    // 2842\n */                                                                                                  // 2843\n                                                                                                     // 2844\n/**                                                                                                  // 2845\n * Class constructor for Tooltip MDL component.                                                      // 2846\n * Implements MDL component design pattern defined at:                                               // 2847\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2848\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2849\n */                                                                                                  // 2850\nfunction MaterialTooltip(element) {                                                                  // 2851\n  'use strict';                                                                                      // 2852\n                                                                                                     // 2853\n  this.element_ = element;                                                                           // 2854\n                                                                                                     // 2855\n  // Initialize instance.                                                                            // 2856\n  this.init();                                                                                       // 2857\n}                                                                                                    // 2858\n                                                                                                     // 2859\n/**                                                                                                  // 2860\n * Store constants in one place so they can be updated easily.                                       // 2861\n * @enum {string | number}                                                                           // 2862\n * @private                                                                                          // 2863\n */                                                                                                  // 2864\nMaterialTooltip.prototype.Constant_ = {                                                              // 2865\n  // None for now.                                                                                   // 2866\n};                                                                                                   // 2867\n                                                                                                     // 2868\n/**                                                                                                  // 2869\n * Store strings for class names defined by this component that are used in                          // 2870\n * JavaScript. This allows us to simply change it in one place should we                             // 2871\n * decide to modify at a later date.                                                                 // 2872\n * @enum {string}                                                                                    // 2873\n * @private                                                                                          // 2874\n */                                                                                                  // 2875\nMaterialTooltip.prototype.CssClasses_ = {                                                            // 2876\n  IS_ACTIVE: 'is-active'                                                                             // 2877\n};                                                                                                   // 2878\n                                                                                                     // 2879\n/**                                                                                                  // 2880\n * Handle mouseenter for tooltip.                                                                    // 2881\n * @param {Event} event The event that fired.                                                        // 2882\n * @private                                                                                          // 2883\n */                                                                                                  // 2884\nMaterialTooltip.prototype.handleMouseEnter_ = function(event) {                                      // 2885\n  'use strict';                                                                                      // 2886\n                                                                                                     // 2887\n  event.stopPropagation();                                                                           // 2888\n  var props = event.target.getBoundingClientRect();                                                  // 2889\n  this.element_.style.left = props.left + (props.width / 2) + 'px';                                  // 2890\n  this.element_.style.marginLeft = -1 * (this.element_.offsetWidth / 2) + 'px';                      // 2891\n  this.element_.style.top = props.top + props.height + 10 + 'px';                                    // 2892\n  this.element_.classList.add(this.CssClasses_.IS_ACTIVE);                                           // 2893\n};                                                                                                   // 2894\n                                                                                                     // 2895\n/**                                                                                                  // 2896\n * Handle mouseleave for tooltip.                                                                    // 2897\n * @param {Event} event The event that fired.                                                        // 2898\n * @private                                                                                          // 2899\n */                                                                                                  // 2900\nMaterialTooltip.prototype.handleMouseLeave_ = function(event) {                                      // 2901\n  'use strict';                                                                                      // 2902\n                                                                                                     // 2903\n  event.stopPropagation();                                                                           // 2904\n  this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);                                        // 2905\n};                                                                                                   // 2906\n                                                                                                     // 2907\n/**                                                                                                  // 2908\n * Initialize element.                                                                               // 2909\n */                                                                                                  // 2910\nMaterialTooltip.prototype.init = function() {                                                        // 2911\n  'use strict';                                                                                      // 2912\n                                                                                                     // 2913\n  if (this.element_) {                                                                               // 2914\n    var forElId = this.element_.getAttribute('for');                                                 // 2915\n                                                                                                     // 2916\n    if (forElId) {                                                                                   // 2917\n      this.forElement_ = document.getElementById(forElId);                                           // 2918\n    }                                                                                                // 2919\n                                                                                                     // 2920\n    if (this.forElement_) {                                                                          // 2921\n      this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);                               // 2922\n      this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);                               // 2923\n      this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler,                   // 2924\n          false);                                                                                    // 2925\n      this.forElement_.addEventListener('click', this.boundMouseEnterHandler,                        // 2926\n          false);                                                                                    // 2927\n      this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler);                  // 2928\n    }                                                                                                // 2929\n  }                                                                                                  // 2930\n};                                                                                                   // 2931\n                                                                                                     // 2932\n/*                                                                                                   // 2933\n* Downgrade the component                                                                            // 2934\n*/                                                                                                   // 2935\nMaterialTooltip.prototype.mdlDowngrade_ = function() {                                               // 2936\n  'use strict';                                                                                      // 2937\n  if (this.forElement_) {                                                                            // 2938\n    this.forElement_.removeEventListener('mouseenter', this.boundMouseEnterHandler, false);          // 2939\n    this.forElement_.removeEventListener('click', this.boundMouseEnterHandler, false);               // 2940\n    this.forElement_.removeEventListener('mouseleave', this.boundMouseLeaveHandler);                 // 2941\n  }                                                                                                  // 2942\n};                                                                                                   // 2943\n                                                                                                     // 2944\n// The component registers itself. It can assume componentHandler is available                       // 2945\n// in the global scope.                                                                              // 2946\ncomponentHandler.register({                                                                          // 2947\n  constructor: MaterialTooltip,                                                                      // 2948\n  classAsString: 'MaterialTooltip',                                                                  // 2949\n  cssClass: 'mdl-tooltip'                                                                            // 2950\n});                                                                                                  // 2951\n                                                                                                     // 2952\n/**                                                                                                  // 2953\n * @license                                                                                          // 2954\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2955\n *                                                                                                   // 2956\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2957\n * you may not use this file except in compliance with the License.                                  // 2958\n * You may obtain a copy of the License at                                                           // 2959\n *                                                                                                   // 2960\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2961\n *                                                                                                   // 2962\n * Unless required by applicable law or agreed to in writing, software                               // 2963\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2964\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2965\n * See the License for the specific language governing permissions and                               // 2966\n * limitations under the License.                                                                    // 2967\n */                                                                                                  // 2968\n                                                                                                     // 2969\n/**                                                                                                  // 2970\n * Class constructor for Layout MDL component.                                                       // 2971\n * Implements MDL component design pattern defined at:                                               // 2972\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2973\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2974\n */                                                                                                  // 2975\nfunction MaterialLayout(element) {                                                                   // 2976\n  'use strict';                                                                                      // 2977\n                                                                                                     // 2978\n  this.element_ = element;                                                                           // 2979\n                                                                                                     // 2980\n  // Initialize instance.                                                                            // 2981\n  this.init();                                                                                       // 2982\n}                                                                                                    // 2983\n                                                                                                     // 2984\n/**                                                                                                  // 2985\n * Store constants in one place so they can be updated easily.                                       // 2986\n * @enum {string | number}                                                                           // 2987\n * @private                                                                                          // 2988\n */                                                                                                  // 2989\nMaterialLayout.prototype.Constant_ = {                                                               // 2990\n  MAX_WIDTH: '(max-width: 850px)',                                                                   // 2991\n  TAB_SCROLL_PIXELS: 100,                                                                            // 2992\n                                                                                                     // 2993\n  MENU_ICON: 'menu',                                                                                 // 2994\n  CHEVRON_LEFT: 'chevron_left',                                                                      // 2995\n  CHEVRON_RIGHT: 'chevron_right'                                                                     // 2996\n};                                                                                                   // 2997\n                                                                                                     // 2998\n/**                                                                                                  // 2999\n * Modes.                                                                                            // 3000\n * @enum {number}                                                                                    // 3001\n * @private                                                                                          // 3002\n */                                                                                                  // 3003\nMaterialLayout.prototype.Mode_ = {                                                                   // 3004\n  STANDARD: 0,                                                                                       // 3005\n  SEAMED: 1,                                                                                         // 3006\n  WATERFALL: 2,                                                                                      // 3007\n  SCROLL: 3                                                                                          // 3008\n};                                                                                                   // 3009\n                                                                                                     // 3010\n/**                                                                                                  // 3011\n * Store strings for class names defined by this component that are used in                          // 3012\n * JavaScript. This allows us to simply change it in one place should we                             // 3013\n * decide to modify at a later date.                                                                 // 3014\n * @enum {string}                                                                                    // 3015\n * @private                                                                                          // 3016\n */                                                                                                  // 3017\nMaterialLayout.prototype.CssClasses_ = {                                                             // 3018\n  CONTAINER: 'mdl-layout__container',                                                                // 3019\n  HEADER: 'mdl-layout__header',                                                                      // 3020\n  DRAWER: 'mdl-layout__drawer',                                                                      // 3021\n  CONTENT: 'mdl-layout__content',                                                                    // 3022\n  DRAWER_BTN: 'mdl-layout__drawer-button',                                                           // 3023\n                                                                                                     // 3024\n  ICON: 'material-icons',                                                                            // 3025\n                                                                                                     // 3026\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                          // 3027\n  RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',                                              // 3028\n  RIPPLE: 'mdl-ripple',                                                                              // 3029\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 3030\n                                                                                                     // 3031\n  HEADER_SEAMED: 'mdl-layout__header--seamed',                                                       // 3032\n  HEADER_WATERFALL: 'mdl-layout__header--waterfall',                                                 // 3033\n  HEADER_SCROLL: 'mdl-layout__header--scroll',                                                       // 3034\n                                                                                                     // 3035\n  FIXED_HEADER: 'mdl-layout--fixed-header',                                                          // 3036\n  OBFUSCATOR: 'mdl-layout__obfuscator',                                                              // 3037\n                                                                                                     // 3038\n  TAB_BAR: 'mdl-layout__tab-bar',                                                                    // 3039\n  TAB_CONTAINER: 'mdl-layout__tab-bar-container',                                                    // 3040\n  TAB: 'mdl-layout__tab',                                                                            // 3041\n  TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',                                                      // 3042\n  TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',                                            // 3043\n  TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',                                          // 3044\n  PANEL: 'mdl-layout__tab-panel',                                                                    // 3045\n                                                                                                     // 3046\n  HAS_DRAWER: 'has-drawer',                                                                          // 3047\n  HAS_TABS: 'has-tabs',                                                                              // 3048\n  HAS_SCROLLING_HEADER: 'has-scrolling-header',                                                      // 3049\n  CASTING_SHADOW: 'is-casting-shadow',                                                               // 3050\n  IS_COMPACT: 'is-compact',                                                                          // 3051\n  IS_SMALL_SCREEN: 'is-small-screen',                                                                // 3052\n  IS_DRAWER_OPEN: 'is-visible',                                                                      // 3053\n  IS_ACTIVE: 'is-active',                                                                            // 3054\n  IS_UPGRADED: 'is-upgraded',                                                                        // 3055\n  IS_ANIMATING: 'is-animating'                                                                       // 3056\n};                                                                                                   // 3057\n                                                                                                     // 3058\n/**                                                                                                  // 3059\n * Handles scrolling on the content.                                                                 // 3060\n * @private                                                                                          // 3061\n */                                                                                                  // 3062\nMaterialLayout.prototype.contentScrollHandler_ = function() {                                        // 3063\n  'use strict';                                                                                      // 3064\n                                                                                                     // 3065\n  if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {                              // 3066\n    return;                                                                                          // 3067\n  }                                                                                                  // 3068\n                                                                                                     // 3069\n  if (this.content_.scrollTop > 0 &&                                                                 // 3070\n      !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {                               // 3071\n    this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);                                     // 3072\n    this.header_.classList.add(this.CssClasses_.IS_COMPACT);                                         // 3073\n    this.header_.classList.add(this.CssClasses_.IS_ANIMATING);                                       // 3074\n  } else if (this.content_.scrollTop <= 0 &&                                                         // 3075\n      this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {                                // 3076\n    this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);                                  // 3077\n    this.header_.classList.remove(this.CssClasses_.IS_COMPACT);                                      // 3078\n    this.header_.classList.add(this.CssClasses_.IS_ANIMATING);                                       // 3079\n  }                                                                                                  // 3080\n};                                                                                                   // 3081\n                                                                                                     // 3082\n/**                                                                                                  // 3083\n * Handles changes in screen size.                                                                   // 3084\n * @private                                                                                          // 3085\n */                                                                                                  // 3086\nMaterialLayout.prototype.screenSizeHandler_ = function() {                                           // 3087\n  'use strict';                                                                                      // 3088\n                                                                                                     // 3089\n  if (this.screenSizeMediaQuery_.matches) {                                                          // 3090\n    this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);                                   // 3091\n  } else {                                                                                           // 3092\n    this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);                                // 3093\n    // Collapse drawer (if any) when moving to a large screen size.                                  // 3094\n    if (this.drawer_) {                                                                              // 3095\n      this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);                                // 3096\n    }                                                                                                // 3097\n  }                                                                                                  // 3098\n};                                                                                                   // 3099\n                                                                                                     // 3100\n/**                                                                                                  // 3101\n * Handles toggling of the drawer.                                                                   // 3102\n * @param {Element} drawer The drawer container element.                                             // 3103\n * @private                                                                                          // 3104\n */                                                                                                  // 3105\nMaterialLayout.prototype.drawerToggleHandler_ = function() {                                         // 3106\n  'use strict';                                                                                      // 3107\n                                                                                                     // 3108\n  this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);                                    // 3109\n};                                                                                                   // 3110\n                                                                                                     // 3111\n/**                                                                                                  // 3112\n * Handles (un)setting the `is-animating` class                                                      // 3113\n */                                                                                                  // 3114\nMaterialLayout.prototype.headerTransitionEndHandler = function() {                                   // 3115\n  'use strict';                                                                                      // 3116\n                                                                                                     // 3117\n  this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);                                      // 3118\n};                                                                                                   // 3119\n                                                                                                     // 3120\n/**                                                                                                  // 3121\n * Handles expanding the header on click                                                             // 3122\n */                                                                                                  // 3123\nMaterialLayout.prototype.headerClickHandler = function() {                                           // 3124\n  'use strict';                                                                                      // 3125\n                                                                                                     // 3126\n  if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {                                // 3127\n    this.header_.classList.remove(this.CssClasses_.IS_COMPACT);                                      // 3128\n    this.header_.classList.add(this.CssClasses_.IS_ANIMATING);                                       // 3129\n  }                                                                                                  // 3130\n};                                                                                                   // 3131\n                                                                                                     // 3132\n/**                                                                                                  // 3133\n * Reset tab state, dropping active classes                                                          // 3134\n * @private                                                                                          // 3135\n */                                                                                                  // 3136\nMaterialLayout.prototype.resetTabState_ = function(tabBar) {                                         // 3137\n  'use strict';                                                                                      // 3138\n                                                                                                     // 3139\n  for (var k = 0; k < tabBar.length; k++) {                                                          // 3140\n    tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);                                          // 3141\n  }                                                                                                  // 3142\n};                                                                                                   // 3143\n                                                                                                     // 3144\n/**                                                                                                  // 3145\n * Reset panel state, droping active classes                                                         // 3146\n * @private                                                                                          // 3147\n */                                                                                                  // 3148\nMaterialLayout.prototype.resetPanelState_ = function(panels) {                                       // 3149\n  'use strict';                                                                                      // 3150\n                                                                                                     // 3151\n  for (var j = 0; j < panels.length; j++) {                                                          // 3152\n    panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);                                          // 3153\n  }                                                                                                  // 3154\n};                                                                                                   // 3155\n                                                                                                     // 3156\n/**                                                                                                  // 3157\n * Initialize element.                                                                               // 3158\n */                                                                                                  // 3159\nMaterialLayout.prototype.init = function() {                                                         // 3160\n  'use strict';                                                                                      // 3161\n                                                                                                     // 3162\n  if (this.element_) {                                                                               // 3163\n    var container = document.createElement('div');                                                   // 3164\n    container.classList.add(this.CssClasses_.CONTAINER);                                             // 3165\n    this.element_.parentElement.insertBefore(container, this.element_);                              // 3166\n    this.element_.parentElement.removeChild(this.element_);                                          // 3167\n    container.appendChild(this.element_);                                                            // 3168\n                                                                                                     // 3169\n    var directChildren = this.element_.childNodes;                                                   // 3170\n    for (var c = 0; c < directChildren.length; c++) {                                                // 3171\n      var child = directChildren[c];                                                                 // 3172\n      if (child.classList &&                                                                         // 3173\n          child.classList.contains(this.CssClasses_.HEADER)) {                                       // 3174\n        this.header_ = child;                                                                        // 3175\n      }                                                                                              // 3176\n                                                                                                     // 3177\n      if (child.classList &&                                                                         // 3178\n          child.classList.contains(this.CssClasses_.DRAWER)) {                                       // 3179\n        this.drawer_ = child;                                                                        // 3180\n      }                                                                                              // 3181\n                                                                                                     // 3182\n      if (child.classList &&                                                                         // 3183\n          child.classList.contains(this.CssClasses_.CONTENT)) {                                      // 3184\n        this.content_ = child;                                                                       // 3185\n      }                                                                                              // 3186\n    }                                                                                                // 3187\n                                                                                                     // 3188\n    if (this.header_) {                                                                              // 3189\n      this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);                     // 3190\n    }                                                                                                // 3191\n                                                                                                     // 3192\n    var mode = this.Mode_.STANDARD;                                                                  // 3193\n                                                                                                     // 3194\n    // Keep an eye on screen size, and add/remove auxiliary class for styling                        // 3195\n    // of small screens.                                                                             // 3196\n    this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);                        // 3197\n    this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));                      // 3198\n    this.screenSizeHandler_();                                                                       // 3199\n                                                                                                     // 3200\n    if (this.header_) {                                                                              // 3201\n      if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {                         // 3202\n        mode = this.Mode_.SEAMED;                                                                    // 3203\n      } else if (this.header_.classList.contains(                                                    // 3204\n          this.CssClasses_.HEADER_WATERFALL)) {                                                      // 3205\n        mode = this.Mode_.WATERFALL;                                                                 // 3206\n        this.header_.addEventListener('transitionend',                                               // 3207\n          this.headerTransitionEndHandler.bind(this));                                               // 3208\n        this.header_.addEventListener('click',                                                       // 3209\n          this.headerClickHandler.bind(this));                                                       // 3210\n      } else if (this.header_.classList.contains(                                                    // 3211\n          this.CssClasses_.HEADER_SCROLL)) {                                                         // 3212\n        mode = this.Mode_.SCROLL;                                                                    // 3213\n        container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);                              // 3214\n      }                                                                                              // 3215\n                                                                                                     // 3216\n      if (mode === this.Mode_.STANDARD) {                                                            // 3217\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);                                 // 3218\n        if (this.tabBar_) {                                                                          // 3219\n          this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);                               // 3220\n        }                                                                                            // 3221\n      } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {                         // 3222\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);                              // 3223\n        if (this.tabBar_) {                                                                          // 3224\n          this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);                            // 3225\n        }                                                                                            // 3226\n      } else if (mode === this.Mode_.WATERFALL) {                                                    // 3227\n        // Add and remove shadows depending on scroll position.                                      // 3228\n        // Also add/remove auxiliary class for styling of the compact version of                     // 3229\n        // the header.                                                                               // 3230\n        this.content_.addEventListener('scroll',                                                     // 3231\n            this.contentScrollHandler_.bind(this));                                                  // 3232\n        this.contentScrollHandler_();                                                                // 3233\n      }                                                                                              // 3234\n    }                                                                                                // 3235\n                                                                                                     // 3236\n    // Add drawer toggling button to our layout, if we have an openable drawer.                      // 3237\n    if (this.drawer_) {                                                                              // 3238\n      var drawerButton = document.createElement('div');                                              // 3239\n      drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);                                       // 3240\n      var drawerButtonIcon = document.createElement('i');                                            // 3241\n      drawerButtonIcon.classList.add(this.CssClasses_.ICON);                                         // 3242\n      drawerButtonIcon.textContent = this.Constant_.MENU_ICON;                                       // 3243\n      drawerButton.appendChild(drawerButtonIcon);                                                    // 3244\n      drawerButton.addEventListener('click',                                                         // 3245\n          this.drawerToggleHandler_.bind(this));                                                     // 3246\n                                                                                                     // 3247\n      // Add a class if the layout has a drawer, for altering the left padding.                      // 3248\n      // Adds the HAS_DRAWER to the elements since this.header_ may or may                           // 3249\n      // not be present.                                                                             // 3250\n      this.element_.classList.add(this.CssClasses_.HAS_DRAWER);                                      // 3251\n                                                                                                     // 3252\n      // If we have a fixed header, add the button to the header rather than                         // 3253\n      // the layout.                                                                                 // 3254\n      if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {                         // 3255\n        this.header_.insertBefore(drawerButton, this.header_.firstChild);                            // 3256\n      } else {                                                                                       // 3257\n        this.element_.insertBefore(drawerButton, this.content_);                                     // 3258\n      }                                                                                              // 3259\n                                                                                                     // 3260\n      var obfuscator = document.createElement('div');                                                // 3261\n      obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);                                         // 3262\n      this.element_.appendChild(obfuscator);                                                         // 3263\n      obfuscator.addEventListener('click',                                                           // 3264\n          this.drawerToggleHandler_.bind(this));                                                     // 3265\n    }                                                                                                // 3266\n                                                                                                     // 3267\n    // Initialize tabs, if any.                                                                      // 3268\n    if (this.header_ && this.tabBar_) {                                                              // 3269\n      this.element_.classList.add(this.CssClasses_.HAS_TABS);                                        // 3270\n                                                                                                     // 3271\n      var tabContainer = document.createElement('div');                                              // 3272\n      tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);                                    // 3273\n      this.header_.insertBefore(tabContainer, this.tabBar_);                                         // 3274\n      this.header_.removeChild(this.tabBar_);                                                        // 3275\n                                                                                                     // 3276\n      var leftButton = document.createElement('div');                                                // 3277\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);                                     // 3278\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);                                // 3279\n      var leftButtonIcon = document.createElement('i');                                              // 3280\n      leftButtonIcon.classList.add(this.CssClasses_.ICON);                                           // 3281\n      leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;                                      // 3282\n      leftButton.appendChild(leftButtonIcon);                                                        // 3283\n      leftButton.addEventListener('click', function() {                                              // 3284\n        this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;                                 // 3285\n      }.bind(this));                                                                                 // 3286\n                                                                                                     // 3287\n      var rightButton = document.createElement('div');                                               // 3288\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);                                    // 3289\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);                              // 3290\n      var rightButtonIcon = document.createElement('i');                                             // 3291\n      rightButtonIcon.classList.add(this.CssClasses_.ICON);                                          // 3292\n      rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;                                    // 3293\n      rightButton.appendChild(rightButtonIcon);                                                      // 3294\n      rightButton.addEventListener('click', function() {                                             // 3295\n        this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;                                 // 3296\n      }.bind(this));                                                                                 // 3297\n                                                                                                     // 3298\n      tabContainer.appendChild(leftButton);                                                          // 3299\n      tabContainer.appendChild(this.tabBar_);                                                        // 3300\n      tabContainer.appendChild(rightButton);                                                         // 3301\n                                                                                                     // 3302\n      // Add and remove buttons depending on scroll position.                                        // 3303\n      var tabScrollHandler = function() {                                                            // 3304\n        if (this.tabBar_.scrollLeft > 0) {                                                           // 3305\n          leftButton.classList.add(this.CssClasses_.IS_ACTIVE);                                      // 3306\n        } else {                                                                                     // 3307\n          leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);                                   // 3308\n        }                                                                                            // 3309\n                                                                                                     // 3310\n        if (this.tabBar_.scrollLeft <                                                                // 3311\n            this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {                                   // 3312\n          rightButton.classList.add(this.CssClasses_.IS_ACTIVE);                                     // 3313\n        } else {                                                                                     // 3314\n          rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);                                  // 3315\n        }                                                                                            // 3316\n      }.bind(this);                                                                                  // 3317\n                                                                                                     // 3318\n      this.tabBar_.addEventListener('scroll', tabScrollHandler);                                     // 3319\n      tabScrollHandler();                                                                            // 3320\n                                                                                                     // 3321\n      if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {                      // 3322\n        this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);                           // 3323\n      }                                                                                              // 3324\n                                                                                                     // 3325\n      // Select element tabs, document panels                                                        // 3326\n      var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);                          // 3327\n      var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);                     // 3328\n                                                                                                     // 3329\n      // Create new tabs for each tab element                                                        // 3330\n      for (var i = 0; i < tabs.length; i++) {                                                        // 3331\n        new MaterialLayoutTab(tabs[i], tabs, panels, this);                                          // 3332\n      }                                                                                              // 3333\n    }                                                                                                // 3334\n                                                                                                     // 3335\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 3336\n  }                                                                                                  // 3337\n};                                                                                                   // 3338\n                                                                                                     // 3339\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {                                              // 3340\n  'use strict';                                                                                      // 3341\n                                                                                                     // 3342\n  if (tab) {                                                                                         // 3343\n    if (layout.tabBar_.classList.contains(                                                           // 3344\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {                                                      // 3345\n      var rippleContainer = document.createElement('span');                                          // 3346\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);                            // 3347\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);                            // 3348\n      var ripple = document.createElement('span');                                                   // 3349\n      ripple.classList.add(layout.CssClasses_.RIPPLE);                                               // 3350\n      rippleContainer.appendChild(ripple);                                                           // 3351\n      tab.appendChild(rippleContainer);                                                              // 3352\n    }                                                                                                // 3353\n                                                                                                     // 3354\n    tab.addEventListener('click', function(e) {                                                      // 3355\n      e.preventDefault();                                                                            // 3356\n      var href = tab.href.split('#')[1];                                                             // 3357\n      var panel = layout.content_.querySelector('#' + href);                                         // 3358\n      layout.resetTabState_(tabs);                                                                   // 3359\n      layout.resetPanelState_(panels);                                                               // 3360\n      tab.classList.add(layout.CssClasses_.IS_ACTIVE);                                               // 3361\n      panel.classList.add(layout.CssClasses_.IS_ACTIVE);                                             // 3362\n    });                                                                                              // 3363\n                                                                                                     // 3364\n  }                                                                                                  // 3365\n}                                                                                                    // 3366\n                                                                                                     // 3367\n// The component registers itself. It can assume componentHandler is available                       // 3368\n// in the global scope.                                                                              // 3369\ncomponentHandler.register({                                                                          // 3370\n  constructor: MaterialLayout,                                                                       // 3371\n  classAsString: 'MaterialLayout',                                                                   // 3372\n  cssClass: 'mdl-js-layout'                                                                          // 3373\n});                                                                                                  // 3374\n                                                                                                     // 3375\n/**                                                                                                  // 3376\n * @license                                                                                          // 3377\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 3378\n *                                                                                                   // 3379\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 3380\n * you may not use this file except in compliance with the License.                                  // 3381\n * You may obtain a copy of the License at                                                           // 3382\n *                                                                                                   // 3383\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 3384\n *                                                                                                   // 3385\n * Unless required by applicable law or agreed to in writing, software                               // 3386\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 3387\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 3388\n * See the License for the specific language governing permissions and                               // 3389\n * limitations under the License.                                                                    // 3390\n */                                                                                                  // 3391\n                                                                                                     // 3392\n/**                                                                                                  // 3393\n * Class constructor for Data Table Card MDL component.                                              // 3394\n * Implements MDL component design pattern defined at:                                               // 3395\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 3396\n * @param {HTMLElement} element The element that will be upgraded.                                   // 3397\n */                                                                                                  // 3398\nfunction MaterialDataTable(element) {                                                                // 3399\n  'use strict';                                                                                      // 3400\n                                                                                                     // 3401\n  this.element_ = element;                                                                           // 3402\n                                                                                                     // 3403\n  // Initialize instance.                                                                            // 3404\n  this.init();                                                                                       // 3405\n}                                                                                                    // 3406\n                                                                                                     // 3407\n/**                                                                                                  // 3408\n * Store constants in one place so they can be updated easily.                                       // 3409\n * @enum {string | number}                                                                           // 3410\n * @private                                                                                          // 3411\n */                                                                                                  // 3412\nMaterialDataTable.prototype.Constant_ = {                                                            // 3413\n  // None at the moment.                                                                             // 3414\n};                                                                                                   // 3415\n                                                                                                     // 3416\n/**                                                                                                  // 3417\n * Store strings for class names defined by this component that are used in                          // 3418\n * JavaScript. This allows us to simply change it in one place should we                             // 3419\n * decide to modify at a later date.                                                                 // 3420\n * @enum {string}                                                                                    // 3421\n * @private                                                                                          // 3422\n */                                                                                                  // 3423\nMaterialDataTable.prototype.CssClasses_ = {                                                          // 3424\n  DATA_TABLE: 'mdl-data-table',                                                                      // 3425\n  SELECTABLE: 'mdl-data-table--selectable',                                                          // 3426\n  IS_SELECTED: 'is-selected',                                                                        // 3427\n  IS_UPGRADED: 'is-upgraded'                                                                         // 3428\n};                                                                                                   // 3429\n                                                                                                     // 3430\nMaterialDataTable.prototype.selectRow_ = function(checkbox, row, rows) {                             // 3431\n  'use strict';                                                                                      // 3432\n                                                                                                     // 3433\n  if (row) {                                                                                         // 3434\n    return function() {                                                                              // 3435\n      if (checkbox.checked) {                                                                        // 3436\n        row.classList.add(this.CssClasses_.IS_SELECTED);                                             // 3437\n      } else {                                                                                       // 3438\n        row.classList.remove(this.CssClasses_.IS_SELECTED);                                          // 3439\n      }                                                                                              // 3440\n    }.bind(this);                                                                                    // 3441\n  }                                                                                                  // 3442\n                                                                                                     // 3443\n  if (rows) {                                                                                        // 3444\n    return function() {                                                                              // 3445\n      var i;                                                                                         // 3446\n      var el;                                                                                        // 3447\n      if (checkbox.checked) {                                                                        // 3448\n        for (i = 0; i < rows.length; i++) {                                                          // 3449\n          el = rows[i].querySelector('td').querySelector('.mdl-checkbox');                           // 3450\n          el.MaterialCheckbox.check();                                                               // 3451\n          rows[i].classList.add(this.CssClasses_.IS_SELECTED);                                       // 3452\n        }                                                                                            // 3453\n      } else {                                                                                       // 3454\n        for (i = 0; i < rows.length; i++) {                                                          // 3455\n          el = rows[i].querySelector('td').querySelector('.mdl-checkbox');                           // 3456\n          el.MaterialCheckbox.uncheck();                                                             // 3457\n          rows[i].classList.remove(this.CssClasses_.IS_SELECTED);                                    // 3458\n        }                                                                                            // 3459\n      }                                                                                              // 3460\n    }.bind(this);                                                                                    // 3461\n  }                                                                                                  // 3462\n};                                                                                                   // 3463\n                                                                                                     // 3464\nMaterialDataTable.prototype.createCheckbox_ = function(row, rows) {                                  // 3465\n  'use strict';                                                                                      // 3466\n                                                                                                     // 3467\n  var label = document.createElement('label');                                                       // 3468\n  label.classList.add('mdl-checkbox');                                                               // 3469\n  label.classList.add('mdl-js-checkbox');                                                            // 3470\n  label.classList.add('mdl-js-ripple-effect');                                                       // 3471\n  label.classList.add('mdl-data-table__select');                                                     // 3472\n  var checkbox = document.createElement('input');                                                    // 3473\n  checkbox.type = 'checkbox';                                                                        // 3474\n  checkbox.classList.add('mdl-checkbox__input');                                                     // 3475\n  if (row) {                                                                                         // 3476\n    checkbox.addEventListener('change', this.selectRow_(checkbox, row));                             // 3477\n  } else if (rows) {                                                                                 // 3478\n    checkbox.addEventListener('change', this.selectRow_(checkbox, null, rows));                      // 3479\n  }                                                                                                  // 3480\n  label.appendChild(checkbox);                                                                       // 3481\n  componentHandler.upgradeElement(label, 'MaterialCheckbox');                                        // 3482\n  return label;                                                                                      // 3483\n};                                                                                                   // 3484\n                                                                                                     // 3485\n/**                                                                                                  // 3486\n * Initialize element.                                                                               // 3487\n */                                                                                                  // 3488\nMaterialDataTable.prototype.init = function() {                                                      // 3489\n  'use strict';                                                                                      // 3490\n                                                                                                     // 3491\n  if (this.element_) {                                                                               // 3492\n                                                                                                     // 3493\n    var firstHeader = this.element_.querySelector('th');                                             // 3494\n    var rows = this.element_.querySelector('tbody').querySelectorAll('tr');                          // 3495\n                                                                                                     // 3496\n    if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {                             // 3497\n      var th = document.createElement('th');                                                         // 3498\n      var headerCheckbox = this.createCheckbox_(null, rows);                                         // 3499\n      th.appendChild(headerCheckbox);                                                                // 3500\n      firstHeader.parentElement.insertBefore(th, firstHeader);                                       // 3501\n                                                                                                     // 3502\n      for (var i = 0; i < rows.length; i++) {                                                        // 3503\n        var firstCell = rows[i].querySelector('td');                                                 // 3504\n        if (firstCell) {                                                                             // 3505\n          var td = document.createElement('td');                                                     // 3506\n          var rowCheckbox = this.createCheckbox_(rows[i]);                                           // 3507\n          td.appendChild(rowCheckbox);                                                               // 3508\n          rows[i].insertBefore(td, firstCell);                                                       // 3509\n        }                                                                                            // 3510\n      }                                                                                              // 3511\n    }                                                                                                // 3512\n                                                                                                     // 3513\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 3514\n  }                                                                                                  // 3515\n};                                                                                                   // 3516\n                                                                                                     // 3517\n// The component registers itself. It can assume componentHandler is available                       // 3518\n// in the global scope.                                                                              // 3519\ncomponentHandler.register({                                                                          // 3520\n  constructor: MaterialDataTable,                                                                    // 3521\n  classAsString: 'MaterialDataTable',                                                                // 3522\n  cssClass: 'mdl-js-data-table'                                                                      // 3523\n});                                                                                                  // 3524\n                                                                                                     // 3525\n/**                                                                                                  // 3526\n * @license                                                                                          // 3527\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 3528\n *                                                                                                   // 3529\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 3530\n * you may not use this file except in compliance with the License.                                  // 3531\n * You may obtain a copy of the License at                                                           // 3532\n *                                                                                                   // 3533\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 3534\n *                                                                                                   // 3535\n * Unless required by applicable law or agreed to in writing, software                               // 3536\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 3537\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 3538\n * See the License for the specific language governing permissions and                               // 3539\n * limitations under the License.                                                                    // 3540\n */                                                                                                  // 3541\n                                                                                                     // 3542\n/**                                                                                                  // 3543\n * Class constructor for Ripple MDL component.                                                       // 3544\n * Implements MDL component design pattern defined at:                                               // 3545\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 3546\n * @param {HTMLElement} element The element that will be upgraded.                                   // 3547\n */                                                                                                  // 3548\nfunction MaterialRipple(element) {                                                                   // 3549\n  'use strict';                                                                                      // 3550\n                                                                                                     // 3551\n  this.element_ = element;                                                                           // 3552\n                                                                                                     // 3553\n  // Initialize instance.                                                                            // 3554\n  this.init();                                                                                       // 3555\n}                                                                                                    // 3556\n                                                                                                     // 3557\n/**                                                                                                  // 3558\n * Store constants in one place so they can be updated easily.                                       // 3559\n * @enum {string | number}                                                                           // 3560\n * @private                                                                                          // 3561\n */                                                                                                  // 3562\nMaterialRipple.prototype.Constant_ = {                                                               // 3563\n  INITIAL_SCALE: 'scale(0.0001, 0.0001)',                                                            // 3564\n  INITIAL_SIZE: '1px',                                                                               // 3565\n  INITIAL_OPACITY: '0.4',                                                                            // 3566\n  FINAL_OPACITY: '0',                                                                                // 3567\n  FINAL_SCALE: ''                                                                                    // 3568\n};                                                                                                   // 3569\n                                                                                                     // 3570\n/**                                                                                                  // 3571\n * Store strings for class names defined by this component that are used in                          // 3572\n * JavaScript. This allows us to simply change it in one place should we                             // 3573\n * decide to modify at a later date.                                                                 // 3574\n * @enum {string}                                                                                    // 3575\n * @private                                                                                          // 3576\n */                                                                                                  // 3577\nMaterialRipple.prototype.CssClasses_ = {                                                             // 3578\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 3579\n  RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                // 3580\n  RIPPLE: 'mdl-ripple',                                                                              // 3581\n  IS_ANIMATING: 'is-animating',                                                                      // 3582\n  IS_VISIBLE: 'is-visible'                                                                           // 3583\n};                                                                                                   // 3584\n                                                                                                     // 3585\n/**                                                                                                  // 3586\n * Handle mouse / finger down on element.                                                            // 3587\n * @param {Event} event The event that fired.                                                        // 3588\n * @private                                                                                          // 3589\n */                                                                                                  // 3590\nMaterialRipple.prototype.downHandler_ = function(event) {                                            // 3591\n  'use strict';                                                                                      // 3592\n                                                                                                     // 3593\n  if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {                       // 3594\n    var rect = this.element_.getBoundingClientRect();                                                // 3595\n    this.boundHeight = rect.height;                                                                  // 3596\n    this.boundWidth = rect.width;                                                                    // 3597\n    this.rippleSize_ = Math.sqrt(rect.width * rect.width +                                           // 3598\n        rect.height * rect.height) * 2 + 2;                                                          // 3599\n    this.rippleElement_.style.width = this.rippleSize_ + 'px';                                       // 3600\n    this.rippleElement_.style.height = this.rippleSize_ + 'px';                                      // 3601\n  }                                                                                                  // 3602\n                                                                                                     // 3603\n  this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);                                    // 3604\n                                                                                                     // 3605\n  if (event.type === 'mousedown' && this.ignoringMouseDown_) {                                       // 3606\n    this.ignoringMouseDown_ = false;                                                                 // 3607\n  } else {                                                                                           // 3608\n    if (event.type === 'touchstart') {                                                               // 3609\n      this.ignoringMouseDown_ = true;                                                                // 3610\n    }                                                                                                // 3611\n    var frameCount = this.getFrameCount();                                                           // 3612\n    if (frameCount > 0) {                                                                            // 3613\n      return;                                                                                        // 3614\n    }                                                                                                // 3615\n    this.setFrameCount(1);                                                                           // 3616\n    var bound = event.currentTarget.getBoundingClientRect();                                         // 3617\n    var x;                                                                                           // 3618\n    var y;                                                                                           // 3619\n    // Check if we are handling a keyboard click.                                                    // 3620\n    if (event.clientX === 0 && event.clientY === 0) {                                                // 3621\n      x = Math.round(bound.width / 2);                                                               // 3622\n      y = Math.round(bound.height / 2);                                                              // 3623\n    } else {                                                                                         // 3624\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;                        // 3625\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;                        // 3626\n      x = Math.round(clientX - bound.left);                                                          // 3627\n      y = Math.round(clientY - bound.top);                                                           // 3628\n    }                                                                                                // 3629\n    this.setRippleXY(x, y);                                                                          // 3630\n    this.setRippleStyles(true);                                                                      // 3631\n    window.requestAnimationFrame(this.animFrameHandler.bind(this));                                  // 3632\n  }                                                                                                  // 3633\n};                                                                                                   // 3634\n                                                                                                     // 3635\n/**                                                                                                  // 3636\n * Handle mouse / finger up on element.                                                              // 3637\n * @param {Event} event The event that fired.                                                        // 3638\n * @private                                                                                          // 3639\n */                                                                                                  // 3640\nMaterialRipple.prototype.upHandler_ = function(event) {                                              // 3641\n  'use strict';                                                                                      // 3642\n                                                                                                     // 3643\n  // Don't fire for the artificial \"mouseup\" generated by a double-click.                            // 3644\n  if (event && event.detail !== 2) {                                                                 // 3645\n    this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);                               // 3646\n  }                                                                                                  // 3647\n};                                                                                                   // 3648\n                                                                                                     // 3649\n/**                                                                                                  // 3650\n * Initialize element.                                                                               // 3651\n */                                                                                                  // 3652\nMaterialRipple.prototype.init = function() {                                                         // 3653\n  'use strict';                                                                                      // 3654\n                                                                                                     // 3655\n  if (this.element_) {                                                                               // 3656\n    var recentering =                                                                                // 3657\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);                            // 3658\n    if (!this.element_.classList.contains(                                                           // 3659\n        this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {                                             // 3660\n      this.rippleElement_ = this.element_.querySelector('.' +                                        // 3661\n          this.CssClasses_.RIPPLE);                                                                  // 3662\n      this.frameCount_ = 0;                                                                          // 3663\n      this.rippleSize_ = 0;                                                                          // 3664\n      this.x_ = 0;                                                                                   // 3665\n      this.y_ = 0;                                                                                   // 3666\n                                                                                                     // 3667\n      // Touch start produces a compat mouse down event, which would cause a                         // 3668\n      // second ripples. To avoid that, we use this property to ignore the first                     // 3669\n      // mouse down after a touch start.                                                             // 3670\n      this.ignoringMouseDown_ = false;                                                               // 3671\n                                                                                                     // 3672\n      this.boundDownHandler = this.downHandler_.bind(this);                                          // 3673\n      this.element_.addEventListener('mousedown',                                                    // 3674\n        this.boundDownHandler);                                                                      // 3675\n      this.element_.addEventListener('touchstart',                                                   // 3676\n          this.boundDownHandler);                                                                    // 3677\n                                                                                                     // 3678\n      this.boundUpHandler = this.upHandler_.bind(this);                                              // 3679\n      this.element_.addEventListener('mouseup', this.boundUpHandler);                                // 3680\n      this.element_.addEventListener('mouseleave', this.boundUpHandler);                             // 3681\n      this.element_.addEventListener('touchend', this.boundUpHandler);                               // 3682\n      this.element_.addEventListener('blur', this.boundUpHandler);                                   // 3683\n                                                                                                     // 3684\n      this.getFrameCount = function() {                                                              // 3685\n        return this.frameCount_;                                                                     // 3686\n      };                                                                                             // 3687\n                                                                                                     // 3688\n      this.setFrameCount = function(fC) {                                                            // 3689\n        this.frameCount_ = fC;                                                                       // 3690\n      };                                                                                             // 3691\n                                                                                                     // 3692\n      this.getRippleElement = function() {                                                           // 3693\n        return this.rippleElement_;                                                                  // 3694\n      };                                                                                             // 3695\n                                                                                                     // 3696\n      this.setRippleXY = function(newX, newY) {                                                      // 3697\n        this.x_ = newX;                                                                              // 3698\n        this.y_ = newY;                                                                              // 3699\n      };                                                                                             // 3700\n                                                                                                     // 3701\n      this.setRippleStyles = function(start) {                                                       // 3702\n        if (this.rippleElement_ !== null) {                                                          // 3703\n          var transformString;                                                                       // 3704\n          var scale;                                                                                 // 3705\n          var size;                                                                                  // 3706\n          var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';                            // 3707\n                                                                                                     // 3708\n          if (start) {                                                                               // 3709\n            scale = this.Constant_.INITIAL_SCALE;                                                    // 3710\n            size = this.Constant_.INITIAL_SIZE;                                                      // 3711\n          } else {                                                                                   // 3712\n            scale = this.Constant_.FINAL_SCALE;                                                      // 3713\n            size = this.rippleSize_ + 'px';                                                          // 3714\n            if (recentering) {                                                                       // 3715\n              offset = 'translate(' + this.boundWidth / 2 + 'px, ' +                                 // 3716\n                this.boundHeight / 2 + 'px)';                                                        // 3717\n            }                                                                                        // 3718\n          }                                                                                          // 3719\n                                                                                                     // 3720\n          transformString = 'translate(-50%, -50%) ' + offset + scale;                               // 3721\n                                                                                                     // 3722\n          this.rippleElement_.style.webkitTransform = transformString;                               // 3723\n          this.rippleElement_.style.msTransform = transformString;                                   // 3724\n          this.rippleElement_.style.transform = transformString;                                     // 3725\n                                                                                                     // 3726\n          if (start) {                                                                               // 3727\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);                     // 3728\n          } else {                                                                                   // 3729\n            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);                        // 3730\n          }                                                                                          // 3731\n        }                                                                                            // 3732\n      };                                                                                             // 3733\n                                                                                                     // 3734\n      this.animFrameHandler = function() {                                                           // 3735\n        if (this.frameCount_-- > 0) {                                                                // 3736\n          window.requestAnimationFrame(this.animFrameHandler.bind(this));                            // 3737\n        } else {                                                                                     // 3738\n          this.setRippleStyles(false);                                                               // 3739\n        }                                                                                            // 3740\n      };                                                                                             // 3741\n    }                                                                                                // 3742\n  }                                                                                                  // 3743\n};                                                                                                   // 3744\n                                                                                                     // 3745\n/*                                                                                                   // 3746\n* Downgrade the component                                                                            // 3747\n*/                                                                                                   // 3748\nMaterialRipple.prototype.mdlDowngrade_ = function() {                                                // 3749\n  'use strict';                                                                                      // 3750\n  this.element_.removeEventListener('mousedown',                                                     // 3751\n  this.boundDownHandler);                                                                            // 3752\n  this.element_.removeEventListener('touchstart',                                                    // 3753\n      this.boundDownHandler);                                                                        // 3754\n                                                                                                     // 3755\n  this.element_.removeEventListener('mouseup', this.boundUpHandler);                                 // 3756\n  this.element_.removeEventListener('mouseleave', this.boundUpHandler);                              // 3757\n  this.element_.removeEventListener('touchend', this.boundUpHandler);                                // 3758\n  this.element_.removeEventListener('blur', this.boundUpHandler);                                    // 3759\n};                                                                                                   // 3760\n                                                                                                     // 3761\n// The component registers itself. It can assume componentHandler is available                       // 3762\n// in the global scope.                                                                              // 3763\ncomponentHandler.register({                                                                          // 3764\n  constructor: MaterialRipple,                                                                       // 3765\n  classAsString: 'MaterialRipple',                                                                   // 3766\n  cssClass: 'mdl-js-ripple-effect',                                                                  // 3767\n  widget: false                                                                                      // 3768\n});                                                                                                  // 3769\n                                                                                                     // 3770\n///////////////////////////////////////////////////////////////////////////////////////////////////////      // 3779\n                                                                                                             // 3780\n}).call(this);                                                                                               // 3781\n                                                                                                             // 3782\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['spectrum:material-design-lite'] = {};\n\n})();\n","servePath":"/packages/spectrum_material-design-lite.js","sourceMap":{"version":3,"sources":["/packages/spectrum_material-design-lite/packages/spectrum_material-design-lite.js"],"names":[],"mappingsoH","file":"/packages/spectrum_material-design-lite.js","sourcesContent":["(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// packages/spectrum:material-design-lite/material.js                                                //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\n/**                                                                                                  // 1\n * @license                                                                                          // 2\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 3\n *                                                                                                   // 4\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 5\n * you may not use this file except in compliance with the License.                                  // 6\n * You may obtain a copy of the License at                                                           // 7\n *                                                                                                   // 8\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 9\n *                                                                                                   // 10\n * Unless required by applicable law or agreed to in writing, software                               // 11\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 12\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 13\n * See the License for the specific language governing permissions and                               // 14\n * limitations under the License.                                                                    // 15\n */                                                                                                  // 16\n                                                                                                     // 17\n/**                                                                                                  // 18\n * A component handler interface using the revealing module design pattern.                          // 19\n * More details on this pattern design here:                                                         // 20\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 21\n * @author Jason Mayes.                                                                              // 22\n */                                                                                                  // 23\n/* exported componentHandler */                                                                      // 24\nvar componentHandler = (function() {                                                                 // 25\n  'use strict';                                                                                      // 26\n                                                                                                     // 27\n  var registeredComponents_ = [];                                                                    // 28\n  var createdComponents_ = [];                                                                       // 29\n  var downgradeMethod_ = 'mdlDowngrade_';                                                            // 30\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';                                      // 31\n                                                                                                     // 32\n  /**                                                                                                // 33\n   * Searches registered components for a class we are interested in using.                          // 34\n   * Optionally replaces a match with passed object if specified.                                    // 35\n   * @param {string} name The name of a class we want to use.                                        // 36\n   * @param {object} optReplace Optional object to replace match with.                               // 37\n   * @return {object | false}                                                                        // 38\n   * @private                                                                                        // 39\n   */                                                                                                // 40\n  function findRegisteredClass_(name, optReplace) {                                                  // 41\n    for (var i = 0; i < registeredComponents_.length; i++) {                                         // 42\n      if (registeredComponents_[i].className === name) {                                             // 43\n        if (optReplace !== undefined) {                                                              // 44\n          registeredComponents_[i] = optReplace;                                                     // 45\n        }                                                                                            // 46\n        return registeredComponents_[i];                                                             // 47\n      }                                                                                              // 48\n    }                                                                                                // 49\n    return false;                                                                                    // 50\n  }                                                                                                  // 51\n                                                                                                     // 52\n  /**                                                                                                // 53\n   * Searches existing DOM for elements of our component type and upgrades them                      // 54\n   * if they have not already been upgraded.                                                         // 55\n   * @param {string} jsClass the programatic name of the element class we need                       // 56\n   * to create a new instance of.                                                                    // 57\n   * @param {string} cssClass the name of the CSS class elements of this type                        // 58\n   * will have.                                                                                      // 59\n   */                                                                                                // 60\n  function upgradeDomInternal(jsClass, cssClass) {                                                   // 61\n    if (jsClass === undefined && cssClass === undefined) {                                           // 62\n      for (var i = 0; i < registeredComponents_.length; i++) {                                       // 63\n        upgradeDomInternal(registeredComponents_[i].className,                                       // 64\n            registeredComponents_[i].cssClass);                                                      // 65\n      }                                                                                              // 66\n    } else {                                                                                         // 67\n      if (cssClass === undefined) {                                                                  // 68\n        var registeredClass = findRegisteredClass_(jsClass);                                         // 69\n        if (registeredClass) {                                                                       // 70\n          cssClass = registeredClass.cssClass;                                                       // 71\n        }                                                                                            // 72\n      }                                                                                              // 73\n                                                                                                     // 74\n      var elements = document.querySelectorAll('.' + cssClass);                                      // 75\n      for (var n = 0; n < elements.length; n++) {                                                    // 76\n        upgradeElementInternal(elements[n], jsClass);                                                // 77\n      }                                                                                              // 78\n    }                                                                                                // 79\n  }                                                                                                  // 80\n                                                                                                     // 81\n  /**                                                                                                // 82\n   * Upgrades a specific element rather than all in the DOM.                                         // 83\n   * @param {HTMLElement} element The element we wish to upgrade.                                    // 84\n   * @param {string} jsClass The name of the class we want to upgrade                                // 85\n   * the element to.                                                                                 // 86\n   */                                                                                                // 87\n  function upgradeElementInternal(element, jsClass) {                                                // 88\n    // Only upgrade elements that have not already been upgraded.                                    // 89\n    var dataUpgraded = element.getAttribute('data-upgraded');                                        // 90\n                                                                                                     // 91\n    if (dataUpgraded === null || dataUpgraded.indexOf(jsClass) === -1) {                             // 92\n      // Upgrade element.                                                                            // 93\n      if (dataUpgraded === null) {                                                                   // 94\n        dataUpgraded = '';                                                                           // 95\n      }                                                                                              // 96\n      element.setAttribute('data-upgraded', dataUpgraded + ',' + jsClass);                           // 97\n      var registeredClass = findRegisteredClass_(jsClass);                                           // 98\n      if (registeredClass) {                                                                         // 99\n        // new                                                                                       // 100\n        var instance = new registeredClass.classConstructor(element);                                // 101\n        instance[componentConfigProperty_] = registeredClass;                                        // 102\n        createdComponents_.push(instance);                                                           // 103\n        // Call any callbacks the user has registered with this component type.                      // 104\n        registeredClass.callbacks.forEach(function(callback) {                                       // 105\n          callback(element);                                                                         // 106\n        });                                                                                          // 107\n                                                                                                     // 108\n        if (registeredClass.widget) {                                                                // 109\n          // Assign per element instance for control over API                                        // 110\n          element[jsClass] = instance;                                                               // 111\n        }                                                                                            // 112\n      } else {                                                                                       // 113\n        throw 'Unable to find a registered component for the given class.';                          // 114\n      }                                                                                              // 115\n                                                                                                     // 116\n      var ev = document.createEvent('Events');                                                       // 117\n      ev.initEvent('mdl-componentupgraded', true, true);                                             // 118\n      element.dispatchEvent(ev);                                                                     // 119\n    }                                                                                                // 120\n  }                                                                                                  // 121\n                                                                                                     // 122\n  /**                                                                                                // 123\n   * Registers a class for future use and attempts to upgrade existing DOM.                          // 124\n   * @param {object} config An object containing:                                                    // 125\n   * {constructor: Constructor, classAsString: string, cssClass: string}                             // 126\n   */                                                                                                // 127\n  function registerInternal(config) {                                                                // 128\n    var newConfig = {                                                                                // 129\n      'classConstructor': config.constructor,                                                        // 130\n      'className': config.classAsString,                                                             // 131\n      'cssClass': config.cssClass,                                                                   // 132\n      'widget': config.widget === undefined ? true : config.widget,                                  // 133\n      'callbacks': []                                                                                // 134\n    };                                                                                               // 135\n                                                                                                     // 136\n    registeredComponents_.forEach(function(item) {                                                   // 137\n      if (item.cssClass === newConfig.cssClass) {                                                    // 138\n        throw 'The provided cssClass has already been registered.';                                  // 139\n      }                                                                                              // 140\n      if (item.className === newConfig.className) {                                                  // 141\n        throw 'The provided className has already been registered';                                  // 142\n      }                                                                                              // 143\n    });                                                                                              // 144\n                                                                                                     // 145\n    if (config.constructor.prototype                                                                 // 146\n        .hasOwnProperty(componentConfigProperty_)) {                                                 // 147\n      throw 'MDL component classes must not have ' + componentConfigProperty_ +                      // 148\n          ' defined as a property.';                                                                 // 149\n    }                                                                                                // 150\n                                                                                                     // 151\n    var found = findRegisteredClass_(config.classAsString, newConfig);                               // 152\n                                                                                                     // 153\n    if (!found) {                                                                                    // 154\n      registeredComponents_.push(newConfig);                                                         // 155\n    }                                                                                                // 156\n  }                                                                                                  // 157\n                                                                                                     // 158\n  /**                                                                                                // 159\n   * Allows user to be alerted to any upgrades that are performed for a given                        // 160\n   * component type                                                                                  // 161\n   * @param {string} jsClass The class name of the MDL component we wish                             // 162\n   * to hook into for any upgrades performed.                                                        // 163\n   * @param {function} callback The function to call upon an upgrade. This                           // 164\n   * function should expect 1 parameter - the HTMLElement which got upgraded.                        // 165\n   */                                                                                                // 166\n  function registerUpgradedCallbackInternal(jsClass, callback) {                                     // 167\n    var regClass = findRegisteredClass_(jsClass);                                                    // 168\n    if (regClass) {                                                                                  // 169\n      regClass.callbacks.push(callback);                                                             // 170\n    }                                                                                                // 171\n  }                                                                                                  // 172\n                                                                                                     // 173\n  /**                                                                                                // 174\n   * Upgrades all registered components found in the current DOM. This is                            // 175\n   * automatically called on window load.                                                            // 176\n   */                                                                                                // 177\n  function upgradeAllRegisteredInternal() {                                                          // 178\n    for (var n = 0; n < registeredComponents_.length; n++) {                                         // 179\n      upgradeDomInternal(registeredComponents_[n].className);                                        // 180\n    }                                                                                                // 181\n  }                                                                                                  // 182\n                                                                                                     // 183\n  /**                                                                                                // 184\n   * Finds a created component by a given DOM node.                                                  // 185\n   *                                                                                                 // 186\n   * @param {!Element} node                                                                          // 187\n   * @return {*}                                                                                     // 188\n   */                                                                                                // 189\n  function findCreatedComponentByNodeInternal(node) {                                                // 190\n    for (var n = 0; n < createdComponents_.length; n++) {                                            // 191\n      var component = createdComponents_[n];                                                         // 192\n      if (component.element_ === node) {                                                             // 193\n        return component;                                                                            // 194\n      }                                                                                              // 195\n    }                                                                                                // 196\n  }                                                                                                  // 197\n                                                                                                     // 198\n  /**                                                                                                // 199\n   * Check the component for the downgrade method.                                                   // 200\n   * Execute if found.                                                                               // 201\n   * Remove component from createdComponents list.                                                   // 202\n   *                                                                                                 // 203\n   * @param {*} component                                                                            // 204\n   */                                                                                                // 205\n  function deconstructComponentInternal(component) {                                                 // 206\n    if (component &&                                                                                 // 207\n        component[componentConfigProperty_]                                                          // 208\n          .classConstructor.prototype                                                                // 209\n          .hasOwnProperty(downgradeMethod_)) {                                                       // 210\n      component[downgradeMethod_]();                                                                 // 211\n      var componentIndex = createdComponents_.indexOf(component);                                    // 212\n      createdComponents_.splice(componentIndex, 1);                                                  // 213\n                                                                                                     // 214\n      var upgrades = component.element_.dataset.upgraded.split(',');                                 // 215\n      var componentPlace = upgrades.indexOf(                                                         // 216\n          component[componentConfigProperty_].classAsString);                                        // 217\n      upgrades.splice(componentPlace, 1);                                                            // 218\n      component.element_.dataset.upgraded = upgrades.join(',');                                      // 219\n                                                                                                     // 220\n      var ev = document.createEvent('Events');                                                       // 221\n      ev.initEvent('mdl-componentdowngraded', true, true);                                           // 222\n      component.element_.dispatchEvent(ev);                                                          // 223\n    }                                                                                                // 224\n  }                                                                                                  // 225\n                                                                                                     // 226\n  /**                                                                                                // 227\n   * Downgrade either a given node, an array of nodes, or a NodeList.                                // 228\n   *                                                                                                 // 229\n   * @param {*} nodes                                                                                // 230\n   */                                                                                                // 231\n  function downgradeNodesInternal(nodes) {                                                           // 232\n    var downgradeNode = function(node) {                                                             // 233\n      deconstructComponentInternal(findCreatedComponentByNodeInternal(node));                        // 234\n    };                                                                                               // 235\n    if (nodes instanceof Array || nodes instanceof NodeList) {                                       // 236\n      for (var n = 0; n < nodes.length; n++) {                                                       // 237\n        downgradeNode(nodes[n]);                                                                     // 238\n      }                                                                                              // 239\n    } else if (nodes instanceof Node) {                                                              // 240\n      downgradeNode(nodes);                                                                          // 241\n    } else {                                                                                         // 242\n      throw 'Invalid argument provided to downgrade MDL nodes.';                                     // 243\n    }                                                                                                // 244\n  }                                                                                                  // 245\n                                                                                                     // 246\n  // Now return the functions that should be made public with their publicly                         // 247\n  // facing names...                                                                                 // 248\n  return {                                                                                           // 249\n    upgradeDom: upgradeDomInternal,                                                                  // 250\n    upgradeElement: upgradeElementInternal,                                                          // 251\n    upgradeAllRegistered: upgradeAllRegisteredInternal,                                              // 252\n    registerUpgradedCallback: registerUpgradedCallbackInternal,                                      // 253\n    register: registerInternal,                                                                      // 254\n    downgradeElements: downgradeNodesInternal                                                        // 255\n  };                                                                                                 // 256\n})();                                                                                                // 257\n                                                                                                     // 258\nwindow.addEventListener('load', function() {                                                         // 259\n  'use strict';                                                                                      // 260\n                                                                                                     // 261\n  /**                                                                                                // 262\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features                     // 263\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL                     // 264\n   * components requiring JavaScript.                                                                // 265\n   */                                                                                                // 266\n  if ('classList' in document.createElement('div') &&                                                // 267\n      'querySelector' in document &&                                                                 // 268\n      'addEventListener' in window && Array.prototype.forEach) {                                     // 269\n    document.documentElement.classList.add('mdl-js');                                                // 270\n    componentHandler.upgradeAllRegistered();                                                         // 271\n  } else {                                                                                           // 272\n    componentHandler.upgradeElement =                                                                // 273\n        componentHandler.register = function() {};                                                   // 274\n  }                                                                                                  // 275\n});                                                                                                  // 276\n                                                                                                     // 277\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js      // 278\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from                         // 279\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/                              // 280\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating          // 281\n                                                                                                     // 282\n// requestAnimationFrame polyfill by Erik Möller.                                                    // 283\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon                       // 284\n                                                                                                     // 285\n// MIT license                                                                                       // 286\n                                                                                                     // 287\n(function() {                                                                                        // 288\n'use strict';                                                                                        // 289\n                                                                                                     // 290\nif (!Date.now) {                                                                                     // 291\n  Date.now = function() { return new Date().getTime(); };                                            // 292\n}                                                                                                    // 293\n                                                                                                     // 294\nvar vendors = ['webkit', 'moz'];                                                                     // 295\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {                          // 296\n  var vp = vendors[i];                                                                               // 297\n  window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];                               // 298\n  window.cancelAnimationFrame = (window[vp + 'CancelAnimationFrame'] ||                              // 299\n  window[vp + 'CancelRequestAnimationFrame']);                                                       // 300\n}                                                                                                    // 301\n                                                                                                     // 302\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  var lastTime = 0;                                                                                  // 304\n  window.requestAnimationFrame = function(callback) {                                                // 305\n      var now = Date.now();                                                                          // 306\n      var nextTime = Math.max(lastTime + 16, now);                                                   // 307\n      return setTimeout(function() { callback(lastTime = nextTime); },                               // 308\n                        nextTime - now);                                                             // 309\n    };                                                                                               // 310\n  window.cancelAnimationFrame = clearTimeout;                                                        // 311\n}                                                                                                    // 312\n                                                                                                     // 313\n})();                                                                                                // 314\n                                                                                                     // 315\n                                                                                                     // 316\n/**                                                                                                  // 317\n * @license                                                                                          // 318\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 319\n *                                                                                                   // 320\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 321\n * you may not use this file except in compliance with the License.                                  // 322\n * You may obtain a copy of the License at                                                           // 323\n *                                                                                                   // 324\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 325\n *                                                                                                   // 326\n * Unless required by applicable law or agreed to in writing, software                               // 327\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 328\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 329\n * See the License for the specific language governing permissions and                               // 330\n * limitations under the License.                                                                    // 331\n */                                                                                                  // 332\n                                                                                                     // 333\n/**                                                                                                  // 334\n * Class constructor for Button MDL component.                                                       // 335\n * Implements MDL component design pattern defined at:                                               // 336\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 337\n * @param {HTMLElement} element The element that will be upgraded.                                   // 338\n */                                                                                                  // 339\nfunction MaterialButton(element) {                                                                   // 340\n  'use strict';                                                                                      // 341\n                                                                                                     // 342\n  this.element_ = element;                                                                           // 343\n                                                                                                     // 344\n  // Initialize instance.                                                                            // 345\n  this.init();                                                                                       // 346\n}                                                                                                    // 347\n                                                                                                     // 348\n/**                                                                                                  // 349\n * Store constants in one place so they can be updated easily.                                       // 350\n * @enum {string | number}                                                                           // 351\n * @private                                                                                          // 352\n */                                                                                                  // 353\nMaterialButton.prototype.Constant_ = {                                                               // 354\n  // None for now.                                                                                   // 355\n};                                                                                                   // 356\n                                                                                                     // 357\n/**                                                                                                  // 358\n * Store strings for class names defined by this component that are used in                          // 359\n * JavaScript. This allows us to simply change it in one place should we                             // 360\n * decide to modify at a later date.                                                                 // 361\n * @enum {string}                                                                                    // 362\n * @private                                                                                          // 363\n */                                                                                                  // 364\nMaterialButton.prototype.CssClasses_ = {                                                             // 365\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 366\n  RIPPLE_CONTAINER: 'mdl-button__ripple-container',                                                  // 367\n  RIPPLE: 'mdl-ripple'                                                                               // 368\n};                                                                                                   // 369\n                                                                                                     // 370\n/**                                                                                                  // 371\n * Handle blur of element.                                                                           // 372\n * @param {HTMLElement} element The instance of a button we want to blur.                            // 373\n * @private                                                                                          // 374\n */                                                                                                  // 375\nMaterialButton.prototype.blurHandler = function(event) {                                             // 376\n  'use strict';                                                                                      // 377\n                                                                                                     // 378\n  if (event) {                                                                                       // 379\n    this.element_.blur();                                                                            // 380\n  }                                                                                                  // 381\n};                                                                                                   // 382\n                                                                                                     // 383\n// Public methods.                                                                                   // 384\n                                                                                                     // 385\n/**                                                                                                  // 386\n * Disable button.                                                                                   // 387\n * @public                                                                                           // 388\n */                                                                                                  // 389\nMaterialButton.prototype.disable = function() {                                                      // 390\n  'use strict';                                                                                      // 391\n                                                                                                     // 392\n  this.element_.disabled = true;                                                                     // 393\n};                                                                                                   // 394\n                                                                                                     // 395\n/**                                                                                                  // 396\n * Enable button.                                                                                    // 397\n * @public                                                                                           // 398\n */                                                                                                  // 399\nMaterialButton.prototype.enable = function() {                                                       // 400\n  'use strict';                                                                                      // 401\n                                                                                                     // 402\n  this.element_.disabled = false;                                                                    // 403\n};                                                                                                   // 404\n                                                                                                     // 405\n/**                                                                                                  // 406\n * Initialize element.                                                                               // 407\n */                                                                                                  // 408\nMaterialButton.prototype.init = function() {                                                         // 409\n  'use strict';                                                                                      // 410\n                                                                                                     // 411\n  if (this.element_) {                                                                               // 412\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {                          // 413\n      var rippleContainer = document.createElement('span');                                          // 414\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);                              // 415\n      this.rippleElement_ = document.createElement('span');                                          // 416\n      this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);                                    // 417\n      rippleContainer.appendChild(this.rippleElement_);                                              // 418\n      this.boundRippleBlurHandler = this.blurHandler.bind(this);                                     // 419\n      this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);                  // 420\n      this.element_.appendChild(rippleContainer);                                                    // 421\n    }                                                                                                // 422\n    this.boundButtonBlurHandler = this.blurHandler.bind(this);                                       // 423\n    this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);                          // 424\n    this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);                       // 425\n  }                                                                                                  // 426\n};                                                                                                   // 427\n                                                                                                     // 428\n/**                                                                                                  // 429\n * Downgrade the element.                                                                            // 430\n */                                                                                                  // 431\nMaterialButton.prototype.mdlDowngrade_ = function() {                                                // 432\n  'use strict';                                                                                      // 433\n  if (this.rippleElement_) {                                                                         // 434\n    this.rippleElement_.removeEventListener('mouseup', this.boundRippleBlurHandler);                 // 435\n  }                                                                                                  // 436\n  this.element_.removeEventListener('mouseup', this.boundButtonBlurHandler);                         // 437\n  this.element_.removeEventListener('mouseleave', this.boundButtonBlurHandler);                      // 438\n};                                                                                                   // 439\n                                                                                                     // 440\n// The component registers itself. It can assume componentHandler is available                       // 441\n// in the global scope.                                                                              // 442\ncomponentHandler.register({                                                                          // 443\n  constructor: MaterialButton,                                                                       // 444\n  classAsString: 'MaterialButton',                                                                   // 445\n  cssClass: 'mdl-js-button'                                                                          // 446\n});                                                                                                  // 447\n                                                                                                     // 448\n/**                                                                                                  // 449\n * @license                                                                                          // 450\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 451\n *                                                                                                   // 452\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 453\n * you may not use this file except in compliance with the License.                                  // 454\n * You may obtain a copy of the License at                                                           // 455\n *                                                                                                   // 456\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 457\n *                                                                                                   // 458\n * Unless required by applicable law or agreed to in writing, software                               // 459\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 460\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 461\n * See the License for the specific language governing permissions and                               // 462\n * limitations under the License.                                                                    // 463\n */                                                                                                  // 464\n                                                                                                     // 465\n/**                                                                                                  // 466\n * Class constructor for Checkbox MDL component.                                                     // 467\n * Implements MDL component design pattern defined at:                                               // 468\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 469\n * @param {HTMLElement} element The element that will be upgraded.                                   // 470\n */                                                                                                  // 471\nfunction MaterialCheckbox(element) {                                                                 // 472\n  'use strict';                                                                                      // 473\n                                                                                                     // 474\n  this.element_ = element;                                                                           // 475\n                                                                                                     // 476\n  // Initialize instance.                                                                            // 477\n  this.init();                                                                                       // 478\n}                                                                                                    // 479\n                                                                                                     // 480\n/**                                                                                                  // 481\n * Store constants in one place so they can be updated easily.                                       // 482\n * @enum {string | number}                                                                           // 483\n * @private                                                                                          // 484\n */                                                                                                  // 485\nMaterialCheckbox.prototype.Constant_ = {                                                             // 486\n  TINY_TIMEOUT: 0.001                                                                                // 487\n};                                                                                                   // 488\n                                                                                                     // 489\n/**                                                                                                  // 490\n * Store strings for class names defined by this component that are used in                          // 491\n * JavaScript. This allows us to simply change it in one place should we                             // 492\n * decide to modify at a later date.                                                                 // 493\n * @enum {string}                                                                                    // 494\n * @private                                                                                          // 495\n */                                                                                                  // 496\nMaterialCheckbox.prototype.CssClasses_ = {                                                           // 497\n  INPUT: 'mdl-checkbox__input',                                                                      // 498\n  BOX_OUTLINE: 'mdl-checkbox__box-outline',                                                          // 499\n  FOCUS_HELPER: 'mdl-checkbox__focus-helper',                                                        // 500\n  TICK_OUTLINE: 'mdl-checkbox__tick-outline',                                                        // 501\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 502\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 503\n  RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',                                                // 504\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 505\n  RIPPLE: 'mdl-ripple',                                                                              // 506\n  IS_FOCUSED: 'is-focused',                                                                          // 507\n  IS_DISABLED: 'is-disabled',                                                                        // 508\n  IS_CHECKED: 'is-checked',                                                                          // 509\n  IS_UPGRADED: 'is-upgraded'                                                                         // 510\n};                                                                                                   // 511\n                                                                                                     // 512\n/**                                                                                                  // 513\n * Handle change of state.                                                                           // 514\n * @param {Event} event The event that fired.                                                        // 515\n * @private                                                                                          // 516\n */                                                                                                  // 517\nMaterialCheckbox.prototype.onChange_ = function(event) {                                             // 518\n  'use strict';                                                                                      // 519\n                                                                                                     // 520\n  this.updateClasses_();                                                                             // 521\n};                                                                                                   // 522\n                                                                                                     // 523\n/**                                                                                                  // 524\n * Handle focus of element.                                                                          // 525\n * @param {Event} event The event that fired.                                                        // 526\n * @private                                                                                          // 527\n */                                                                                                  // 528\nMaterialCheckbox.prototype.onFocus_ = function(event) {                                              // 529\n  'use strict';                                                                                      // 530\n                                                                                                     // 531\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 532\n};                                                                                                   // 533\n                                                                                                     // 534\n/**                                                                                                  // 535\n * Handle lost focus of element.                                                                     // 536\n * @param {Event} event The event that fired.                                                        // 537\n * @private                                                                                          // 538\n */                                                                                                  // 539\nMaterialCheckbox.prototype.onBlur_ = function(event) {                                               // 540\n  'use strict';                                                                                      // 541\n                                                                                                     // 542\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 543\n};                                                                                                   // 544\n                                                                                                     // 545\n/**                                                                                                  // 546\n * Handle mouseup.                                                                                   // 547\n * @param {Event} event The event that fired.                                                        // 548\n * @private                                                                                          // 549\n */                                                                                                  // 550\nMaterialCheckbox.prototype.onMouseUp_ = function(event) {                                            // 551\n  'use strict';                                                                                      // 552\n                                                                                                     // 553\n  this.blur_();                                                                                      // 554\n};                                                                                                   // 555\n                                                                                                     // 556\n/**                                                                                                  // 557\n * Handle class updates.                                                                             // 558\n * @param {HTMLElement} button The button whose classes we should update.                            // 559\n * @param {HTMLElement} label The label whose classes we should update.                              // 560\n * @private                                                                                          // 561\n */                                                                                                  // 562\nMaterialCheckbox.prototype.updateClasses_ = function() {                                             // 563\n  'use strict';                                                                                      // 564\n                                                                                                     // 565\n  if (this.inputElement_.disabled) {                                                                 // 566\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);                                       // 567\n  } else {                                                                                           // 568\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);                                    // 569\n  }                                                                                                  // 570\n                                                                                                     // 571\n  if (this.inputElement_.checked) {                                                                  // 572\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);                                        // 573\n  } else {                                                                                           // 574\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);                                     // 575\n  }                                                                                                  // 576\n};                                                                                                   // 577\n                                                                                                     // 578\n/**                                                                                                  // 579\n * Add blur.                                                                                         // 580\n * @private                                                                                          // 581\n */                                                                                                  // 582\nMaterialCheckbox.prototype.blur_ = function(event) {                                                 // 583\n  'use strict';                                                                                      // 584\n                                                                                                     // 585\n  // TODO: figure out why there's a focus event being fired after our blur,                          // 586\n  // so that we can avoid this hack.                                                                 // 587\n  window.setTimeout(function() {                                                                     // 588\n    this.inputElement_.blur();                                                                       // 589\n  }.bind(this), this.Constant_.TINY_TIMEOUT);                                                        // 590\n};                                                                                                   // 591\n                                                                                                     // 592\n// Public methods.                                                                                   // 593\n                                                                                                     // 594\n/**                                                                                                  // 595\n * Disable checkbox.                                                                                 // 596\n * @public                                                                                           // 597\n */                                                                                                  // 598\nMaterialCheckbox.prototype.disable = function() {                                                    // 599\n  'use strict';                                                                                      // 600\n                                                                                                     // 601\n  this.inputElement_.disabled = true;                                                                // 602\n  this.updateClasses_();                                                                             // 603\n};                                                                                                   // 604\n                                                                                                     // 605\n/**                                                                                                  // 606\n * Enable checkbox.                                                                                  // 607\n * @public                                                                                           // 608\n */                                                                                                  // 609\nMaterialCheckbox.prototype.enable = function() {                                                     // 610\n  'use strict';                                                                                      // 611\n                                                                                                     // 612\n  this.inputElement_.disabled = false;                                                               // 613\n  this.updateClasses_();                                                                             // 614\n};                                                                                                   // 615\n                                                                                                     // 616\n/**                                                                                                  // 617\n * Check checkbox.                                                                                   // 618\n * @public                                                                                           // 619\n */                                                                                                  // 620\nMaterialCheckbox.prototype.check = function() {                                                      // 621\n  'use strict';                                                                                      // 622\n                                                                                                     // 623\n  this.inputElement_.checked = true;                                                                 // 624\n  this.updateClasses_();                                                                             // 625\n};                                                                                                   // 626\n                                                                                                     // 627\n/**                                                                                                  // 628\n * Uncheck checkbox.                                                                                 // 629\n * @public                                                                                           // 630\n */                                                                                                  // 631\nMaterialCheckbox.prototype.uncheck = function() {                                                    // 632\n  'use strict';                                                                                      // 633\n                                                                                                     // 634\n  this.inputElement_.checked = false;                                                                // 635\n  this.updateClasses_();                                                                             // 636\n};                                                                                                   // 637\n                                                                                                     // 638\n/**                                                                                                  // 639\n * Initialize element.                                                                               // 640\n */                                                                                                  // 641\nMaterialCheckbox.prototype.init = function() {                                                       // 642\n  'use strict';                                                                                      // 643\n                                                                                                     // 644\n  if (this.element_) {                                                                               // 645\n    this.inputElement_ = this.element_.querySelector('.' +                                           // 646\n        this.CssClasses_.INPUT);                                                                     // 647\n                                                                                                     // 648\n    var boxOutline = document.createElement('span');                                                 // 649\n    boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);                                          // 650\n                                                                                                     // 651\n    var tickContainer = document.createElement('span');                                              // 652\n    tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);                                      // 653\n                                                                                                     // 654\n    var tickOutline = document.createElement('span');                                                // 655\n    tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);                                        // 656\n                                                                                                     // 657\n    boxOutline.appendChild(tickOutline);                                                             // 658\n                                                                                                     // 659\n    this.element_.appendChild(tickContainer);                                                        // 660\n    this.element_.appendChild(boxOutline);                                                           // 661\n                                                                                                     // 662\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {                          // 663\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);                            // 664\n      this.rippleContainerElement_ = document.createElement('span');                                 // 665\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);                 // 666\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);                    // 667\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);                    // 668\n      this.boundRippleMouseUp = this.onMouseUp_.bind(this);                                          // 669\n      this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);             // 670\n                                                                                                     // 671\n      var ripple = document.createElement('span');                                                   // 672\n      ripple.classList.add(this.CssClasses_.RIPPLE);                                                 // 673\n                                                                                                     // 674\n      this.rippleContainerElement_.appendChild(ripple);                                              // 675\n      this.element_.appendChild(this.rippleContainerElement_);                                       // 676\n    }                                                                                                // 677\n    this.boundInputOnChange = this.onChange_.bind(this);                                             // 678\n    this.boundInputOnFocus = this.onFocus_.bind(this);                                               // 679\n    this.boundInputOnBlur = this.onBlur_.bind(this);                                                 // 680\n    this.boundElementMouseUp = this.onMouseUp_.bind(this);                                           // 681\n    this.inputElement_.addEventListener('change', this.boundInputOnChange);                          // 682\n    this.inputElement_.addEventListener('focus', this.boundInputOnFocus);                            // 683\n    this.inputElement_.addEventListener('blur', this.boundInputOnBlur);                              // 684\n    this.element_.addEventListener('mouseup', this.boundElementMouseUp);                             // 685\n                                                                                                     // 686\n    this.updateClasses_();                                                                           // 687\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 688\n  }                                                                                                  // 689\n};                                                                                                   // 690\n                                                                                                     // 691\n/*                                                                                                   // 692\n* Downgrade the component.                                                                           // 693\n*/                                                                                                   // 694\nMaterialCheckbox.prototype.mdlDowngrade_ = function() {                                              // 695\n  'use strict';                                                                                      // 696\n  if (this.rippleContainerElement_) {                                                                // 697\n    this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);            // 698\n  }                                                                                                  // 699\n  this.inputElement_.removeEventListener('change', this.boundInputOnChange);                         // 700\n  this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);                           // 701\n  this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);                             // 702\n  this.element_.removeEventListener('mouseup', this.boundElementMouseUp);                            // 703\n};                                                                                                   // 704\n                                                                                                     // 705\n// The component registers itself. It can assume componentHandler is available                       // 706\n// in the global scope.                                                                              // 707\ncomponentHandler.register({                                                                          // 708\n  constructor: MaterialCheckbox,                                                                     // 709\n  classAsString: 'MaterialCheckbox',                                                                 // 710\n  cssClass: 'mdl-js-checkbox'                                                                        // 711\n});                                                                                                  // 712\n                                                                                                     // 713\n/**                                                                                                  // 714\n * @license                                                                                          // 715\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 716\n *                                                                                                   // 717\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 718\n * you may not use this file except in compliance with the License.                                  // 719\n * You may obtain a copy of the License at                                                           // 720\n *                                                                                                   // 721\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 722\n *                                                                                                   // 723\n * Unless required by applicable law or agreed to in writing, software                               // 724\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 725\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 726\n * See the License for the specific language governing permissions and                               // 727\n * limitations under the License.                                                                    // 728\n */                                                                                                  // 729\n                                                                                                     // 730\n/**                                                                                                  // 731\n * Class constructor for icon toggle MDL component.                                                  // 732\n * Implements MDL component design pattern defined at:                                               // 733\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 734\n * @param {HTMLElement} element The element that will be upgraded.                                   // 735\n */                                                                                                  // 736\nfunction MaterialIconToggle(element) {                                                               // 737\n  'use strict';                                                                                      // 738\n                                                                                                     // 739\n  this.element_ = element;                                                                           // 740\n                                                                                                     // 741\n  // Initialize instance.                                                                            // 742\n  this.init();                                                                                       // 743\n}                                                                                                    // 744\n                                                                                                     // 745\n/**                                                                                                  // 746\n * Store constants in one place so they can be updated easily.                                       // 747\n * @enum {string | number}                                                                           // 748\n * @private                                                                                          // 749\n */                                                                                                  // 750\nMaterialIconToggle.prototype.Constant_ = {                                                           // 751\n  TINY_TIMEOUT: 0.001                                                                                // 752\n};                                                                                                   // 753\n                                                                                                     // 754\n/**                                                                                                  // 755\n * Store strings for class names defined by this component that are used in                          // 756\n * JavaScript. This allows us to simply change it in one place should we                             // 757\n * decide to modify at a later date.                                                                 // 758\n * @enum {string}                                                                                    // 759\n * @private                                                                                          // 760\n */                                                                                                  // 761\nMaterialIconToggle.prototype.CssClasses_ = {                                                         // 762\n  INPUT: 'mdl-icon-toggle__input',                                                                   // 763\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                          // 764\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 765\n  RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',                                             // 766\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 767\n  RIPPLE: 'mdl-ripple',                                                                              // 768\n  IS_FOCUSED: 'is-focused',                                                                          // 769\n  IS_DISABLED: 'is-disabled',                                                                        // 770\n  IS_CHECKED: 'is-checked'                                                                           // 771\n};                                                                                                   // 772\n                                                                                                     // 773\n/**                                                                                                  // 774\n * Handle change of state.                                                                           // 775\n * @param {Event} event The event that fired.                                                        // 776\n * @private                                                                                          // 777\n */                                                                                                  // 778\nMaterialIconToggle.prototype.onChange_ = function(event) {                                           // 779\n  'use strict';                                                                                      // 780\n                                                                                                     // 781\n  this.updateClasses_();                                                                             // 782\n};                                                                                                   // 783\n                                                                                                     // 784\n/**                                                                                                  // 785\n * Handle focus of element.                                                                          // 786\n * @param {Event} event The event that fired.                                                        // 787\n * @private                                                                                          // 788\n */                                                                                                  // 789\nMaterialIconToggle.prototype.onFocus_ = function(event) {                                            // 790\n  'use strict';                                                                                      // 791\n                                                                                                     // 792\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 793\n};                                                                                                   // 794\n                                                                                                     // 795\n/**                                                                                                  // 796\n * Handle lost focus of element.                                                                     // 797\n * @param {Event} event The event that fired.                                                        // 798\n * @private                                                                                          // 799\n */                                                                                                  // 800\nMaterialIconToggle.prototype.onBlur_ = function(event) {                                             // 801\n  'use strict';                                                                                      // 802\n                                                                                                     // 803\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 804\n};                                                                                                   // 805\n                                                                                                     // 806\n/**                                                                                                  // 807\n * Handle mouseup.                                                                                   // 808\n * @param {Event} event The event that fired.                                                        // 809\n * @private                                                                                          // 810\n */                                                                                                  // 811\nMaterialIconToggle.prototype.onMouseUp_ = function(event) {                                          // 812\n  'use strict';                                                                                      // 813\n                                                                                                     // 814\n  this.blur_();                                                                                      // 815\n};                                                                                                   // 816\n                                                                                                     // 817\n/**                                                                                                  // 818\n * Handle class updates.                                                                             // 819\n * @param {HTMLElement} button The button whose classes we should update.                            // 820\n * @param {HTMLElement} label The label whose classes we should update.                              // 821\n * @private                                                                                          // 822\n */                                                                                                  // 823\nMaterialIconToggle.prototype.updateClasses_ = function() {                                           // 824\n  'use strict';                                                                                      // 825\n                                                                                                     // 826\n  if (this.inputElement_.disabled) {                                                                 // 827\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);                                       // 828\n  } else {                                                                                           // 829\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);                                    // 830\n  }                                                                                                  // 831\n                                                                                                     // 832\n  if (this.inputElement_.checked) {                                                                  // 833\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);                                        // 834\n  } else {                                                                                           // 835\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);                                     // 836\n  }                                                                                                  // 837\n};                                                                                                   // 838\n                                                                                                     // 839\n/**                                                                                                  // 840\n * Add blur.                                                                                         // 841\n * @private                                                                                          // 842\n */                                                                                                  // 843\nMaterialIconToggle.prototype.blur_ = function(event) {                                               // 844\n  'use strict';                                                                                      // 845\n                                                                                                     // 846\n  // TODO: figure out why there's a focus event being fired after our blur,                          // 847\n  // so that we can avoid this hack.                                                                 // 848\n  window.setTimeout(function() {                                                                     // 849\n    this.inputElement_.blur();                                                                       // 850\n  }.bind(this), this.Constant_.TINY_TIMEOUT);                                                        // 851\n};                                                                                                   // 852\n                                                                                                     // 853\n// Public methods.                                                                                   // 854\n                                                                                                     // 855\n/**                                                                                                  // 856\n * Disable icon toggle.                                                                              // 857\n * @public                                                                                           // 858\n */                                                                                                  // 859\nMaterialIconToggle.prototype.disable = function() {                                                  // 860\n  'use strict';                                                                                      // 861\n                                                                                                     // 862\n  this.inputElement_.disabled = true;                                                                // 863\n  this.updateClasses_();                                                                             // 864\n};                                                                                                   // 865\n                                                                                                     // 866\n/**                                                                                                  // 867\n * Enable icon toggle.                                                                               // 868\n * @public                                                                                           // 869\n */                                                                                                  // 870\nMaterialIconToggle.prototype.enable = function() {                                                   // 871\n  'use strict';                                                                                      // 872\n                                                                                                     // 873\n  this.inputElement_.disabled = false;                                                               // 874\n  this.updateClasses_();                                                                             // 875\n};                                                                                                   // 876\n                                                                                                     // 877\n/**                                                                                                  // 878\n * Check icon toggle.                                                                                // 879\n * @public                                                                                           // 880\n */                                                                                                  // 881\nMaterialIconToggle.prototype.check = function() {                                                    // 882\n  'use strict';                                                                                      // 883\n                                                                                                     // 884\n  this.inputElement_.checked = true;                                                                 // 885\n  this.updateClasses_();                                                                             // 886\n};                                                                                                   // 887\n                                                                                                     // 888\n/**                                                                                                  // 889\n * Uncheck icon toggle.                                                                              // 890\n * @public                                                                                           // 891\n */                                                                                                  // 892\nMaterialIconToggle.prototype.uncheck = function() {                                                  // 893\n  'use strict';                                                                                      // 894\n                                                                                                     // 895\n  this.inputElement_.checked = false;                                                                // 896\n  this.updateClasses_();                                                                             // 897\n};                                                                                                   // 898\n                                                                                                     // 899\n/**                                                                                                  // 900\n * Initialize element.                                                                               // 901\n */                                                                                                  // 902\nMaterialIconToggle.prototype.init = function() {                                                     // 903\n  'use strict';                                                                                      // 904\n                                                                                                     // 905\n  if (this.element_) {                                                                               // 906\n    this.inputElement_ =                                                                             // 907\n        this.element_.querySelector('.' + this.CssClasses_.INPUT);                                   // 908\n                                                                                                     // 909\n    if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {                       // 910\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);                            // 911\n      this.rippleContainerElement_ = document.createElement('span');                                 // 912\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);                 // 913\n      this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);                 // 914\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);                    // 915\n      this.boundRippleMouseUp = this.onMouseUp_.bind(this);                                          // 916\n      this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);             // 917\n                                                                                                     // 918\n      var ripple = document.createElement('span');                                                   // 919\n      ripple.classList.add(this.CssClasses_.RIPPLE);                                                 // 920\n                                                                                                     // 921\n      this.rippleContainerElement_.appendChild(ripple);                                              // 922\n      this.element_.appendChild(this.rippleContainerElement_);                                       // 923\n    }                                                                                                // 924\n                                                                                                     // 925\n    this.boundInputOnChange = this.onChange_.bind(this);                                             // 926\n    this.boundInputOnFocus = this.onFocus_.bind(this);                                               // 927\n    this.boundInputOnBlur = this.onBlur_.bind(this);                                                 // 928\n    this.boundElementOnMouseUp = this.onMouseUp_.bind(this);                                         // 929\n    this.inputElement_.addEventListener('change', this.boundInputOnChange);                          // 930\n    this.inputElement_.addEventListener('focus', this.boundInputOnFocus);                            // 931\n    this.inputElement_.addEventListener('blur', this.boundInputOnBlur);                              // 932\n    this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);                           // 933\n                                                                                                     // 934\n    this.updateClasses_();                                                                           // 935\n    this.element_.classList.add('is-upgraded');                                                      // 936\n  }                                                                                                  // 937\n};                                                                                                   // 938\n                                                                                                     // 939\n/*                                                                                                   // 940\n* Downgrade the component                                                                            // 941\n*/                                                                                                   // 942\nMaterialIconToggle.prototype.mdlDowngrade_ = function() {                                            // 943\n  'use strict';                                                                                      // 944\n  if (this.rippleContainerElement_) {                                                                // 945\n    this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);            // 946\n  }                                                                                                  // 947\n  this.inputElement_.removeEventListener('change', this.boundInputOnChange);                         // 948\n  this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);                           // 949\n  this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);                             // 950\n  this.element_.removeEventListener('mouseup', this.boundElementOnMouseUp);                          // 951\n};                                                                                                   // 952\n                                                                                                     // 953\n// The component registers itself. It can assume componentHandler is available                       // 954\n// in the global scope.                                                                              // 955\ncomponentHandler.register({                                                                          // 956\n  constructor: MaterialIconToggle,                                                                   // 957\n  classAsString: 'MaterialIconToggle',                                                               // 958\n  cssClass: 'mdl-js-icon-toggle'                                                                     // 959\n});                                                                                                  // 960\n                                                                                                     // 961\n/**                                                                                                  // 962\n * @license                                                                                          // 963\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 964\n *                                                                                                   // 965\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 966\n * you may not use this file except in compliance with the License.                                  // 967\n * You may obtain a copy of the License at                                                           // 968\n *                                                                                                   // 969\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 970\n *                                                                                                   // 971\n * Unless required by applicable law or agreed to in writing, software                               // 972\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 973\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 974\n * See the License for the specific language governing permissions and                               // 975\n * limitations under the License.                                                                    // 976\n */                                                                                                  // 977\n                                                                                                     // 978\n/**                                                                                                  // 979\n * Class constructor for dropdown MDL component.                                                     // 980\n * Implements MDL component design pattern defined at:                                               // 981\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 982\n * @param {HTMLElement} element The element that will be upgraded.                                   // 983\n */                                                                                                  // 984\nfunction MaterialMenu(element) {                                                                     // 985\n  'use strict';                                                                                      // 986\n                                                                                                     // 987\n  this.element_ = element;                                                                           // 988\n                                                                                                     // 989\n  // Initialize instance.                                                                            // 990\n  this.init();                                                                                       // 991\n}                                                                                                    // 992\n                                                                                                     // 993\n/**                                                                                                  // 994\n * Store constants in one place so they can be updated easily.                                       // 995\n * @enum {string | number}                                                                           // 996\n * @private                                                                                          // 997\n */                                                                                                  // 998\nMaterialMenu.prototype.Constant_ = {                                                                 // 999\n  // Total duration of the menu animation.                                                           // 1000\n  TRANSITION_DURATION_SECONDS: 0.3,                                                                  // 1001\n  // The fraction of the total duration we want to use for menu item animations.                     // 1002\n  TRANSITION_DURATION_FRACTION: 0.8,                                                                 // 1003\n  // How long the menu stays open after choosing an option (so the user can see                      // 1004\n  // the ripple).                                                                                    // 1005\n  CLOSE_TIMEOUT: 150                                                                                 // 1006\n};                                                                                                   // 1007\n                                                                                                     // 1008\n/**                                                                                                  // 1009\n * Keycodes, for code readability.                                                                   // 1010\n * @enum {number}                                                                                    // 1011\n * @private                                                                                          // 1012\n */                                                                                                  // 1013\nMaterialMenu.prototype.Keycodes_ = {                                                                 // 1014\n  ENTER: 13,                                                                                         // 1015\n  ESCAPE: 27,                                                                                        // 1016\n  SPACE: 32,                                                                                         // 1017\n  UP_ARROW: 38,                                                                                      // 1018\n  DOWN_ARROW: 40                                                                                     // 1019\n};                                                                                                   // 1020\n                                                                                                     // 1021\n/**                                                                                                  // 1022\n * Store strings for class names defined by this component that are used in                          // 1023\n * JavaScript. This allows us to simply change it in one place should we                             // 1024\n * decide to modify at a later date.                                                                 // 1025\n * @enum {string}                                                                                    // 1026\n * @private                                                                                          // 1027\n */                                                                                                  // 1028\nMaterialMenu.prototype.CssClasses_ = {                                                               // 1029\n  CONTAINER: 'mdl-menu__container',                                                                  // 1030\n  OUTLINE: 'mdl-menu__outline',                                                                      // 1031\n  ITEM: 'mdl-menu__item',                                                                            // 1032\n  ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',                                          // 1033\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 1034\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 1035\n  RIPPLE: 'mdl-ripple',                                                                              // 1036\n  // Statuses                                                                                        // 1037\n  IS_UPGRADED: 'is-upgraded',                                                                        // 1038\n  IS_VISIBLE: 'is-visible',                                                                          // 1039\n  IS_ANIMATING: 'is-animating',                                                                      // 1040\n  // Alignment options                                                                               // 1041\n  BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.                                     // 1042\n  BOTTOM_RIGHT: 'mdl-menu--bottom-right',                                                            // 1043\n  TOP_LEFT: 'mdl-menu--top-left',                                                                    // 1044\n  TOP_RIGHT: 'mdl-menu--top-right',                                                                  // 1045\n  UNALIGNED: 'mdl-menu--unaligned'                                                                   // 1046\n};                                                                                                   // 1047\n                                                                                                     // 1048\n/**                                                                                                  // 1049\n * Initialize element.                                                                               // 1050\n */                                                                                                  // 1051\nMaterialMenu.prototype.init = function() {                                                           // 1052\n  'use strict';                                                                                      // 1053\n                                                                                                     // 1054\n  if (this.element_) {                                                                               // 1055\n    // Create container for the menu.                                                                // 1056\n    var container = document.createElement('div');                                                   // 1057\n    container.classList.add(this.CssClasses_.CONTAINER);                                             // 1058\n    this.element_.parentElement.insertBefore(container, this.element_);                              // 1059\n    this.element_.parentElement.removeChild(this.element_);                                          // 1060\n    container.appendChild(this.element_);                                                            // 1061\n    this.container_ = container;                                                                     // 1062\n                                                                                                     // 1063\n    // Create outline for the menu (shadow and background).                                          // 1064\n    var outline = document.createElement('div');                                                     // 1065\n    outline.classList.add(this.CssClasses_.OUTLINE);                                                 // 1066\n    this.outline_ = outline;                                                                         // 1067\n    container.insertBefore(outline, this.element_);                                                  // 1068\n                                                                                                     // 1069\n    // Find the \"for\" element and bind events to it.                                                 // 1070\n    var forElId = this.element_.getAttribute('for');                                                 // 1071\n    var forEl = null;                                                                                // 1072\n    if (forElId) {                                                                                   // 1073\n      forEl = document.getElementById(forElId);                                                      // 1074\n      if (forEl) {                                                                                   // 1075\n        this.forElement_ = forEl;                                                                    // 1076\n        forEl.addEventListener('click', this.handleForClick_.bind(this));                            // 1077\n        forEl.addEventListener('keydown',                                                            // 1078\n            this.handleForKeyboardEvent_.bind(this));                                                // 1079\n      }                                                                                              // 1080\n    }                                                                                                // 1081\n                                                                                                     // 1082\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);                         // 1083\n                                                                                                     // 1084\n    for (var i = 0; i < items.length; i++) {                                                         // 1085\n      // Add a listener to each menu item.                                                           // 1086\n      items[i].addEventListener('click', this.handleItemClick_.bind(this));                          // 1087\n      // Add a tab index to each menu item.                                                          // 1088\n      items[i].tabIndex = '-1';                                                                      // 1089\n      // Add a keyboard listener to each menu item.                                                  // 1090\n      items[i].addEventListener('keydown',                                                           // 1091\n          this.handleItemKeyboardEvent_.bind(this));                                                 // 1092\n    }                                                                                                // 1093\n                                                                                                     // 1094\n    // Add ripple classes to each item, if the user has enabled ripples.                             // 1095\n    if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {                          // 1096\n      this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);                            // 1097\n                                                                                                     // 1098\n      for (i = 0; i < items.length; i++) {                                                           // 1099\n        var item = items[i];                                                                         // 1100\n                                                                                                     // 1101\n        var rippleContainer = document.createElement('span');                                        // 1102\n        rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);                       // 1103\n                                                                                                     // 1104\n        var ripple = document.createElement('span');                                                 // 1105\n        ripple.classList.add(this.CssClasses_.RIPPLE);                                               // 1106\n        rippleContainer.appendChild(ripple);                                                         // 1107\n                                                                                                     // 1108\n        item.appendChild(rippleContainer);                                                           // 1109\n        item.classList.add(this.CssClasses_.RIPPLE_EFFECT);                                          // 1110\n      }                                                                                              // 1111\n    }                                                                                                // 1112\n                                                                                                     // 1113\n    // Copy alignment classes to the container, so the outline can use them.                         // 1114\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {                            // 1115\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);                                     // 1116\n    }                                                                                                // 1117\n    if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {                           // 1118\n      this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);                                    // 1119\n    }                                                                                                // 1120\n    if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {                               // 1121\n      this.outline_.classList.add(this.CssClasses_.TOP_LEFT);                                        // 1122\n    }                                                                                                // 1123\n    if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {                              // 1124\n      this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);                                       // 1125\n    }                                                                                                // 1126\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {                              // 1127\n      this.outline_.classList.add(this.CssClasses_.UNALIGNED);                                       // 1128\n    }                                                                                                // 1129\n                                                                                                     // 1130\n    container.classList.add(this.CssClasses_.IS_UPGRADED);                                           // 1131\n  }                                                                                                  // 1132\n};                                                                                                   // 1133\n                                                                                                     // 1134\n/**                                                                                                  // 1135\n * Handles a click on the \"for\" element, by positioning the menu and then                            // 1136\n * toggling it.                                                                                      // 1137\n * @private                                                                                          // 1138\n */                                                                                                  // 1139\nMaterialMenu.prototype.handleForClick_ = function(evt) {                                             // 1140\n  'use strict';                                                                                      // 1141\n                                                                                                     // 1142\n  if (this.element_ && this.forElement_) {                                                           // 1143\n    var rect = this.forElement_.getBoundingClientRect();                                             // 1144\n    var forRect = this.forElement_.parentElement.getBoundingClientRect();                            // 1145\n                                                                                                     // 1146\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {                              // 1147\n      // Do not position the menu automatically. Requires the developer to                           // 1148\n      // manually specify position.                                                                  // 1149\n    } else if (this.element_.classList.contains(                                                     // 1150\n        this.CssClasses_.BOTTOM_RIGHT)) {                                                            // 1151\n      // Position below the \"for\" element, aligned to its right.                                     // 1152\n      this.container_.style.right = (forRect.right - rect.right) + 'px';                             // 1153\n      this.container_.style.top =                                                                    // 1154\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';                         // 1155\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {                        // 1156\n      // Position above the \"for\" element, aligned to its left.                                      // 1157\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';                               // 1158\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';                             // 1159\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {                       // 1160\n      // Position above the \"for\" element, aligned to its right.                                     // 1161\n      this.container_.style.right = (forRect.right - rect.right) + 'px';                             // 1162\n      this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';                             // 1163\n    } else {                                                                                         // 1164\n      // Default: position below the \"for\" element, aligned to its left.                             // 1165\n      this.container_.style.left = this.forElement_.offsetLeft + 'px';                               // 1166\n      this.container_.style.top =                                                                    // 1167\n          this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';                         // 1168\n    }                                                                                                // 1169\n  }                                                                                                  // 1170\n                                                                                                     // 1171\n  this.toggle(evt);                                                                                  // 1172\n};                                                                                                   // 1173\n                                                                                                     // 1174\n/**                                                                                                  // 1175\n * Handles a keyboard event on the \"for\" element.                                                    // 1176\n * @private                                                                                          // 1177\n */                                                                                                  // 1178\nMaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {                                     // 1179\n  'use strict';                                                                                      // 1180\n                                                                                                     // 1181\n  if (this.element_ && this.container_ && this.forElement_) {                                        // 1182\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +                         // 1183\n      ':not([disabled])');                                                                           // 1184\n                                                                                                     // 1185\n    if (items && items.length > 0 &&                                                                 // 1186\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {                           // 1187\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {                                                 // 1188\n        evt.preventDefault();                                                                        // 1189\n        items[items.length - 1].focus();                                                             // 1190\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {                                        // 1191\n        evt.preventDefault();                                                                        // 1192\n        items[0].focus();                                                                            // 1193\n      }                                                                                              // 1194\n    }                                                                                                // 1195\n  }                                                                                                  // 1196\n};                                                                                                   // 1197\n                                                                                                     // 1198\n/**                                                                                                  // 1199\n * Handles a keyboard event on an item.                                                              // 1200\n * @private                                                                                          // 1201\n */                                                                                                  // 1202\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {                                    // 1203\n  'use strict';                                                                                      // 1204\n                                                                                                     // 1205\n  if (this.element_ && this.container_) {                                                            // 1206\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +                         // 1207\n      ':not([disabled])');                                                                           // 1208\n                                                                                                     // 1209\n    if (items && items.length > 0 &&                                                                 // 1210\n        this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {                           // 1211\n      var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);                      // 1212\n                                                                                                     // 1213\n      if (evt.keyCode === this.Keycodes_.UP_ARROW) {                                                 // 1214\n        evt.preventDefault();                                                                        // 1215\n        if (currentIndex > 0) {                                                                      // 1216\n          items[currentIndex - 1].focus();                                                           // 1217\n        } else {                                                                                     // 1218\n          items[items.length - 1].focus();                                                           // 1219\n        }                                                                                            // 1220\n      } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {                                        // 1221\n        evt.preventDefault();                                                                        // 1222\n        if (items.length > currentIndex + 1) {                                                       // 1223\n          items[currentIndex + 1].focus();                                                           // 1224\n        } else {                                                                                     // 1225\n          items[0].focus();                                                                          // 1226\n        }                                                                                            // 1227\n      } else if (evt.keyCode === this.Keycodes_.SPACE ||                                             // 1228\n            evt.keyCode === this.Keycodes_.ENTER) {                                                  // 1229\n        evt.preventDefault();                                                                        // 1230\n        // Send mousedown and mouseup to trigger ripple.                                             // 1231\n        var e = new MouseEvent('mousedown');                                                         // 1232\n        evt.target.dispatchEvent(e);                                                                 // 1233\n        e = new MouseEvent('mouseup');                                                               // 1234\n        evt.target.dispatchEvent(e);                                                                 // 1235\n        // Send click.                                                                               // 1236\n        evt.target.click();                                                                          // 1237\n      } else if (evt.keyCode === this.Keycodes_.ESCAPE) {                                            // 1238\n        evt.preventDefault();                                                                        // 1239\n        this.hide();                                                                                 // 1240\n      }                                                                                              // 1241\n    }                                                                                                // 1242\n  }                                                                                                  // 1243\n};                                                                                                   // 1244\n                                                                                                     // 1245\n/**                                                                                                  // 1246\n * Handles a click event on an item.                                                                 // 1247\n * @private                                                                                          // 1248\n */                                                                                                  // 1249\nMaterialMenu.prototype.handleItemClick_ = function(evt) {                                            // 1250\n  'use strict';                                                                                      // 1251\n                                                                                                     // 1252\n  if (evt.target.getAttribute('disabled') !== null) {                                                // 1253\n    evt.stopPropagation();                                                                           // 1254\n  } else {                                                                                           // 1255\n    // Wait some time before closing menu, so the user can see the ripple.                           // 1256\n    this.closing_ = true;                                                                            // 1257\n    window.setTimeout(function(evt) {                                                                // 1258\n      this.hide();                                                                                   // 1259\n      this.closing_ = false;                                                                         // 1260\n    }.bind(this), this.Constant_.CLOSE_TIMEOUT);                                                     // 1261\n  }                                                                                                  // 1262\n};                                                                                                   // 1263\n                                                                                                     // 1264\n/**                                                                                                  // 1265\n * Calculates the initial clip (for opening the menu) or final clip (for closing                     // 1266\n * it), and applies it. This allows us to animate from or to the correct point,                      // 1267\n * that is, the point it's aligned to in the \"for\" element.                                          // 1268\n * @private                                                                                          // 1269\n */                                                                                                  // 1270\nMaterialMenu.prototype.applyClip_ = function(height, width) {                                        // 1271\n  'use strict';                                                                                      // 1272\n                                                                                                     // 1273\n  if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {                                // 1274\n    // Do not clip.                                                                                  // 1275\n    this.element_.style.clip = null;                                                                 // 1276\n  } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {                      // 1277\n    // Clip to the top right corner of the menu.                                                     // 1278\n    this.element_.style.clip =                                                                       // 1279\n        'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';                                            // 1280\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {                          // 1281\n    // Clip to the bottom left corner of the menu.                                                   // 1282\n    this.element_.style.clip =                                                                       // 1283\n        'rect(' + height + 'px 0 ' + height + 'px 0)';                                               // 1284\n  } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {                         // 1285\n    // Clip to the bottom right corner of the menu.                                                  // 1286\n    this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +                            // 1287\n        height + 'px ' + width + 'px)';                                                              // 1288\n  } else {                                                                                           // 1289\n    // Default: do not clip (same as clipping to the top left corner).                               // 1290\n    this.element_.style.clip = null;                                                                 // 1291\n  }                                                                                                  // 1292\n};                                                                                                   // 1293\n                                                                                                     // 1294\n/**                                                                                                  // 1295\n * Adds an event listener to clean up after the animation ends.                                      // 1296\n * @private                                                                                          // 1297\n */                                                                                                  // 1298\nMaterialMenu.prototype.addAnimationEndListener_ = function() {                                       // 1299\n  'use strict';                                                                                      // 1300\n                                                                                                     // 1301\n  var cleanup = function() {                                                                         // 1302\n    this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);                                   // 1303\n  }.bind(this);                                                                                      // 1304\n                                                                                                     // 1305\n  // Remove animation class once the transition is done.                                             // 1306\n  this.element_.addEventListener('transitionend', cleanup);                                          // 1307\n  this.element_.addEventListener('webkitTransitionEnd', cleanup);                                    // 1308\n};                                                                                                   // 1309\n                                                                                                     // 1310\n/**                                                                                                  // 1311\n * Displays the menu.                                                                                // 1312\n * @public                                                                                           // 1313\n */                                                                                                  // 1314\nMaterialMenu.prototype.show = function(evt) {                                                        // 1315\n  'use strict';                                                                                      // 1316\n                                                                                                     // 1317\n  if (this.element_ && this.container_ && this.outline_) {                                           // 1318\n    // Measure the inner element.                                                                    // 1319\n    var height = this.element_.getBoundingClientRect().height;                                       // 1320\n    var width = this.element_.getBoundingClientRect().width;                                         // 1321\n                                                                                                     // 1322\n    // Apply the inner element's size to the container and outline.                                  // 1323\n    this.container_.style.width = width + 'px';                                                      // 1324\n    this.container_.style.height = height + 'px';                                                    // 1325\n    this.outline_.style.width = width + 'px';                                                        // 1326\n    this.outline_.style.height = height + 'px';                                                      // 1327\n                                                                                                     // 1328\n    var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *                            // 1329\n        this.Constant_.TRANSITION_DURATION_FRACTION;                                                 // 1330\n                                                                                                     // 1331\n    // Calculate transition delays for individual menu items, so that they fade                      // 1332\n    // in one at a time.                                                                             // 1333\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);                         // 1334\n    for (var i = 0; i < items.length; i++) {                                                         // 1335\n      var itemDelay = null;                                                                          // 1336\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||                             // 1337\n          this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {                            // 1338\n        itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /                         // 1339\n            height * transitionDuration) + 's';                                                      // 1340\n      } else {                                                                                       // 1341\n        itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';                        // 1342\n      }                                                                                              // 1343\n      items[i].style.transitionDelay = itemDelay;                                                    // 1344\n    }                                                                                                // 1345\n                                                                                                     // 1346\n    // Apply the initial clip to the text before we start animating.                                 // 1347\n    this.applyClip_(height, width);                                                                  // 1348\n                                                                                                     // 1349\n    // Wait for the next frame, turn on animation, and apply the final clip.                         // 1350\n    // Also make it visible. This triggers the transitions.                                          // 1351\n    window.requestAnimationFrame(function() {                                                        // 1352\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);                                    // 1353\n      this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';                       // 1354\n      this.container_.classList.add(this.CssClasses_.IS_VISIBLE);                                    // 1355\n    }.bind(this));                                                                                   // 1356\n                                                                                                     // 1357\n    // Clean up after the animation is complete.                                                     // 1358\n    this.addAnimationEndListener_();                                                                 // 1359\n                                                                                                     // 1360\n    // Add a click listener to the document, to close the menu.                                      // 1361\n    var callback = function(e) {                                                                     // 1362\n      // Check to see if the document is processing the same event that                              // 1363\n      // displayed the menu in the first place. If so, do nothing.                                   // 1364\n      // Also check to see if the menu is in the process of closing itself, and                      // 1365\n      // do nothing in that case.                                                                    // 1366\n      if (e !== evt && !this.closing_) {                                                             // 1367\n        document.removeEventListener('click', callback);                                             // 1368\n        this.hide();                                                                                 // 1369\n      }                                                                                              // 1370\n    }.bind(this);                                                                                    // 1371\n    document.addEventListener('click', callback);                                                    // 1372\n  }                                                                                                  // 1373\n};                                                                                                   // 1374\n                                                                                                     // 1375\n/**                                                                                                  // 1376\n * Hides the menu.                                                                                   // 1377\n * @public                                                                                           // 1378\n */                                                                                                  // 1379\nMaterialMenu.prototype.hide = function() {                                                           // 1380\n  'use strict';                                                                                      // 1381\n                                                                                                     // 1382\n  if (this.element_ && this.container_ && this.outline_) {                                           // 1383\n    var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);                         // 1384\n                                                                                                     // 1385\n    // Remove all transition delays; menu items fade out concurrently.                               // 1386\n    for (var i = 0; i < items.length; i++) {                                                         // 1387\n      items[i].style.transitionDelay = null;                                                         // 1388\n    }                                                                                                // 1389\n                                                                                                     // 1390\n    // Measure the inner element.                                                                    // 1391\n    var height = this.element_.getBoundingClientRect().height;                                       // 1392\n    var width = this.element_.getBoundingClientRect().width;                                         // 1393\n                                                                                                     // 1394\n    // Turn on animation, and apply the final clip. Also make invisible.                             // 1395\n    // This triggers the transitions.                                                                // 1396\n    this.element_.classList.add(this.CssClasses_.IS_ANIMATING);                                      // 1397\n    this.applyClip_(height, width);                                                                  // 1398\n    this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);                                   // 1399\n                                                                                                     // 1400\n    // Clean up after the animation is complete.                                                     // 1401\n    this.addAnimationEndListener_();                                                                 // 1402\n  }                                                                                                  // 1403\n};                                                                                                   // 1404\n                                                                                                     // 1405\n/**                                                                                                  // 1406\n * Displays or hides the menu, depending on current state.                                           // 1407\n * @public                                                                                           // 1408\n */                                                                                                  // 1409\nMaterialMenu.prototype.toggle = function(evt) {                                                      // 1410\n  'use strict';                                                                                      // 1411\n                                                                                                     // 1412\n  if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {                             // 1413\n    this.hide();                                                                                     // 1414\n  } else {                                                                                           // 1415\n    this.show(evt);                                                                                  // 1416\n  }                                                                                                  // 1417\n};                                                                                                   // 1418\n                                                                                                     // 1419\n// The component registers itself. It can assume componentHandler is available                       // 1420\n// in the global scope.                                                                              // 1421\ncomponentHandler.register({                                                                          // 1422\n  constructor: MaterialMenu,                                                                         // 1423\n  classAsString: 'MaterialMenu',                                                                     // 1424\n  cssClass: 'mdl-js-menu'                                                                            // 1425\n});                                                                                                  // 1426\n                                                                                                     // 1427\n/**                                                                                                  // 1428\n * @license                                                                                          // 1429\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 1430\n *                                                                                                   // 1431\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 1432\n * you may not use this file except in compliance with the License.                                  // 1433\n * You may obtain a copy of the License at                                                           // 1434\n *                                                                                                   // 1435\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 1436\n *                                                                                                   // 1437\n * Unless required by applicable law or agreed to in writing, software                               // 1438\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 1439\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 1440\n * See the License for the specific language governing permissions and                               // 1441\n * limitations under the License.                                                                    // 1442\n */                                                                                                  // 1443\n                                                                                                     // 1444\n/**                                                                                                  // 1445\n * Class constructor for Progress MDL component.                                                     // 1446\n * Implements MDL component design pattern defined at:                                               // 1447\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 1448\n * @param {HTMLElement} element The element that will be upgraded.                                   // 1449\n */                                                                                                  // 1450\nfunction MaterialProgress(element) {                                                                 // 1451\n  'use strict';                                                                                      // 1452\n                                                                                                     // 1453\n  this.element_ = element;                                                                           // 1454\n                                                                                                     // 1455\n  // Initialize instance.                                                                            // 1456\n  this.init();                                                                                       // 1457\n}                                                                                                    // 1458\n                                                                                                     // 1459\n/**                                                                                                  // 1460\n * Store constants in one place so they can be updated easily.                                       // 1461\n * @enum {string | number}                                                                           // 1462\n * @private                                                                                          // 1463\n */                                                                                                  // 1464\nMaterialProgress.prototype.Constant_ = {                                                             // 1465\n};                                                                                                   // 1466\n                                                                                                     // 1467\n/**                                                                                                  // 1468\n * Store strings for class names defined by this component that are used in                          // 1469\n * JavaScript. This allows us to simply change it in one place should we                             // 1470\n * decide to modify at a later date.                                                                 // 1471\n * @enum {string}                                                                                    // 1472\n * @private                                                                                          // 1473\n */                                                                                                  // 1474\nMaterialProgress.prototype.CssClasses_ = {                                                           // 1475\n  INDETERMINATE_CLASS: 'mdl-progress__indeterminate'                                                 // 1476\n};                                                                                                   // 1477\n                                                                                                     // 1478\nMaterialProgress.prototype.setProgress = function(p) {                                               // 1479\n  'use strict';                                                                                      // 1480\n                                                                                                     // 1481\n  if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {                      // 1482\n    return;                                                                                          // 1483\n  }                                                                                                  // 1484\n                                                                                                     // 1485\n  this.progressbar_.style.width = p + '%';                                                           // 1486\n};                                                                                                   // 1487\n                                                                                                     // 1488\nMaterialProgress.prototype.setBuffer = function(p) {                                                 // 1489\n  'use strict';                                                                                      // 1490\n                                                                                                     // 1491\n  this.bufferbar_.style.width = p + '%';                                                             // 1492\n  this.auxbar_.style.width = (100 - p) + '%';                                                        // 1493\n};                                                                                                   // 1494\n                                                                                                     // 1495\n/**                                                                                                  // 1496\n * Initialize element.                                                                               // 1497\n */                                                                                                  // 1498\nMaterialProgress.prototype.init = function() {                                                       // 1499\n  'use strict';                                                                                      // 1500\n                                                                                                     // 1501\n  if (this.element_) {                                                                               // 1502\n    var el = document.createElement('div');                                                          // 1503\n    el.className = 'progressbar bar bar1';                                                           // 1504\n    this.element_.appendChild(el);                                                                   // 1505\n    this.progressbar_ = el;                                                                          // 1506\n                                                                                                     // 1507\n    el = document.createElement('div');                                                              // 1508\n    el.className = 'bufferbar bar bar2';                                                             // 1509\n    this.element_.appendChild(el);                                                                   // 1510\n    this.bufferbar_ = el;                                                                            // 1511\n                                                                                                     // 1512\n    el = document.createElement('div');                                                              // 1513\n    el.className = 'auxbar bar bar3';                                                                // 1514\n    this.element_.appendChild(el);                                                                   // 1515\n    this.auxbar_ = el;                                                                               // 1516\n                                                                                                     // 1517\n    this.progressbar_.style.width = '0%';                                                            // 1518\n    this.bufferbar_.style.width = '100%';                                                            // 1519\n    this.auxbar_.style.width = '0%';                                                                 // 1520\n                                                                                                     // 1521\n    this.element_.classList.add('is-upgraded');                                                      // 1522\n  }                                                                                                  // 1523\n};                                                                                                   // 1524\n                                                                                                     // 1525\n// The component registers itself. It can assume componentHandler is available                       // 1526\n// in the global scope.                                                                              // 1527\ncomponentHandler.register({                                                                          // 1528\n  constructor: MaterialProgress,                                                                     // 1529\n  classAsString: 'MaterialProgress',                                                                 // 1530\n  cssClass: 'mdl-js-progress'                                                                        // 1531\n});                                                                                                  // 1532\n                                                                                                     // 1533\n/**                                                                                                  // 1534\n * @license                                                                                          // 1535\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 1536\n *                                                                                                   // 1537\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 1538\n * you may not use this file except in compliance with the License.                                  // 1539\n * You may obtain a copy of the License at                                                           // 1540\n *                                                                                                   // 1541\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 1542\n *                                                                                                   // 1543\n * Unless required by applicable law or agreed to in writing, software                               // 1544\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 1545\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 1546\n * See the License for the specific language governing permissions and                               // 1547\n * limitations under the License.                                                                    // 1548\n */                                                                                                  // 1549\n                                                                                                     // 1550\n/**                                                                                                  // 1551\n * Class constructor for Radio MDL component.                                                        // 1552\n * Implements MDL component design pattern defined at:                                               // 1553\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 1554\n * @param {HTMLElement} element The element that will be upgraded.                                   // 1555\n */                                                                                                  // 1556\nfunction MaterialRadio(element) {                                                                    // 1557\n  'use strict';                                                                                      // 1558\n                                                                                                     // 1559\n  this.element_ = element;                                                                           // 1560\n                                                                                                     // 1561\n  // Initialize instance.                                                                            // 1562\n  this.init();                                                                                       // 1563\n}                                                                                                    // 1564\n                                                                                                     // 1565\n/**                                                                                                  // 1566\n * Store constants in one place so they can be updated easily.                                       // 1567\n * @enum {string | number}                                                                           // 1568\n * @private                                                                                          // 1569\n */                                                                                                  // 1570\nMaterialRadio.prototype.Constant_ = {                                                                // 1571\n  TINY_TIMEOUT: 0.001                                                                                // 1572\n};                                                                                                   // 1573\n                                                                                                     // 1574\n/**                                                                                                  // 1575\n * Store strings for class names defined by this component that are used in                          // 1576\n * JavaScript. This allows us to simply change it in one place should we                             // 1577\n * decide to modify at a later date.                                                                 // 1578\n * @enum {string}                                                                                    // 1579\n * @private                                                                                          // 1580\n */                                                                                                  // 1581\nMaterialRadio.prototype.CssClasses_ = {                                                              // 1582\n  IS_FOCUSED: 'is-focused',                                                                          // 1583\n  IS_DISABLED: 'is-disabled',                                                                        // 1584\n  IS_CHECKED: 'is-checked',                                                                          // 1585\n  IS_UPGRADED: 'is-upgraded',                                                                        // 1586\n  JS_RADIO: 'mdl-js-radio',                                                                          // 1587\n  RADIO_BTN: 'mdl-radio__button',                                                                    // 1588\n  RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',                                                     // 1589\n  RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',                                                     // 1590\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 1591\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 1592\n  RIPPLE_CONTAINER: 'mdl-radio__ripple-container',                                                   // 1593\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 1594\n  RIPPLE: 'mdl-ripple'                                                                               // 1595\n};                                                                                                   // 1596\n                                                                                                     // 1597\n/**                                                                                                  // 1598\n * Handle change of state.                                                                           // 1599\n * @param {Event} event The event that fired.                                                        // 1600\n * @private                                                                                          // 1601\n */                                                                                                  // 1602\nMaterialRadio.prototype.onChange_ = function(event) {                                                // 1603\n  'use strict';                                                                                      // 1604\n                                                                                                     // 1605\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1606\n                                                                                                     // 1607\n  // Since other radio buttons don't get change events, we need to look for                          // 1608\n  // them to update their classes.                                                                   // 1609\n  var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);                           // 1610\n  for (var i = 0; i < radios.length; i++) {                                                          // 1611\n    var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);                          // 1612\n    // Different name == different group, so no point updating those.                                // 1613\n    if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {                     // 1614\n      this.updateClasses_(button, radios[i]);                                                        // 1615\n    }                                                                                                // 1616\n  }                                                                                                  // 1617\n};                                                                                                   // 1618\n                                                                                                     // 1619\n/**                                                                                                  // 1620\n * Handle focus.                                                                                     // 1621\n * @param {Event} event The event that fired.                                                        // 1622\n * @private                                                                                          // 1623\n */                                                                                                  // 1624\nMaterialRadio.prototype.onFocus_ = function(event) {                                                 // 1625\n  'use strict';                                                                                      // 1626\n                                                                                                     // 1627\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 1628\n};                                                                                                   // 1629\n                                                                                                     // 1630\n/**                                                                                                  // 1631\n * Handle lost focus.                                                                                // 1632\n * @param {Event} event The event that fired.                                                        // 1633\n * @private                                                                                          // 1634\n */                                                                                                  // 1635\nMaterialRadio.prototype.onBlur_ = function(event) {                                                  // 1636\n  'use strict';                                                                                      // 1637\n                                                                                                     // 1638\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 1639\n};                                                                                                   // 1640\n                                                                                                     // 1641\n/**                                                                                                  // 1642\n * Handle mouseup.                                                                                   // 1643\n * @param {Event} event The event that fired.                                                        // 1644\n * @private                                                                                          // 1645\n */                                                                                                  // 1646\nMaterialRadio.prototype.onMouseup_ = function(event) {                                               // 1647\n  'use strict';                                                                                      // 1648\n                                                                                                     // 1649\n  this.blur_();                                                                                      // 1650\n};                                                                                                   // 1651\n                                                                                                     // 1652\n/**                                                                                                  // 1653\n * Update classes.                                                                                   // 1654\n * @param {HTMLElement} button The button whose classes we should update.                            // 1655\n * @param {HTMLElement} label The label whose classes we should update.                              // 1656\n * @private                                                                                          // 1657\n */                                                                                                  // 1658\nMaterialRadio.prototype.updateClasses_ = function(button, label) {                                   // 1659\n  'use strict';                                                                                      // 1660\n                                                                                                     // 1661\n  if (button.disabled) {                                                                             // 1662\n    label.classList.add(this.CssClasses_.IS_DISABLED);                                               // 1663\n  } else {                                                                                           // 1664\n    label.classList.remove(this.CssClasses_.IS_DISABLED);                                            // 1665\n  }                                                                                                  // 1666\n                                                                                                     // 1667\n  if (button.checked) {                                                                              // 1668\n    label.classList.add(this.CssClasses_.IS_CHECKED);                                                // 1669\n  } else {                                                                                           // 1670\n    label.classList.remove(this.CssClasses_.IS_CHECKED);                                             // 1671\n  }                                                                                                  // 1672\n};                                                                                                   // 1673\n                                                                                                     // 1674\n/**                                                                                                  // 1675\n * Add blur.                                                                                         // 1676\n * @private                                                                                          // 1677\n */                                                                                                  // 1678\nMaterialRadio.prototype.blur_ = function(event) {                                                    // 1679\n  'use strict';                                                                                      // 1680\n                                                                                                     // 1681\n  // TODO: figure out why there's a focus event being fired after our blur,                          // 1682\n  // so that we can avoid this hack.                                                                 // 1683\n  window.setTimeout(function() {                                                                     // 1684\n    this.btnElement_.blur();                                                                         // 1685\n  }.bind(this), this.Constant_.TINY_TIMEOUT);                                                        // 1686\n};                                                                                                   // 1687\n                                                                                                     // 1688\n// Public methods.                                                                                   // 1689\n                                                                                                     // 1690\n/**                                                                                                  // 1691\n * Disable radio.                                                                                    // 1692\n * @public                                                                                           // 1693\n */                                                                                                  // 1694\nMaterialRadio.prototype.disable = function() {                                                       // 1695\n  'use strict';                                                                                      // 1696\n                                                                                                     // 1697\n  this.btnElement_.disabled = true;                                                                  // 1698\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1699\n};                                                                                                   // 1700\n                                                                                                     // 1701\n/**                                                                                                  // 1702\n * Enable radio.                                                                                     // 1703\n * @public                                                                                           // 1704\n */                                                                                                  // 1705\nMaterialRadio.prototype.enable = function() {                                                        // 1706\n  'use strict';                                                                                      // 1707\n                                                                                                     // 1708\n  this.btnElement_.disabled = false;                                                                 // 1709\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1710\n};                                                                                                   // 1711\n                                                                                                     // 1712\n/**                                                                                                  // 1713\n * Check radio.                                                                                      // 1714\n * @public                                                                                           // 1715\n */                                                                                                  // 1716\nMaterialRadio.prototype.check = function() {                                                         // 1717\n  'use strict';                                                                                      // 1718\n                                                                                                     // 1719\n  this.btnElement_.checked = true;                                                                   // 1720\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1721\n};                                                                                                   // 1722\n                                                                                                     // 1723\n/**                                                                                                  // 1724\n * Uncheck radio.                                                                                    // 1725\n * @public                                                                                           // 1726\n */                                                                                                  // 1727\nMaterialRadio.prototype.uncheck = function() {                                                       // 1728\n  'use strict';                                                                                      // 1729\n                                                                                                     // 1730\n  this.btnElement_.checked = false;                                                                  // 1731\n  this.updateClasses_(this.btnElement_, this.element_);                                              // 1732\n};                                                                                                   // 1733\n                                                                                                     // 1734\n/**                                                                                                  // 1735\n * Initialize element.                                                                               // 1736\n */                                                                                                  // 1737\nMaterialRadio.prototype.init = function() {                                                          // 1738\n  'use strict';                                                                                      // 1739\n                                                                                                     // 1740\n  if (this.element_) {                                                                               // 1741\n    this.btnElement_ = this.element_.querySelector('.' +                                             // 1742\n        this.CssClasses_.RADIO_BTN);                                                                 // 1743\n                                                                                                     // 1744\n    var outerCircle = document.createElement('span');                                                // 1745\n    outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);                                  // 1746\n                                                                                                     // 1747\n    var innerCircle = document.createElement('span');                                                // 1748\n    innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);                                  // 1749\n                                                                                                     // 1750\n    this.element_.appendChild(outerCircle);                                                          // 1751\n    this.element_.appendChild(innerCircle);                                                          // 1752\n                                                                                                     // 1753\n    var rippleContainer;                                                                             // 1754\n    if (this.element_.classList.contains(                                                            // 1755\n        this.CssClasses_.RIPPLE_EFFECT)) {                                                           // 1756\n      this.element_.classList.add(                                                                   // 1757\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);                                                    // 1758\n      rippleContainer = document.createElement('span');                                              // 1759\n      rippleContainer.classList.add(                                                                 // 1760\n          this.CssClasses_.RIPPLE_CONTAINER);                                                        // 1761\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);                                 // 1762\n      rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);                                 // 1763\n      rippleContainer.addEventListener('mouseup', this.onMouseup_.bind(this));                       // 1764\n                                                                                                     // 1765\n      var ripple = document.createElement('span');                                                   // 1766\n      ripple.classList.add(this.CssClasses_.RIPPLE);                                                 // 1767\n                                                                                                     // 1768\n      rippleContainer.appendChild(ripple);                                                           // 1769\n      this.element_.appendChild(rippleContainer);                                                    // 1770\n    }                                                                                                // 1771\n                                                                                                     // 1772\n    this.btnElement_.addEventListener('change', this.onChange_.bind(this));                          // 1773\n    this.btnElement_.addEventListener('focus', this.onFocus_.bind(this));                            // 1774\n    this.btnElement_.addEventListener('blur', this.onBlur_.bind(this));                              // 1775\n    this.element_.addEventListener('mouseup', this.onMouseup_.bind(this));                           // 1776\n                                                                                                     // 1777\n    this.updateClasses_(this.btnElement_, this.element_);                                            // 1778\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 1779\n  }                                                                                                  // 1780\n};                                                                                                   // 1781\n                                                                                                     // 1782\n// The component registers itself. It can assume componentHandler is available                       // 1783\n// in the global scope.                                                                              // 1784\ncomponentHandler.register({                                                                          // 1785\n  constructor: MaterialRadio,                                                                        // 1786\n  classAsString: 'MaterialRadio',                                                                    // 1787\n  cssClass: 'mdl-js-radio'                                                                           // 1788\n});                                                                                                  // 1789\n                                                                                                     // 1790\n/**                                                                                                  // 1791\n * @license                                                                                          // 1792\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 1793\n *                                                                                                   // 1794\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 1795\n * you may not use this file except in compliance with the License.                                  // 1796\n * You may obtain a copy of the License at                                                           // 1797\n *                                                                                                   // 1798\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 1799\n *                                                                                                   // 1800\n * Unless required by applicable law or agreed to in writing, software                               // 1801\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 1802\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 1803\n * See the License for the specific language governing permissions and                               // 1804\n * limitations under the License.                                                                    // 1805\n */                                                                                                  // 1806\n                                                                                                     // 1807\n/**                                                                                                  // 1808\n * Class constructor for Slider MDL component.                                                       // 1809\n * Implements MDL component design pattern defined at:                                               // 1810\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 1811\n * @param {HTMLElement} element The element that will be upgraded.                                   // 1812\n */                                                                                                  // 1813\nfunction MaterialSlider(element) {                                                                   // 1814\n  'use strict';                                                                                      // 1815\n                                                                                                     // 1816\n  this.element_ = element;                                                                           // 1817\n  // Browser feature detection.                                                                      // 1818\n  this.isIE_ = window.navigator.msPointerEnabled;                                                    // 1819\n  // Initialize instance.                                                                            // 1820\n  this.init();                                                                                       // 1821\n}                                                                                                    // 1822\n                                                                                                     // 1823\n/**                                                                                                  // 1824\n * Store constants in one place so they can be updated easily.                                       // 1825\n * @enum {string | number}                                                                           // 1826\n * @private                                                                                          // 1827\n */                                                                                                  // 1828\nMaterialSlider.prototype.Constant_ = {                                                               // 1829\n  // None for now.                                                                                   // 1830\n};                                                                                                   // 1831\n                                                                                                     // 1832\n/**                                                                                                  // 1833\n * Store strings for class names defined by this component that are used in                          // 1834\n * JavaScript. This allows us to simply change it in one place should we                             // 1835\n * decide to modify at a later date.                                                                 // 1836\n * @enum {string}                                                                                    // 1837\n * @private                                                                                          // 1838\n */                                                                                                  // 1839\nMaterialSlider.prototype.CssClasses_ = {                                                             // 1840\n  IE_CONTAINER: 'mdl-slider__ie-container',                                                          // 1841\n  SLIDER_CONTAINER: 'mdl-slider__container',                                                         // 1842\n  BACKGROUND_FLEX: 'mdl-slider__background-flex',                                                    // 1843\n  BACKGROUND_LOWER: 'mdl-slider__background-lower',                                                  // 1844\n  BACKGROUND_UPPER: 'mdl-slider__background-upper',                                                  // 1845\n  IS_LOWEST_VALUE: 'is-lowest-value',                                                                // 1846\n  IS_UPGRADED: 'is-upgraded'                                                                         // 1847\n};                                                                                                   // 1848\n                                                                                                     // 1849\n/**                                                                                                  // 1850\n * Handle input on element.                                                                          // 1851\n * @param {Event} event The event that fired.                                                        // 1852\n * @private                                                                                          // 1853\n */                                                                                                  // 1854\nMaterialSlider.prototype.onInput_ = function(event) {                                                // 1855\n  'use strict';                                                                                      // 1856\n                                                                                                     // 1857\n  this.updateValueStyles_();                                                                         // 1858\n};                                                                                                   // 1859\n                                                                                                     // 1860\n/**                                                                                                  // 1861\n * Handle change on element.                                                                         // 1862\n * @param {Event} event The event that fired.                                                        // 1863\n * @private                                                                                          // 1864\n */                                                                                                  // 1865\nMaterialSlider.prototype.onChange_ = function(event) {                                               // 1866\n  'use strict';                                                                                      // 1867\n                                                                                                     // 1868\n  this.updateValueStyles_();                                                                         // 1869\n};                                                                                                   // 1870\n                                                                                                     // 1871\n/**                                                                                                  // 1872\n * Handle mouseup on element.                                                                        // 1873\n * @param {Event} event The event that fired.                                                        // 1874\n * @private                                                                                          // 1875\n */                                                                                                  // 1876\nMaterialSlider.prototype.onMouseUp_ = function(event) {                                              // 1877\n  'use strict';                                                                                      // 1878\n                                                                                                     // 1879\n  event.target.blur();                                                                               // 1880\n};                                                                                                   // 1881\n                                                                                                     // 1882\n/**                                                                                                  // 1883\n * Handle mousedown on container element.                                                            // 1884\n * This handler is purpose is to not require the use to click                                        // 1885\n * exactly on the 2px slider element, as FireFox seems to be very                                    // 1886\n * strict about this.                                                                                // 1887\n * @param {Event} event The event that fired.                                                        // 1888\n * @private                                                                                          // 1889\n */                                                                                                  // 1890\nMaterialSlider.prototype.onContainerMouseDown_ = function(event) {                                   // 1891\n  'use strict';                                                                                      // 1892\n                                                                                                     // 1893\n  // If this click is not on the parent element (but rather some child)                              // 1894\n  // ignore. It may still bubble up.                                                                 // 1895\n  if (event.target !== this.element_.parentElement) {                                                // 1896\n    return;                                                                                          // 1897\n  }                                                                                                  // 1898\n                                                                                                     // 1899\n  // Discard the original event and create a new event that                                          // 1900\n  // is on the slider element.                                                                       // 1901\n  event.preventDefault();                                                                            // 1902\n  var newEvent = new MouseEvent('mousedown', {                                                       // 1903\n    target: event.target,                                                                            // 1904\n    buttons: event.buttons,                                                                          // 1905\n    clientX: event.clientX,                                                                          // 1906\n    clientY: this.element_.getBoundingClientRect().y                                                 // 1907\n  });                                                                                                // 1908\n  this.element_.dispatchEvent(newEvent);                                                             // 1909\n};                                                                                                   // 1910\n                                                                                                     // 1911\n/**                                                                                                  // 1912\n * Handle updating of values.                                                                        // 1913\n * @param {Event} event The event that fired.                                                        // 1914\n * @private                                                                                          // 1915\n */                                                                                                  // 1916\nMaterialSlider.prototype.updateValueStyles_ = function(event) {                                      // 1917\n  'use strict';                                                                                      // 1918\n                                                                                                     // 1919\n  // Calculate and apply percentages to div structure behind slider.                                 // 1920\n  var fraction = (this.element_.value - this.element_.min) /                                         // 1921\n      (this.element_.max - this.element_.min);                                                       // 1922\n                                                                                                     // 1923\n  if (fraction === 0) {                                                                              // 1924\n    this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);                                   // 1925\n  } else {                                                                                           // 1926\n    this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);                                // 1927\n  }                                                                                                  // 1928\n                                                                                                     // 1929\n  if (!this.isIE_) {                                                                                 // 1930\n    this.backgroundLower_.style.flex = fraction;                                                     // 1931\n    this.backgroundLower_.style.webkitFlex = fraction;                                               // 1932\n    this.backgroundUpper_.style.flex = 1 - fraction;                                                 // 1933\n    this.backgroundUpper_.style.webkitFlex = 1 - fraction;                                           // 1934\n  }                                                                                                  // 1935\n};                                                                                                   // 1936\n                                                                                                     // 1937\n// Public methods.                                                                                   // 1938\n                                                                                                     // 1939\n/**                                                                                                  // 1940\n * Disable slider.                                                                                   // 1941\n * @public                                                                                           // 1942\n */                                                                                                  // 1943\nMaterialSlider.prototype.disable = function() {                                                      // 1944\n  'use strict';                                                                                      // 1945\n                                                                                                     // 1946\n  this.element_.disabled = true;                                                                     // 1947\n};                                                                                                   // 1948\n                                                                                                     // 1949\n/**                                                                                                  // 1950\n * Enable slider.                                                                                    // 1951\n * @public                                                                                           // 1952\n */                                                                                                  // 1953\nMaterialSlider.prototype.enable = function() {                                                       // 1954\n  'use strict';                                                                                      // 1955\n                                                                                                     // 1956\n  this.element_.disabled = false;                                                                    // 1957\n};                                                                                                   // 1958\n                                                                                                     // 1959\n/**                                                                                                  // 1960\n * Update slider value.                                                                              // 1961\n * @param {Number} value The value to which to set the control (optional).                           // 1962\n * @public                                                                                           // 1963\n */                                                                                                  // 1964\nMaterialSlider.prototype.change = function(value) {                                                  // 1965\n  'use strict';                                                                                      // 1966\n                                                                                                     // 1967\n  if (value) {                                                                                       // 1968\n    this.element_.value = value;                                                                     // 1969\n  }                                                                                                  // 1970\n  this.updateValueStyles_();                                                                         // 1971\n};                                                                                                   // 1972\n                                                                                                     // 1973\n/**                                                                                                  // 1974\n * Initialize element.                                                                               // 1975\n */                                                                                                  // 1976\nMaterialSlider.prototype.init = function() {                                                         // 1977\n  'use strict';                                                                                      // 1978\n                                                                                                     // 1979\n  if (this.element_) {                                                                               // 1980\n    if (this.isIE_) {                                                                                // 1981\n      // Since we need to specify a very large height in IE due to                                   // 1982\n      // implementation limitations, we add a parent here that trims it down to                      // 1983\n      // a reasonable size.                                                                          // 1984\n      var containerIE = document.createElement('div');                                               // 1985\n      containerIE.classList.add(this.CssClasses_.IE_CONTAINER);                                      // 1986\n      this.element_.parentElement.insertBefore(containerIE, this.element_);                          // 1987\n      this.element_.parentElement.removeChild(this.element_);                                        // 1988\n      containerIE.appendChild(this.element_);                                                        // 1989\n    } else {                                                                                         // 1990\n      // For non-IE browsers, we need a div structure that sits behind the                           // 1991\n      // slider and allows us to style the left and right sides of it with                           // 1992\n      // different colors.                                                                           // 1993\n      var container = document.createElement('div');                                                 // 1994\n      container.classList.add(this.CssClasses_.SLIDER_CONTAINER);                                    // 1995\n      this.element_.parentElement.insertBefore(container, this.element_);                            // 1996\n      this.element_.parentElement.removeChild(this.element_);                                        // 1997\n      container.appendChild(this.element_);                                                          // 1998\n      var backgroundFlex = document.createElement('div');                                            // 1999\n      backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);                                // 2000\n      container.appendChild(backgroundFlex);                                                         // 2001\n      this.backgroundLower_ = document.createElement('div');                                         // 2002\n      this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);                        // 2003\n      backgroundFlex.appendChild(this.backgroundLower_);                                             // 2004\n      this.backgroundUpper_ = document.createElement('div');                                         // 2005\n      this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);                        // 2006\n      backgroundFlex.appendChild(this.backgroundUpper_);                                             // 2007\n    }                                                                                                // 2008\n                                                                                                     // 2009\n    this.boundInputHandler = this.onInput_.bind(this);                                               // 2010\n    this.boundChangeHandler = this.onChange_.bind(this);                                             // 2011\n    this.boundMouseUpHandler = this.onMouseUp_.bind(this);                                           // 2012\n    this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);                     // 2013\n    this.element_.addEventListener('input', this.boundInputHandler);                                 // 2014\n    this.element_.addEventListener('change', this.boundChangeHandler);                               // 2015\n    this.element_.addEventListener('mouseup', this.boundMouseUpHandler);                             // 2016\n    this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);  // 2017\n                                                                                                     // 2018\n    this.updateValueStyles_();                                                                       // 2019\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 2020\n  }                                                                                                  // 2021\n};                                                                                                   // 2022\n                                                                                                     // 2023\n/*                                                                                                   // 2024\n* Downgrade the component                                                                            // 2025\n*/                                                                                                   // 2026\nMaterialSlider.prototype.mdlDowngrade_ = function() {                                                // 2027\n  'use strict';                                                                                      // 2028\n  this.element_.removeEventListener('input', this.boundInputHandler);                                // 2029\n  this.element_.removeEventListener('change', this.boundChangeHandler);                              // 2030\n  this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);                            // 2031\n  this.element_.parentElement.removeEventListener('mousedown', this.boundContainerMouseDownHandler);\n};                                                                                                   // 2033\n                                                                                                     // 2034\n// The component registers itself. It can assume componentHandler is available                       // 2035\n// in the global scope.                                                                              // 2036\ncomponentHandler.register({                                                                          // 2037\n  constructor: MaterialSlider,                                                                       // 2038\n  classAsString: 'MaterialSlider',                                                                   // 2039\n  cssClass: 'mdl-js-slider'                                                                          // 2040\n});                                                                                                  // 2041\n                                                                                                     // 2042\n/**                                                                                                  // 2043\n * @license                                                                                          // 2044\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2045\n *                                                                                                   // 2046\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2047\n * you may not use this file except in compliance with the License.                                  // 2048\n * You may obtain a copy of the License at                                                           // 2049\n *                                                                                                   // 2050\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2051\n *                                                                                                   // 2052\n * Unless required by applicable law or agreed to in writing, software                               // 2053\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2054\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2055\n * See the License for the specific language governing permissions and                               // 2056\n * limitations under the License.                                                                    // 2057\n */                                                                                                  // 2058\n                                                                                                     // 2059\n/**                                                                                                  // 2060\n * Class constructor for Spinner MDL component.                                                      // 2061\n * Implements MDL component design pattern defined at:                                               // 2062\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2063\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2064\n * @constructor                                                                                      // 2065\n */                                                                                                  // 2066\nfunction MaterialSpinner(element) {                                                                  // 2067\n  'use strict';                                                                                      // 2068\n                                                                                                     // 2069\n  this.element_ = element;                                                                           // 2070\n                                                                                                     // 2071\n  // Initialize instance.                                                                            // 2072\n  this.init();                                                                                       // 2073\n}                                                                                                    // 2074\n                                                                                                     // 2075\n/**                                                                                                  // 2076\n * Store constants in one place so they can be updated easily.                                       // 2077\n * @enum {string | number}                                                                           // 2078\n * @private                                                                                          // 2079\n */                                                                                                  // 2080\nMaterialSpinner.prototype.Constant_ = {                                                              // 2081\n  MDL_SPINNER_LAYER_COUNT: 4                                                                         // 2082\n};                                                                                                   // 2083\n                                                                                                     // 2084\n/**                                                                                                  // 2085\n * Store strings for class names defined by this component that are used in                          // 2086\n * JavaScript. This allows us to simply change it in one place should we                             // 2087\n * decide to modify at a later date.                                                                 // 2088\n * @enum {string}                                                                                    // 2089\n * @private                                                                                          // 2090\n */                                                                                                  // 2091\nMaterialSpinner.prototype.CssClasses_ = {                                                            // 2092\n  MDL_SPINNER_LAYER: 'mdl-spinner__layer',                                                           // 2093\n  MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',                                         // 2094\n  MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',                                                         // 2095\n  MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',                                                   // 2096\n  MDL_SPINNER_LEFT: 'mdl-spinner__left',                                                             // 2097\n  MDL_SPINNER_RIGHT: 'mdl-spinner__right'                                                            // 2098\n};                                                                                                   // 2099\n                                                                                                     // 2100\n/**                                                                                                  // 2101\n* Auxiliary method to create a spinner layer.                                                        // 2102\n*/                                                                                                   // 2103\nMaterialSpinner.prototype.createLayer = function(index) {                                            // 2104\n  'use strict';                                                                                      // 2105\n                                                                                                     // 2106\n  var layer = document.createElement('div');                                                         // 2107\n  layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);                                           // 2108\n  layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);                             // 2109\n                                                                                                     // 2110\n  var leftClipper = document.createElement('div');                                                   // 2111\n  leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);                            // 2112\n  leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);                                      // 2113\n                                                                                                     // 2114\n  var gapPatch = document.createElement('div');                                                      // 2115\n  gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);                                    // 2116\n                                                                                                     // 2117\n  var rightClipper = document.createElement('div');                                                  // 2118\n  rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);                           // 2119\n  rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);                                    // 2120\n                                                                                                     // 2121\n  var circleOwners = [leftClipper, gapPatch, rightClipper];                                          // 2122\n                                                                                                     // 2123\n  for (var i = 0; i < circleOwners.length; i++) {                                                    // 2124\n    var circle = document.createElement('div');                                                      // 2125\n    circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);                                       // 2126\n    circleOwners[i].appendChild(circle);                                                             // 2127\n  }                                                                                                  // 2128\n                                                                                                     // 2129\n  layer.appendChild(leftClipper);                                                                    // 2130\n  layer.appendChild(gapPatch);                                                                       // 2131\n  layer.appendChild(rightClipper);                                                                   // 2132\n                                                                                                     // 2133\n  this.element_.appendChild(layer);                                                                  // 2134\n};                                                                                                   // 2135\n                                                                                                     // 2136\n/**                                                                                                  // 2137\n* Stops the spinner animation.                                                                       // 2138\n* Public method for users who need to stop the spinner for any reason.                               // 2139\n* @public                                                                                            // 2140\n*/                                                                                                   // 2141\nMaterialSpinner.prototype.stop = function() {                                                        // 2142\n  'use strict';                                                                                      // 2143\n                                                                                                     // 2144\n  this.element_.classList.remove('is-active');                                                       // 2145\n};                                                                                                   // 2146\n                                                                                                     // 2147\n/**                                                                                                  // 2148\n* Starts the spinner animation.                                                                      // 2149\n* Public method for users who need to manually start the spinner for any reason                      // 2150\n* (instead of just adding the 'is-active' class to their markup).                                    // 2151\n* @public                                                                                            // 2152\n*/                                                                                                   // 2153\nMaterialSpinner.prototype.start = function() {                                                       // 2154\n  'use strict';                                                                                      // 2155\n                                                                                                     // 2156\n  this.element_.classList.add('is-active');                                                          // 2157\n};                                                                                                   // 2158\n                                                                                                     // 2159\n/**                                                                                                  // 2160\n * Initialize element.                                                                               // 2161\n */                                                                                                  // 2162\nMaterialSpinner.prototype.init = function() {                                                        // 2163\n  'use strict';                                                                                      // 2164\n                                                                                                     // 2165\n  if (this.element_) {                                                                               // 2166\n    for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {                              // 2167\n      this.createLayer(i);                                                                           // 2168\n    }                                                                                                // 2169\n                                                                                                     // 2170\n    this.element_.classList.add('is-upgraded');                                                      // 2171\n  }                                                                                                  // 2172\n};                                                                                                   // 2173\n                                                                                                     // 2174\n// The component registers itself. It can assume componentHandler is available                       // 2175\n// in the global scope.                                                                              // 2176\ncomponentHandler.register({                                                                          // 2177\n  constructor: MaterialSpinner,                                                                      // 2178\n  classAsString: 'MaterialSpinner',                                                                  // 2179\n  cssClass: 'mdl-js-spinner'                                                                         // 2180\n});                                                                                                  // 2181\n                                                                                                     // 2182\n/**                                                                                                  // 2183\n * @license                                                                                          // 2184\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2185\n *                                                                                                   // 2186\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2187\n * you may not use this file except in compliance with the License.                                  // 2188\n * You may obtain a copy of the License at                                                           // 2189\n *                                                                                                   // 2190\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2191\n *                                                                                                   // 2192\n * Unless required by applicable law or agreed to in writing, software                               // 2193\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2194\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2195\n * See the License for the specific language governing permissions and                               // 2196\n * limitations under the License.                                                                    // 2197\n */                                                                                                  // 2198\n                                                                                                     // 2199\n/**                                                                                                  // 2200\n * Class constructor for Checkbox MDL component.                                                     // 2201\n * Implements MDL component design pattern defined at:                                               // 2202\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2203\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2204\n */                                                                                                  // 2205\nfunction MaterialSwitch(element) {                                                                   // 2206\n  'use strict';                                                                                      // 2207\n                                                                                                     // 2208\n  this.element_ = element;                                                                           // 2209\n                                                                                                     // 2210\n  // Initialize instance.                                                                            // 2211\n  this.init();                                                                                       // 2212\n}                                                                                                    // 2213\n                                                                                                     // 2214\n/**                                                                                                  // 2215\n * Store constants in one place so they can be updated easily.                                       // 2216\n * @enum {string | number}                                                                           // 2217\n * @private                                                                                          // 2218\n */                                                                                                  // 2219\nMaterialSwitch.prototype.Constant_ = {                                                               // 2220\n  TINY_TIMEOUT: 0.001                                                                                // 2221\n};                                                                                                   // 2222\n                                                                                                     // 2223\n/**                                                                                                  // 2224\n * Store strings for class names defined by this component that are used in                          // 2225\n * JavaScript. This allows us to simply change it in one place should we                             // 2226\n * decide to modify at a later date.                                                                 // 2227\n * @enum {string}                                                                                    // 2228\n * @private                                                                                          // 2229\n */                                                                                                  // 2230\nMaterialSwitch.prototype.CssClasses_ = {                                                             // 2231\n  INPUT: 'mdl-switch__input',                                                                        // 2232\n  TRACK: 'mdl-switch__track',                                                                        // 2233\n  THUMB: 'mdl-switch__thumb',                                                                        // 2234\n  FOCUS_HELPER: 'mdl-switch__focus-helper',                                                          // 2235\n  RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                             // 2236\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 2237\n  RIPPLE_CONTAINER: 'mdl-switch__ripple-container',                                                  // 2238\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 2239\n  RIPPLE: 'mdl-ripple',                                                                              // 2240\n  IS_FOCUSED: 'is-focused',                                                                          // 2241\n  IS_DISABLED: 'is-disabled',                                                                        // 2242\n  IS_CHECKED: 'is-checked'                                                                           // 2243\n};                                                                                                   // 2244\n                                                                                                     // 2245\n/**                                                                                                  // 2246\n * Handle change of state.                                                                           // 2247\n * @param {Event} event The event that fired.                                                        // 2248\n * @private                                                                                          // 2249\n */                                                                                                  // 2250\nMaterialSwitch.prototype.onChange_ = function(event) {                                               // 2251\n  'use strict';                                                                                      // 2252\n                                                                                                     // 2253\n  this.updateClasses_();                                                                             // 2254\n};                                                                                                   // 2255\n                                                                                                     // 2256\n/**                                                                                                  // 2257\n * Handle focus of element.                                                                          // 2258\n * @param {Event} event The event that fired.                                                        // 2259\n * @private                                                                                          // 2260\n */                                                                                                  // 2261\nMaterialSwitch.prototype.onFocus_ = function(event) {                                                // 2262\n  'use strict';                                                                                      // 2263\n                                                                                                     // 2264\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 2265\n};                                                                                                   // 2266\n                                                                                                     // 2267\n/**                                                                                                  // 2268\n * Handle lost focus of element.                                                                     // 2269\n * @param {Event} event The event that fired.                                                        // 2270\n * @private                                                                                          // 2271\n */                                                                                                  // 2272\nMaterialSwitch.prototype.onBlur_ = function(event) {                                                 // 2273\n  'use strict';                                                                                      // 2274\n                                                                                                     // 2275\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 2276\n};                                                                                                   // 2277\n                                                                                                     // 2278\n/**                                                                                                  // 2279\n * Handle mouseup.                                                                                   // 2280\n * @param {Event} event The event that fired.                                                        // 2281\n * @private                                                                                          // 2282\n */                                                                                                  // 2283\nMaterialSwitch.prototype.onMouseUp_ = function(event) {                                              // 2284\n  'use strict';                                                                                      // 2285\n                                                                                                     // 2286\n  this.blur_();                                                                                      // 2287\n};                                                                                                   // 2288\n                                                                                                     // 2289\n/**                                                                                                  // 2290\n * Handle class updates.                                                                             // 2291\n * @param {HTMLElement} button The button whose classes we should update.                            // 2292\n * @param {HTMLElement} label The label whose classes we should update.                              // 2293\n * @private                                                                                          // 2294\n */                                                                                                  // 2295\nMaterialSwitch.prototype.updateClasses_ = function() {                                               // 2296\n  'use strict';                                                                                      // 2297\n                                                                                                     // 2298\n  if (this.inputElement_.disabled) {                                                                 // 2299\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);                                       // 2300\n  } else {                                                                                           // 2301\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);                                    // 2302\n  }                                                                                                  // 2303\n                                                                                                     // 2304\n  if (this.inputElement_.checked) {                                                                  // 2305\n    this.element_.classList.add(this.CssClasses_.IS_CHECKED);                                        // 2306\n  } else {                                                                                           // 2307\n    this.element_.classList.remove(this.CssClasses_.IS_CHECKED);                                     // 2308\n  }                                                                                                  // 2309\n};                                                                                                   // 2310\n                                                                                                     // 2311\n/**                                                                                                  // 2312\n * Add blur.                                                                                         // 2313\n * @private                                                                                          // 2314\n */                                                                                                  // 2315\nMaterialSwitch.prototype.blur_ = function(event) {                                                   // 2316\n  'use strict';                                                                                      // 2317\n                                                                                                     // 2318\n  // TODO: figure out why there's a focus event being fired after our blur,                          // 2319\n  // so that we can avoid this hack.                                                                 // 2320\n  window.setTimeout(function() {                                                                     // 2321\n    this.inputElement_.blur();                                                                       // 2322\n  }.bind(this), this.Constant_.TINY_TIMEOUT);                                                        // 2323\n};                                                                                                   // 2324\n                                                                                                     // 2325\n// Public methods.                                                                                   // 2326\n                                                                                                     // 2327\n/**                                                                                                  // 2328\n * Disable switch.                                                                                   // 2329\n * @public                                                                                           // 2330\n */                                                                                                  // 2331\nMaterialSwitch.prototype.disable = function() {                                                      // 2332\n  'use strict';                                                                                      // 2333\n                                                                                                     // 2334\n  this.inputElement_.disabled = true;                                                                // 2335\n  this.updateClasses_();                                                                             // 2336\n};                                                                                                   // 2337\n                                                                                                     // 2338\n/**                                                                                                  // 2339\n * Enable switch.                                                                                    // 2340\n * @public                                                                                           // 2341\n */                                                                                                  // 2342\nMaterialSwitch.prototype.enable = function() {                                                       // 2343\n  'use strict';                                                                                      // 2344\n                                                                                                     // 2345\n  this.inputElement_.disabled = false;                                                               // 2346\n  this.updateClasses_();                                                                             // 2347\n};                                                                                                   // 2348\n                                                                                                     // 2349\n/**                                                                                                  // 2350\n * Activate switch.                                                                                  // 2351\n * @public                                                                                           // 2352\n */                                                                                                  // 2353\nMaterialSwitch.prototype.on = function() {                                                           // 2354\n  'use strict';                                                                                      // 2355\n                                                                                                     // 2356\n  this.inputElement_.checked = true;                                                                 // 2357\n  this.updateClasses_();                                                                             // 2358\n};                                                                                                   // 2359\n                                                                                                     // 2360\n/**                                                                                                  // 2361\n * Deactivate switch.                                                                                // 2362\n * @public                                                                                           // 2363\n */                                                                                                  // 2364\nMaterialSwitch.prototype.off = function() {                                                          // 2365\n  'use strict';                                                                                      // 2366\n                                                                                                     // 2367\n  this.inputElement_.checked = false;                                                                // 2368\n  this.updateClasses_();                                                                             // 2369\n};                                                                                                   // 2370\n                                                                                                     // 2371\n/**                                                                                                  // 2372\n * Initialize element.                                                                               // 2373\n */                                                                                                  // 2374\nMaterialSwitch.prototype.init = function() {                                                         // 2375\n  'use strict';                                                                                      // 2376\n                                                                                                     // 2377\n  if (this.element_) {                                                                               // 2378\n    this.inputElement_ = this.element_.querySelector('.' +                                           // 2379\n        this.CssClasses_.INPUT);                                                                     // 2380\n                                                                                                     // 2381\n    var track = document.createElement('div');                                                       // 2382\n    track.classList.add(this.CssClasses_.TRACK);                                                     // 2383\n                                                                                                     // 2384\n    var thumb = document.createElement('div');                                                       // 2385\n    thumb.classList.add(this.CssClasses_.THUMB);                                                     // 2386\n                                                                                                     // 2387\n    var focusHelper = document.createElement('span');                                                // 2388\n    focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);                                        // 2389\n                                                                                                     // 2390\n    thumb.appendChild(focusHelper);                                                                  // 2391\n                                                                                                     // 2392\n    this.element_.appendChild(track);                                                                // 2393\n    this.element_.appendChild(thumb);                                                                // 2394\n                                                                                                     // 2395\n    this.boundMouseUpHandler = this.onMouseUp_.bind(this);                                           // 2396\n                                                                                                     // 2397\n    if (this.element_.classList.contains(                                                            // 2398\n        this.CssClasses_.RIPPLE_EFFECT)) {                                                           // 2399\n      this.element_.classList.add(                                                                   // 2400\n          this.CssClasses_.RIPPLE_IGNORE_EVENTS);                                                    // 2401\n      this.rippleContainerElement_ = document.createElement('span');                                 // 2402\n      this.rippleContainerElement_.classList.add(                                                    // 2403\n          this.CssClasses_.RIPPLE_CONTAINER);                                                        // 2404\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);                    // 2405\n      this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);                    // 2406\n      this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);            // 2407\n                                                                                                     // 2408\n      var ripple = document.createElement('span');                                                   // 2409\n      ripple.classList.add(this.CssClasses_.RIPPLE);                                                 // 2410\n                                                                                                     // 2411\n      this.rippleContainerElement_.appendChild(ripple);                                              // 2412\n      this.element_.appendChild(this.rippleContainerElement_);                                       // 2413\n    }                                                                                                // 2414\n                                                                                                     // 2415\n    this.boundChangeHandler = this.onChange_.bind(this);                                             // 2416\n    this.boundFocusHandler = this.onFocus_.bind(this);                                               // 2417\n    this.boundBlurHandler = this.onBlur_.bind(this);                                                 // 2418\n                                                                                                     // 2419\n    this.inputElement_.addEventListener('change', this.boundChangeHandler);                          // 2420\n    this.inputElement_.addEventListener('focus', this.boundFocusHandler);                            // 2421\n    this.inputElement_.addEventListener('blur', this.boundBlurHandler);                              // 2422\n    this.element_.addEventListener('mouseup', this.boundMouseUpHandler);                             // 2423\n                                                                                                     // 2424\n    this.updateClasses_();                                                                           // 2425\n    this.element_.classList.add('is-upgraded');                                                      // 2426\n  }                                                                                                  // 2427\n};                                                                                                   // 2428\n                                                                                                     // 2429\n/*                                                                                                   // 2430\n* Downgrade the component.                                                                           // 2431\n*/                                                                                                   // 2432\nMaterialSwitch.prototype.mdlDowngrade_ = function() {                                                // 2433\n  'use strict';                                                                                      // 2434\n  if (this.rippleContainerElement_) {                                                                // 2435\n    this.rippleContainerElement_.removeEventListener('mouseup', this.boundMouseUpHandler);           // 2436\n  }                                                                                                  // 2437\n  this.inputElement_.removeEventListener('change', this.boundChangeHandler);                         // 2438\n  this.inputElement_.removeEventListener('focus', this.boundFocusHandler);                           // 2439\n  this.inputElement_.removeEventListener('blur', this.boundBlurHandler);                             // 2440\n  this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);                            // 2441\n};                                                                                                   // 2442\n                                                                                                     // 2443\n// The component registers itself. It can assume componentHandler is available                       // 2444\n// in the global scope.                                                                              // 2445\ncomponentHandler.register({                                                                          // 2446\n  constructor: MaterialSwitch,                                                                       // 2447\n  classAsString: 'MaterialSwitch',                                                                   // 2448\n  cssClass: 'mdl-js-switch'                                                                          // 2449\n});                                                                                                  // 2450\n                                                                                                     // 2451\n/**                                                                                                  // 2452\n * @license                                                                                          // 2453\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2454\n *                                                                                                   // 2455\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2456\n * you may not use this file except in compliance with the License.                                  // 2457\n * You may obtain a copy of the License at                                                           // 2458\n *                                                                                                   // 2459\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2460\n *                                                                                                   // 2461\n * Unless required by applicable law or agreed to in writing, software                               // 2462\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2463\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2464\n * See the License for the specific language governing permissions and                               // 2465\n * limitations under the License.                                                                    // 2466\n */                                                                                                  // 2467\n                                                                                                     // 2468\n/**                                                                                                  // 2469\n * Class constructor for Tabs MDL component.                                                         // 2470\n * Implements MDL component design pattern defined at:                                               // 2471\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2472\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2473\n */                                                                                                  // 2474\nfunction MaterialTabs(element) {                                                                     // 2475\n  'use strict';                                                                                      // 2476\n                                                                                                     // 2477\n  // Stores the HTML element.                                                                        // 2478\n  this.element_ = element;                                                                           // 2479\n                                                                                                     // 2480\n  // Initialize instance.                                                                            // 2481\n  this.init();                                                                                       // 2482\n}                                                                                                    // 2483\n                                                                                                     // 2484\n/**                                                                                                  // 2485\n * Store constants in one place so they can be updated easily.                                       // 2486\n * @enum {string}                                                                                    // 2487\n * @private                                                                                          // 2488\n */                                                                                                  // 2489\nMaterialTabs.prototype.Constant_ = {                                                                 // 2490\n  // None at the moment.                                                                             // 2491\n};                                                                                                   // 2492\n                                                                                                     // 2493\n/**                                                                                                  // 2494\n * Store strings for class names defined by this component that are used in                          // 2495\n * JavaScript. This allows us to simply change it in one place should we                             // 2496\n * decide to modify at a later date.                                                                 // 2497\n * @enum {string}                                                                                    // 2498\n * @private                                                                                          // 2499\n */                                                                                                  // 2500\nMaterialTabs.prototype.CssClasses_ = {                                                               // 2501\n  TAB_CLASS: 'mdl-tabs__tab',                                                                        // 2502\n  PANEL_CLASS: 'mdl-tabs__panel',                                                                    // 2503\n  ACTIVE_CLASS: 'is-active',                                                                         // 2504\n  UPGRADED_CLASS: 'is-upgraded',                                                                     // 2505\n                                                                                                     // 2506\n  MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                      // 2507\n  MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',                                                // 2508\n  MDL_RIPPLE: 'mdl-ripple',                                                                          // 2509\n  MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'                          // 2510\n};                                                                                                   // 2511\n                                                                                                     // 2512\n/**                                                                                                  // 2513\n * Handle clicks to a tabs component                                                                 // 2514\n * @private                                                                                          // 2515\n */                                                                                                  // 2516\nMaterialTabs.prototype.initTabs_ = function(e) {                                                     // 2517\n  'use strict';                                                                                      // 2518\n                                                                                                     // 2519\n  if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {                     // 2520\n    this.element_.classList.add(                                                                     // 2521\n      this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);                                          // 2522\n  }                                                                                                  // 2523\n                                                                                                     // 2524\n  // Select element tabs, document panels                                                            // 2525\n  this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);                     // 2526\n  this.panels_ =                                                                                     // 2527\n      this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);                            // 2528\n                                                                                                     // 2529\n  // Create new tabs for each tab element                                                            // 2530\n  for (var i = 0; i < this.tabs_.length; i++) {                                                      // 2531\n    new MaterialTab(this.tabs_[i], this);                                                            // 2532\n  }                                                                                                  // 2533\n                                                                                                     // 2534\n  this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);                                      // 2535\n};                                                                                                   // 2536\n                                                                                                     // 2537\n/**                                                                                                  // 2538\n * Reset tab state, dropping active classes                                                          // 2539\n * @private                                                                                          // 2540\n */                                                                                                  // 2541\nMaterialTabs.prototype.resetTabState_ = function() {                                                 // 2542\n  'use strict';                                                                                      // 2543\n                                                                                                     // 2544\n  for (var k = 0; k < this.tabs_.length; k++) {                                                      // 2545\n    this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);                                   // 2546\n  }                                                                                                  // 2547\n};                                                                                                   // 2548\n                                                                                                     // 2549\n/**                                                                                                  // 2550\n * Reset panel state, droping active classes                                                         // 2551\n * @private                                                                                          // 2552\n */                                                                                                  // 2553\nMaterialTabs.prototype.resetPanelState_ = function() {                                               // 2554\n  'use strict';                                                                                      // 2555\n                                                                                                     // 2556\n  for (var j = 0; j < this.panels_.length; j++) {                                                    // 2557\n    this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);                                 // 2558\n  }                                                                                                  // 2559\n};                                                                                                   // 2560\n                                                                                                     // 2561\nMaterialTabs.prototype.init = function() {                                                           // 2562\n  'use strict';                                                                                      // 2563\n                                                                                                     // 2564\n  if (this.element_) {                                                                               // 2565\n    this.initTabs_();                                                                                // 2566\n  }                                                                                                  // 2567\n};                                                                                                   // 2568\n                                                                                                     // 2569\nfunction MaterialTab(tab, ctx) {                                                                     // 2570\n  'use strict';                                                                                      // 2571\n                                                                                                     // 2572\n  if (tab) {                                                                                         // 2573\n    if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {                     // 2574\n      var rippleContainer = document.createElement('span');                                          // 2575\n      rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);                           // 2576\n      rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);                           // 2577\n      var ripple = document.createElement('span');                                                   // 2578\n      ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);                                              // 2579\n      rippleContainer.appendChild(ripple);                                                           // 2580\n      tab.appendChild(rippleContainer);                                                              // 2581\n    }                                                                                                // 2582\n                                                                                                     // 2583\n    tab.addEventListener('click', function(e) {                                                      // 2584\n      e.preventDefault();                                                                            // 2585\n      var href = tab.href.split('#')[1];                                                             // 2586\n      var panel = ctx.element_.querySelector('#' + href);                                            // 2587\n      ctx.resetTabState_();                                                                          // 2588\n      ctx.resetPanelState_();                                                                        // 2589\n      tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);                                               // 2590\n      panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);                                             // 2591\n    });                                                                                              // 2592\n                                                                                                     // 2593\n  }                                                                                                  // 2594\n}                                                                                                    // 2595\n                                                                                                     // 2596\n// The component registers itself. It can assume componentHandler is available                       // 2597\n// in the global scope.                                                                              // 2598\ncomponentHandler.register({                                                                          // 2599\n  constructor: MaterialTabs,                                                                         // 2600\n  classAsString: 'MaterialTabs',                                                                     // 2601\n  cssClass: 'mdl-js-tabs'                                                                            // 2602\n});                                                                                                  // 2603\n                                                                                                     // 2604\n/**                                                                                                  // 2605\n * @license                                                                                          // 2606\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2607\n *                                                                                                   // 2608\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2609\n * you may not use this file except in compliance with the License.                                  // 2610\n * You may obtain a copy of the License at                                                           // 2611\n *                                                                                                   // 2612\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2613\n *                                                                                                   // 2614\n * Unless required by applicable law or agreed to in writing, software                               // 2615\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2616\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2617\n * See the License for the specific language governing permissions and                               // 2618\n * limitations under the License.                                                                    // 2619\n */                                                                                                  // 2620\n                                                                                                     // 2621\n/**                                                                                                  // 2622\n * Class constructor for Textfield MDL component.                                                    // 2623\n * Implements MDL component design pattern defined at:                                               // 2624\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2625\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2626\n */                                                                                                  // 2627\nfunction MaterialTextfield(element) {                                                                // 2628\n  'use strict';                                                                                      // 2629\n                                                                                                     // 2630\n  this.element_ = element;                                                                           // 2631\n  this.maxRows = this.Constant_.NO_MAX_ROWS;                                                         // 2632\n  // Initialize instance.                                                                            // 2633\n  this.init();                                                                                       // 2634\n}                                                                                                    // 2635\n                                                                                                     // 2636\n/**                                                                                                  // 2637\n * Store constants in one place so they can be updated easily.                                       // 2638\n * @enum {string | number}                                                                           // 2639\n * @private                                                                                          // 2640\n */                                                                                                  // 2641\nMaterialTextfield.prototype.Constant_ = {                                                            // 2642\n  NO_MAX_ROWS: -1,                                                                                   // 2643\n  MAX_ROWS_ATTRIBUTE: 'maxrows'                                                                      // 2644\n};                                                                                                   // 2645\n                                                                                                     // 2646\n/**                                                                                                  // 2647\n * Store strings for class names defined by this component that are used in                          // 2648\n * JavaScript. This allows us to simply change it in one place should we                             // 2649\n * decide to modify at a later date.                                                                 // 2650\n * @enum {string}                                                                                    // 2651\n * @private                                                                                          // 2652\n */                                                                                                  // 2653\nMaterialTextfield.prototype.CssClasses_ = {                                                          // 2654\n  LABEL: 'mdl-textfield__label',                                                                     // 2655\n  INPUT: 'mdl-textfield__input',                                                                     // 2656\n  IS_DIRTY: 'is-dirty',                                                                              // 2657\n  IS_FOCUSED: 'is-focused',                                                                          // 2658\n  IS_DISABLED: 'is-disabled',                                                                        // 2659\n  IS_INVALID: 'is-invalid',                                                                          // 2660\n  IS_UPGRADED: 'is-upgraded'                                                                         // 2661\n};                                                                                                   // 2662\n                                                                                                     // 2663\n/**                                                                                                  // 2664\n * Handle input being entered.                                                                       // 2665\n * @param {Event} event The event that fired.                                                        // 2666\n * @private                                                                                          // 2667\n */                                                                                                  // 2668\nMaterialTextfield.prototype.onKeyDown_ = function(event) {                                           // 2669\n  'use strict';                                                                                      // 2670\n                                                                                                     // 2671\n  var currentRowCount = event.target.value.split('\\n').length;                                       // 2672\n  if (event.keyCode === 13) {                                                                        // 2673\n    if (currentRowCount >= this.maxRows) {                                                           // 2674\n      event.preventDefault();                                                                        // 2675\n    }                                                                                                // 2676\n  }                                                                                                  // 2677\n};                                                                                                   // 2678\n                                                                                                     // 2679\n/**                                                                                                  // 2680\n * Handle focus.                                                                                     // 2681\n * @param {Event} event The event that fired.                                                        // 2682\n * @private                                                                                          // 2683\n */                                                                                                  // 2684\nMaterialTextfield.prototype.onFocus_ = function(event) {                                             // 2685\n  'use strict';                                                                                      // 2686\n                                                                                                     // 2687\n  this.element_.classList.add(this.CssClasses_.IS_FOCUSED);                                          // 2688\n};                                                                                                   // 2689\n                                                                                                     // 2690\n/**                                                                                                  // 2691\n * Handle lost focus.                                                                                // 2692\n * @param {Event} event The event that fired.                                                        // 2693\n * @private                                                                                          // 2694\n */                                                                                                  // 2695\nMaterialTextfield.prototype.onBlur_ = function(event) {                                              // 2696\n  'use strict';                                                                                      // 2697\n                                                                                                     // 2698\n  this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);                                       // 2699\n};                                                                                                   // 2700\n                                                                                                     // 2701\n/**                                                                                                  // 2702\n * Handle class updates.                                                                             // 2703\n * @param {HTMLElement} button The button whose classes we should update.                            // 2704\n * @param {HTMLElement} label The label whose classes we should update.                              // 2705\n * @private                                                                                          // 2706\n */                                                                                                  // 2707\nMaterialTextfield.prototype.updateClasses_ = function() {                                            // 2708\n  'use strict';                                                                                      // 2709\n                                                                                                     // 2710\n  if (this.input_.disabled) {                                                                        // 2711\n    this.element_.classList.add(this.CssClasses_.IS_DISABLED);                                       // 2712\n  } else {                                                                                           // 2713\n    this.element_.classList.remove(this.CssClasses_.IS_DISABLED);                                    // 2714\n  }                                                                                                  // 2715\n                                                                                                     // 2716\n  if (this.input_.validity.valid) {                                                                  // 2717\n    this.element_.classList.remove(this.CssClasses_.IS_INVALID);                                     // 2718\n  } else {                                                                                           // 2719\n    this.element_.classList.add(this.CssClasses_.IS_INVALID);                                        // 2720\n  }                                                                                                  // 2721\n                                                                                                     // 2722\n  if (this.input_.value && this.input_.value.length > 0) {                                           // 2723\n    this.element_.classList.add(this.CssClasses_.IS_DIRTY);                                          // 2724\n  } else {                                                                                           // 2725\n    this.element_.classList.remove(this.CssClasses_.IS_DIRTY);                                       // 2726\n  }                                                                                                  // 2727\n};                                                                                                   // 2728\n                                                                                                     // 2729\n// Public methods.                                                                                   // 2730\n                                                                                                     // 2731\n/**                                                                                                  // 2732\n * Disable text field.                                                                               // 2733\n * @public                                                                                           // 2734\n */                                                                                                  // 2735\nMaterialTextfield.prototype.disable = function() {                                                   // 2736\n  'use strict';                                                                                      // 2737\n                                                                                                     // 2738\n  this.input_.disabled = true;                                                                       // 2739\n  this.updateClasses_();                                                                             // 2740\n};                                                                                                   // 2741\n                                                                                                     // 2742\n/**                                                                                                  // 2743\n * Enable text field.                                                                                // 2744\n * @public                                                                                           // 2745\n */                                                                                                  // 2746\nMaterialTextfield.prototype.enable = function() {                                                    // 2747\n  'use strict';                                                                                      // 2748\n                                                                                                     // 2749\n  this.input_.disabled = false;                                                                      // 2750\n  this.updateClasses_();                                                                             // 2751\n};                                                                                                   // 2752\n                                                                                                     // 2753\n/**                                                                                                  // 2754\n * Update text field value.                                                                          // 2755\n * @param {String} value The value to which to set the control (optional).                           // 2756\n * @public                                                                                           // 2757\n */                                                                                                  // 2758\nMaterialTextfield.prototype.change = function(value) {                                               // 2759\n  'use strict';                                                                                      // 2760\n                                                                                                     // 2761\n  if (value) {                                                                                       // 2762\n    this.input_.value = value;                                                                       // 2763\n  }                                                                                                  // 2764\n  this.updateClasses_();                                                                             // 2765\n};                                                                                                   // 2766\n                                                                                                     // 2767\n/**                                                                                                  // 2768\n * Initialize element.                                                                               // 2769\n */                                                                                                  // 2770\nMaterialTextfield.prototype.init = function() {                                                      // 2771\n  'use strict';                                                                                      // 2772\n                                                                                                     // 2773\n  if (this.element_) {                                                                               // 2774\n    this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);                         // 2775\n    this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);                         // 2776\n                                                                                                     // 2777\n    if (this.input_) {                                                                               // 2778\n      if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {                             // 2779\n        this.maxRows = parseInt(this.input_.getAttribute(                                            // 2780\n            this.Constant_.MAX_ROWS_ATTRIBUTE), 10);                                                 // 2781\n        if (isNaN(this.maxRows)) {                                                                   // 2782\n          this.maxRows = this.Constant_.NO_MAX_ROWS;                                                 // 2783\n        }                                                                                            // 2784\n      }                                                                                              // 2785\n                                                                                                     // 2786\n      this.boundUpdateClassesHandler = this.updateClasses_.bind(this);                               // 2787\n      this.boundFocusHandler = this.onFocus_.bind(this);                                             // 2788\n      this.boundBlurHandler = this.onBlur_.bind(this);                                               // 2789\n      this.input_.addEventListener('input', this.boundUpdateClassesHandler);                         // 2790\n      this.input_.addEventListener('focus', this.boundFocusHandler);                                 // 2791\n      this.input_.addEventListener('blur', this.boundBlurHandler);                                   // 2792\n                                                                                                     // 2793\n      if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {                                             // 2794\n        // TODO: This should handle pasting multi line text.                                         // 2795\n        // Currently doesn't.                                                                        // 2796\n        this.boundKeyDownHandler = this.onKeyDown_.bind(this);                                       // 2797\n        this.input_.addEventListener('keydown', this.boundKeyDownHandler);                           // 2798\n      }                                                                                              // 2799\n                                                                                                     // 2800\n      this.updateClasses_();                                                                         // 2801\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                     // 2802\n    }                                                                                                // 2803\n  }                                                                                                  // 2804\n};                                                                                                   // 2805\n                                                                                                     // 2806\n/*                                                                                                   // 2807\n* Downgrade the component                                                                            // 2808\n*/                                                                                                   // 2809\nMaterialTextfield.prototype.mdlDowngrade_ = function() {                                             // 2810\n  'use strict';                                                                                      // 2811\n  this.input_.removeEventListener('input', this.boundUpdateClassesHandler);                          // 2812\n  this.input_.removeEventListener('focus', this.boundFocusHandler);                                  // 2813\n  this.input_.removeEventListener('blur', this.boundBlurHandler);                                    // 2814\n  if (this.boundKeyDownHandler) {                                                                    // 2815\n    this.input_.removeEventListener('keydown', this.boundKeyDownHandler);                            // 2816\n  }                                                                                                  // 2817\n};                                                                                                   // 2818\n                                                                                                     // 2819\n// The component registers itself. It can assume componentHandler is available                       // 2820\n// in the global scope.                                                                              // 2821\ncomponentHandler.register({                                                                          // 2822\n  constructor: MaterialTextfield,                                                                    // 2823\n  classAsString: 'MaterialTextfield',                                                                // 2824\n  cssClass: 'mdl-js-textfield'                                                                       // 2825\n});                                                                                                  // 2826\n                                                                                                     // 2827\n/**                                                                                                  // 2828\n * @license                                                                                          // 2829\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2830\n *                                                                                                   // 2831\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2832\n * you may not use this file except in compliance with the License.                                  // 2833\n * You may obtain a copy of the License at                                                           // 2834\n *                                                                                                   // 2835\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2836\n *                                                                                                   // 2837\n * Unless required by applicable law or agreed to in writing, software                               // 2838\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2839\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2840\n * See the License for the specific language governing permissions and                               // 2841\n * limitations under the License.                                                                    // 2842\n */                                                                                                  // 2843\n                                                                                                     // 2844\n/**                                                                                                  // 2845\n * Class constructor for Tooltip MDL component.                                                      // 2846\n * Implements MDL component design pattern defined at:                                               // 2847\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2848\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2849\n */                                                                                                  // 2850\nfunction MaterialTooltip(element) {                                                                  // 2851\n  'use strict';                                                                                      // 2852\n                                                                                                     // 2853\n  this.element_ = element;                                                                           // 2854\n                                                                                                     // 2855\n  // Initialize instance.                                                                            // 2856\n  this.init();                                                                                       // 2857\n}                                                                                                    // 2858\n                                                                                                     // 2859\n/**                                                                                                  // 2860\n * Store constants in one place so they can be updated easily.                                       // 2861\n * @enum {string | number}                                                                           // 2862\n * @private                                                                                          // 2863\n */                                                                                                  // 2864\nMaterialTooltip.prototype.Constant_ = {                                                              // 2865\n  // None for now.                                                                                   // 2866\n};                                                                                                   // 2867\n                                                                                                     // 2868\n/**                                                                                                  // 2869\n * Store strings for class names defined by this component that are used in                          // 2870\n * JavaScript. This allows us to simply change it in one place should we                             // 2871\n * decide to modify at a later date.                                                                 // 2872\n * @enum {string}                                                                                    // 2873\n * @private                                                                                          // 2874\n */                                                                                                  // 2875\nMaterialTooltip.prototype.CssClasses_ = {                                                            // 2876\n  IS_ACTIVE: 'is-active'                                                                             // 2877\n};                                                                                                   // 2878\n                                                                                                     // 2879\n/**                                                                                                  // 2880\n * Handle mouseenter for tooltip.                                                                    // 2881\n * @param {Event} event The event that fired.                                                        // 2882\n * @private                                                                                          // 2883\n */                                                                                                  // 2884\nMaterialTooltip.prototype.handleMouseEnter_ = function(event) {                                      // 2885\n  'use strict';                                                                                      // 2886\n                                                                                                     // 2887\n  event.stopPropagation();                                                                           // 2888\n  var props = event.target.getBoundingClientRect();                                                  // 2889\n  this.element_.style.left = props.left + (props.width / 2) + 'px';                                  // 2890\n  this.element_.style.marginLeft = -1 * (this.element_.offsetWidth / 2) + 'px';                      // 2891\n  this.element_.style.top = props.top + props.height + 10 + 'px';                                    // 2892\n  this.element_.classList.add(this.CssClasses_.IS_ACTIVE);                                           // 2893\n};                                                                                                   // 2894\n                                                                                                     // 2895\n/**                                                                                                  // 2896\n * Handle mouseleave for tooltip.                                                                    // 2897\n * @param {Event} event The event that fired.                                                        // 2898\n * @private                                                                                          // 2899\n */                                                                                                  // 2900\nMaterialTooltip.prototype.handleMouseLeave_ = function(event) {                                      // 2901\n  'use strict';                                                                                      // 2902\n                                                                                                     // 2903\n  event.stopPropagation();                                                                           // 2904\n  this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);                                        // 2905\n};                                                                                                   // 2906\n                                                                                                     // 2907\n/**                                                                                                  // 2908\n * Initialize element.                                                                               // 2909\n */                                                                                                  // 2910\nMaterialTooltip.prototype.init = function() {                                                        // 2911\n  'use strict';                                                                                      // 2912\n                                                                                                     // 2913\n  if (this.element_) {                                                                               // 2914\n    var forElId = this.element_.getAttribute('for');                                                 // 2915\n                                                                                                     // 2916\n    if (forElId) {                                                                                   // 2917\n      this.forElement_ = document.getElementById(forElId);                                           // 2918\n    }                                                                                                // 2919\n                                                                                                     // 2920\n    if (this.forElement_) {                                                                          // 2921\n      this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);                               // 2922\n      this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);                               // 2923\n      this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler,                   // 2924\n          false);                                                                                    // 2925\n      this.forElement_.addEventListener('click', this.boundMouseEnterHandler,                        // 2926\n          false);                                                                                    // 2927\n      this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler);                  // 2928\n    }                                                                                                // 2929\n  }                                                                                                  // 2930\n};                                                                                                   // 2931\n                                                                                                     // 2932\n/*                                                                                                   // 2933\n* Downgrade the component                                                                            // 2934\n*/                                                                                                   // 2935\nMaterialTooltip.prototype.mdlDowngrade_ = function() {                                               // 2936\n  'use strict';                                                                                      // 2937\n  if (this.forElement_) {                                                                            // 2938\n    this.forElement_.removeEventListener('mouseenter', this.boundMouseEnterHandler, false);          // 2939\n    this.forElement_.removeEventListener('click', this.boundMouseEnterHandler, false);               // 2940\n    this.forElement_.removeEventListener('mouseleave', this.boundMouseLeaveHandler);                 // 2941\n  }                                                                                                  // 2942\n};                                                                                                   // 2943\n                                                                                                     // 2944\n// The component registers itself. It can assume componentHandler is available                       // 2945\n// in the global scope.                                                                              // 2946\ncomponentHandler.register({                                                                          // 2947\n  constructor: MaterialTooltip,                                                                      // 2948\n  classAsString: 'MaterialTooltip',                                                                  // 2949\n  cssClass: 'mdl-tooltip'                                                                            // 2950\n});                                                                                                  // 2951\n                                                                                                     // 2952\n/**                                                                                                  // 2953\n * @license                                                                                          // 2954\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 2955\n *                                                                                                   // 2956\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 2957\n * you may not use this file except in compliance with the License.                                  // 2958\n * You may obtain a copy of the License at                                                           // 2959\n *                                                                                                   // 2960\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 2961\n *                                                                                                   // 2962\n * Unless required by applicable law or agreed to in writing, software                               // 2963\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 2964\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 2965\n * See the License for the specific language governing permissions and                               // 2966\n * limitations under the License.                                                                    // 2967\n */                                                                                                  // 2968\n                                                                                                     // 2969\n/**                                                                                                  // 2970\n * Class constructor for Layout MDL component.                                                       // 2971\n * Implements MDL component design pattern defined at:                                               // 2972\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 2973\n * @param {HTMLElement} element The element that will be upgraded.                                   // 2974\n */                                                                                                  // 2975\nfunction MaterialLayout(element) {                                                                   // 2976\n  'use strict';                                                                                      // 2977\n                                                                                                     // 2978\n  this.element_ = element;                                                                           // 2979\n                                                                                                     // 2980\n  // Initialize instance.                                                                            // 2981\n  this.init();                                                                                       // 2982\n}                                                                                                    // 2983\n                                                                                                     // 2984\n/**                                                                                                  // 2985\n * Store constants in one place so they can be updated easily.                                       // 2986\n * @enum {string | number}                                                                           // 2987\n * @private                                                                                          // 2988\n */                                                                                                  // 2989\nMaterialLayout.prototype.Constant_ = {                                                               // 2990\n  MAX_WIDTH: '(max-width: 850px)',                                                                   // 2991\n  TAB_SCROLL_PIXELS: 100,                                                                            // 2992\n                                                                                                     // 2993\n  MENU_ICON: 'menu',                                                                                 // 2994\n  CHEVRON_LEFT: 'chevron_left',                                                                      // 2995\n  CHEVRON_RIGHT: 'chevron_right'                                                                     // 2996\n};                                                                                                   // 2997\n                                                                                                     // 2998\n/**                                                                                                  // 2999\n * Modes.                                                                                            // 3000\n * @enum {number}                                                                                    // 3001\n * @private                                                                                          // 3002\n */                                                                                                  // 3003\nMaterialLayout.prototype.Mode_ = {                                                                   // 3004\n  STANDARD: 0,                                                                                       // 3005\n  SEAMED: 1,                                                                                         // 3006\n  WATERFALL: 2,                                                                                      // 3007\n  SCROLL: 3                                                                                          // 3008\n};                                                                                                   // 3009\n                                                                                                     // 3010\n/**                                                                                                  // 3011\n * Store strings for class names defined by this component that are used in                          // 3012\n * JavaScript. This allows us to simply change it in one place should we                             // 3013\n * decide to modify at a later date.                                                                 // 3014\n * @enum {string}                                                                                    // 3015\n * @private                                                                                          // 3016\n */                                                                                                  // 3017\nMaterialLayout.prototype.CssClasses_ = {                                                             // 3018\n  CONTAINER: 'mdl-layout__container',                                                                // 3019\n  HEADER: 'mdl-layout__header',                                                                      // 3020\n  DRAWER: 'mdl-layout__drawer',                                                                      // 3021\n  CONTENT: 'mdl-layout__content',                                                                    // 3022\n  DRAWER_BTN: 'mdl-layout__drawer-button',                                                           // 3023\n                                                                                                     // 3024\n  ICON: 'material-icons',                                                                            // 3025\n                                                                                                     // 3026\n  JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',                                                          // 3027\n  RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',                                              // 3028\n  RIPPLE: 'mdl-ripple',                                                                              // 3029\n  RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                       // 3030\n                                                                                                     // 3031\n  HEADER_SEAMED: 'mdl-layout__header--seamed',                                                       // 3032\n  HEADER_WATERFALL: 'mdl-layout__header--waterfall',                                                 // 3033\n  HEADER_SCROLL: 'mdl-layout__header--scroll',                                                       // 3034\n                                                                                                     // 3035\n  FIXED_HEADER: 'mdl-layout--fixed-header',                                                          // 3036\n  OBFUSCATOR: 'mdl-layout__obfuscator',                                                              // 3037\n                                                                                                     // 3038\n  TAB_BAR: 'mdl-layout__tab-bar',                                                                    // 3039\n  TAB_CONTAINER: 'mdl-layout__tab-bar-container',                                                    // 3040\n  TAB: 'mdl-layout__tab',                                                                            // 3041\n  TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',                                                      // 3042\n  TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',                                            // 3043\n  TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',                                          // 3044\n  PANEL: 'mdl-layout__tab-panel',                                                                    // 3045\n                                                                                                     // 3046\n  HAS_DRAWER: 'has-drawer',                                                                          // 3047\n  HAS_TABS: 'has-tabs',                                                                              // 3048\n  HAS_SCROLLING_HEADER: 'has-scrolling-header',                                                      // 3049\n  CASTING_SHADOW: 'is-casting-shadow',                                                               // 3050\n  IS_COMPACT: 'is-compact',                                                                          // 3051\n  IS_SMALL_SCREEN: 'is-small-screen',                                                                // 3052\n  IS_DRAWER_OPEN: 'is-visible',                                                                      // 3053\n  IS_ACTIVE: 'is-active',                                                                            // 3054\n  IS_UPGRADED: 'is-upgraded',                                                                        // 3055\n  IS_ANIMATING: 'is-animating'                                                                       // 3056\n};                                                                                                   // 3057\n                                                                                                     // 3058\n/**                                                                                                  // 3059\n * Handles scrolling on the content.                                                                 // 3060\n * @private                                                                                          // 3061\n */                                                                                                  // 3062\nMaterialLayout.prototype.contentScrollHandler_ = function() {                                        // 3063\n  'use strict';                                                                                      // 3064\n                                                                                                     // 3065\n  if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {                              // 3066\n    return;                                                                                          // 3067\n  }                                                                                                  // 3068\n                                                                                                     // 3069\n  if (this.content_.scrollTop > 0 &&                                                                 // 3070\n      !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {                               // 3071\n    this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);                                     // 3072\n    this.header_.classList.add(this.CssClasses_.IS_COMPACT);                                         // 3073\n    this.header_.classList.add(this.CssClasses_.IS_ANIMATING);                                       // 3074\n  } else if (this.content_.scrollTop <= 0 &&                                                         // 3075\n      this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {                                // 3076\n    this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);                                  // 3077\n    this.header_.classList.remove(this.CssClasses_.IS_COMPACT);                                      // 3078\n    this.header_.classList.add(this.CssClasses_.IS_ANIMATING);                                       // 3079\n  }                                                                                                  // 3080\n};                                                                                                   // 3081\n                                                                                                     // 3082\n/**                                                                                                  // 3083\n * Handles changes in screen size.                                                                   // 3084\n * @private                                                                                          // 3085\n */                                                                                                  // 3086\nMaterialLayout.prototype.screenSizeHandler_ = function() {                                           // 3087\n  'use strict';                                                                                      // 3088\n                                                                                                     // 3089\n  if (this.screenSizeMediaQuery_.matches) {                                                          // 3090\n    this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);                                   // 3091\n  } else {                                                                                           // 3092\n    this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);                                // 3093\n    // Collapse drawer (if any) when moving to a large screen size.                                  // 3094\n    if (this.drawer_) {                                                                              // 3095\n      this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);                                // 3096\n    }                                                                                                // 3097\n  }                                                                                                  // 3098\n};                                                                                                   // 3099\n                                                                                                     // 3100\n/**                                                                                                  // 3101\n * Handles toggling of the drawer.                                                                   // 3102\n * @param {Element} drawer The drawer container element.                                             // 3103\n * @private                                                                                          // 3104\n */                                                                                                  // 3105\nMaterialLayout.prototype.drawerToggleHandler_ = function() {                                         // 3106\n  'use strict';                                                                                      // 3107\n                                                                                                     // 3108\n  this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);                                    // 3109\n};                                                                                                   // 3110\n                                                                                                     // 3111\n/**                                                                                                  // 3112\n * Handles (un)setting the `is-animating` class                                                      // 3113\n */                                                                                                  // 3114\nMaterialLayout.prototype.headerTransitionEndHandler = function() {                                   // 3115\n  'use strict';                                                                                      // 3116\n                                                                                                     // 3117\n  this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);                                      // 3118\n};                                                                                                   // 3119\n                                                                                                     // 3120\n/**                                                                                                  // 3121\n * Handles expanding the header on click                                                             // 3122\n */                                                                                                  // 3123\nMaterialLayout.prototype.headerClickHandler = function() {                                           // 3124\n  'use strict';                                                                                      // 3125\n                                                                                                     // 3126\n  if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {                                // 3127\n    this.header_.classList.remove(this.CssClasses_.IS_COMPACT);                                      // 3128\n    this.header_.classList.add(this.CssClasses_.IS_ANIMATING);                                       // 3129\n  }                                                                                                  // 3130\n};                                                                                                   // 3131\n                                                                                                     // 3132\n/**                                                                                                  // 3133\n * Reset tab state, dropping active classes                                                          // 3134\n * @private                                                                                          // 3135\n */                                                                                                  // 3136\nMaterialLayout.prototype.resetTabState_ = function(tabBar) {                                         // 3137\n  'use strict';                                                                                      // 3138\n                                                                                                     // 3139\n  for (var k = 0; k < tabBar.length; k++) {                                                          // 3140\n    tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);                                          // 3141\n  }                                                                                                  // 3142\n};                                                                                                   // 3143\n                                                                                                     // 3144\n/**                                                                                                  // 3145\n * Reset panel state, droping active classes                                                         // 3146\n * @private                                                                                          // 3147\n */                                                                                                  // 3148\nMaterialLayout.prototype.resetPanelState_ = function(panels) {                                       // 3149\n  'use strict';                                                                                      // 3150\n                                                                                                     // 3151\n  for (var j = 0; j < panels.length; j++) {                                                          // 3152\n    panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);                                          // 3153\n  }                                                                                                  // 3154\n};                                                                                                   // 3155\n                                                                                                     // 3156\n/**                                                                                                  // 3157\n * Initialize element.                                                                               // 3158\n */                                                                                                  // 3159\nMaterialLayout.prototype.init = function() {                                                         // 3160\n  'use strict';                                                                                      // 3161\n                                                                                                     // 3162\n  if (this.element_) {                                                                               // 3163\n    var container = document.createElement('div');                                                   // 3164\n    container.classList.add(this.CssClasses_.CONTAINER);                                             // 3165\n    this.element_.parentElement.insertBefore(container, this.element_);                              // 3166\n    this.element_.parentElement.removeChild(this.element_);                                          // 3167\n    container.appendChild(this.element_);                                                            // 3168\n                                                                                                     // 3169\n    var directChildren = this.element_.childNodes;                                                   // 3170\n    for (var c = 0; c < directChildren.length; c++) {                                                // 3171\n      var child = directChildren[c];                                                                 // 3172\n      if (child.classList &&                                                                         // 3173\n          child.classList.contains(this.CssClasses_.HEADER)) {                                       // 3174\n        this.header_ = child;                                                                        // 3175\n      }                                                                                              // 3176\n                                                                                                     // 3177\n      if (child.classList &&                                                                         // 3178\n          child.classList.contains(this.CssClasses_.DRAWER)) {                                       // 3179\n        this.drawer_ = child;                                                                        // 3180\n      }                                                                                              // 3181\n                                                                                                     // 3182\n      if (child.classList &&                                                                         // 3183\n          child.classList.contains(this.CssClasses_.CONTENT)) {                                      // 3184\n        this.content_ = child;                                                                       // 3185\n      }                                                                                              // 3186\n    }                                                                                                // 3187\n                                                                                                     // 3188\n    if (this.header_) {                                                                              // 3189\n      this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);                     // 3190\n    }                                                                                                // 3191\n                                                                                                     // 3192\n    var mode = this.Mode_.STANDARD;                                                                  // 3193\n                                                                                                     // 3194\n    // Keep an eye on screen size, and add/remove auxiliary class for styling                        // 3195\n    // of small screens.                                                                             // 3196\n    this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);                        // 3197\n    this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));                      // 3198\n    this.screenSizeHandler_();                                                                       // 3199\n                                                                                                     // 3200\n    if (this.header_) {                                                                              // 3201\n      if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {                         // 3202\n        mode = this.Mode_.SEAMED;                                                                    // 3203\n      } else if (this.header_.classList.contains(                                                    // 3204\n          this.CssClasses_.HEADER_WATERFALL)) {                                                      // 3205\n        mode = this.Mode_.WATERFALL;                                                                 // 3206\n        this.header_.addEventListener('transitionend',                                               // 3207\n          this.headerTransitionEndHandler.bind(this));                                               // 3208\n        this.header_.addEventListener('click',                                                       // 3209\n          this.headerClickHandler.bind(this));                                                       // 3210\n      } else if (this.header_.classList.contains(                                                    // 3211\n          this.CssClasses_.HEADER_SCROLL)) {                                                         // 3212\n        mode = this.Mode_.SCROLL;                                                                    // 3213\n        container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);                              // 3214\n      }                                                                                              // 3215\n                                                                                                     // 3216\n      if (mode === this.Mode_.STANDARD) {                                                            // 3217\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);                                 // 3218\n        if (this.tabBar_) {                                                                          // 3219\n          this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);                               // 3220\n        }                                                                                            // 3221\n      } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {                         // 3222\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);                              // 3223\n        if (this.tabBar_) {                                                                          // 3224\n          this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);                            // 3225\n        }                                                                                            // 3226\n      } else if (mode === this.Mode_.WATERFALL) {                                                    // 3227\n        // Add and remove shadows depending on scroll position.                                      // 3228\n        // Also add/remove auxiliary class for styling of the compact version of                     // 3229\n        // the header.                                                                               // 3230\n        this.content_.addEventListener('scroll',                                                     // 3231\n            this.contentScrollHandler_.bind(this));                                                  // 3232\n        this.contentScrollHandler_();                                                                // 3233\n      }                                                                                              // 3234\n    }                                                                                                // 3235\n                                                                                                     // 3236\n    // Add drawer toggling button to our layout, if we have an openable drawer.                      // 3237\n    if (this.drawer_) {                                                                              // 3238\n      var drawerButton = document.createElement('div');                                              // 3239\n      drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);                                       // 3240\n      var drawerButtonIcon = document.createElement('i');                                            // 3241\n      drawerButtonIcon.classList.add(this.CssClasses_.ICON);                                         // 3242\n      drawerButtonIcon.textContent = this.Constant_.MENU_ICON;                                       // 3243\n      drawerButton.appendChild(drawerButtonIcon);                                                    // 3244\n      drawerButton.addEventListener('click',                                                         // 3245\n          this.drawerToggleHandler_.bind(this));                                                     // 3246\n                                                                                                     // 3247\n      // Add a class if the layout has a drawer, for altering the left padding.                      // 3248\n      // Adds the HAS_DRAWER to the elements since this.header_ may or may                           // 3249\n      // not be present.                                                                             // 3250\n      this.element_.classList.add(this.CssClasses_.HAS_DRAWER);                                      // 3251\n                                                                                                     // 3252\n      // If we have a fixed header, add the button to the header rather than                         // 3253\n      // the layout.                                                                                 // 3254\n      if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {                         // 3255\n        this.header_.insertBefore(drawerButton, this.header_.firstChild);                            // 3256\n      } else {                                                                                       // 3257\n        this.element_.insertBefore(drawerButton, this.content_);                                     // 3258\n      }                                                                                              // 3259\n                                                                                                     // 3260\n      var obfuscator = document.createElement('div');                                                // 3261\n      obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);                                         // 3262\n      this.element_.appendChild(obfuscator);                                                         // 3263\n      obfuscator.addEventListener('click',                                                           // 3264\n          this.drawerToggleHandler_.bind(this));                                                     // 3265\n    }                                                                                                // 3266\n                                                                                                     // 3267\n    // Initialize tabs, if any.                                                                      // 3268\n    if (this.header_ && this.tabBar_) {                                                              // 3269\n      this.element_.classList.add(this.CssClasses_.HAS_TABS);                                        // 3270\n                                                                                                     // 3271\n      var tabContainer = document.createElement('div');                                              // 3272\n      tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);                                    // 3273\n      this.header_.insertBefore(tabContainer, this.tabBar_);                                         // 3274\n      this.header_.removeChild(this.tabBar_);                                                        // 3275\n                                                                                                     // 3276\n      var leftButton = document.createElement('div');                                                // 3277\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);                                     // 3278\n      leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);                                // 3279\n      var leftButtonIcon = document.createElement('i');                                              // 3280\n      leftButtonIcon.classList.add(this.CssClasses_.ICON);                                           // 3281\n      leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;                                      // 3282\n      leftButton.appendChild(leftButtonIcon);                                                        // 3283\n      leftButton.addEventListener('click', function() {                                              // 3284\n        this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;                                 // 3285\n      }.bind(this));                                                                                 // 3286\n                                                                                                     // 3287\n      var rightButton = document.createElement('div');                                               // 3288\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);                                    // 3289\n      rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);                              // 3290\n      var rightButtonIcon = document.createElement('i');                                             // 3291\n      rightButtonIcon.classList.add(this.CssClasses_.ICON);                                          // 3292\n      rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;                                    // 3293\n      rightButton.appendChild(rightButtonIcon);                                                      // 3294\n      rightButton.addEventListener('click', function() {                                             // 3295\n        this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;                                 // 3296\n      }.bind(this));                                                                                 // 3297\n                                                                                                     // 3298\n      tabContainer.appendChild(leftButton);                                                          // 3299\n      tabContainer.appendChild(this.tabBar_);                                                        // 3300\n      tabContainer.appendChild(rightButton);                                                         // 3301\n                                                                                                     // 3302\n      // Add and remove buttons depending on scroll position.                                        // 3303\n      var tabScrollHandler = function() {                                                            // 3304\n        if (this.tabBar_.scrollLeft > 0) {                                                           // 3305\n          leftButton.classList.add(this.CssClasses_.IS_ACTIVE);                                      // 3306\n        } else {                                                                                     // 3307\n          leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);                                   // 3308\n        }                                                                                            // 3309\n                                                                                                     // 3310\n        if (this.tabBar_.scrollLeft <                                                                // 3311\n            this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {                                   // 3312\n          rightButton.classList.add(this.CssClasses_.IS_ACTIVE);                                     // 3313\n        } else {                                                                                     // 3314\n          rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);                                  // 3315\n        }                                                                                            // 3316\n      }.bind(this);                                                                                  // 3317\n                                                                                                     // 3318\n      this.tabBar_.addEventListener('scroll', tabScrollHandler);                                     // 3319\n      tabScrollHandler();                                                                            // 3320\n                                                                                                     // 3321\n      if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {                      // 3322\n        this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);                           // 3323\n      }                                                                                              // 3324\n                                                                                                     // 3325\n      // Select element tabs, document panels                                                        // 3326\n      var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);                          // 3327\n      var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);                     // 3328\n                                                                                                     // 3329\n      // Create new tabs for each tab element                                                        // 3330\n      for (var i = 0; i < tabs.length; i++) {                                                        // 3331\n        new MaterialLayoutTab(tabs[i], tabs, panels, this);                                          // 3332\n      }                                                                                              // 3333\n    }                                                                                                // 3334\n                                                                                                     // 3335\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 3336\n  }                                                                                                  // 3337\n};                                                                                                   // 3338\n                                                                                                     // 3339\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {                                              // 3340\n  'use strict';                                                                                      // 3341\n                                                                                                     // 3342\n  if (tab) {                                                                                         // 3343\n    if (layout.tabBar_.classList.contains(                                                           // 3344\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {                                                      // 3345\n      var rippleContainer = document.createElement('span');                                          // 3346\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);                            // 3347\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);                            // 3348\n      var ripple = document.createElement('span');                                                   // 3349\n      ripple.classList.add(layout.CssClasses_.RIPPLE);                                               // 3350\n      rippleContainer.appendChild(ripple);                                                           // 3351\n      tab.appendChild(rippleContainer);                                                              // 3352\n    }                                                                                                // 3353\n                                                                                                     // 3354\n    tab.addEventListener('click', function(e) {                                                      // 3355\n      e.preventDefault();                                                                            // 3356\n      var href = tab.href.split('#')[1];                                                             // 3357\n      var panel = layout.content_.querySelector('#' + href);                                         // 3358\n      layout.resetTabState_(tabs);                                                                   // 3359\n      layout.resetPanelState_(panels);                                                               // 3360\n      tab.classList.add(layout.CssClasses_.IS_ACTIVE);                                               // 3361\n      panel.classList.add(layout.CssClasses_.IS_ACTIVE);                                             // 3362\n    });                                                                                              // 3363\n                                                                                                     // 3364\n  }                                                                                                  // 3365\n}                                                                                                    // 3366\n                                                                                                     // 3367\n// The component registers itself. It can assume componentHandler is available                       // 3368\n// in the global scope.                                                                              // 3369\ncomponentHandler.register({                                                                          // 3370\n  constructor: MaterialLayout,                                                                       // 3371\n  classAsString: 'MaterialLayout',                                                                   // 3372\n  cssClass: 'mdl-js-layout'                                                                          // 3373\n});                                                                                                  // 3374\n                                                                                                     // 3375\n/**                                                                                                  // 3376\n * @license                                                                                          // 3377\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 3378\n *                                                                                                   // 3379\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 3380\n * you may not use this file except in compliance with the License.                                  // 3381\n * You may obtain a copy of the License at                                                           // 3382\n *                                                                                                   // 3383\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 3384\n *                                                                                                   // 3385\n * Unless required by applicable law or agreed to in writing, software                               // 3386\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 3387\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 3388\n * See the License for the specific language governing permissions and                               // 3389\n * limitations under the License.                                                                    // 3390\n */                                                                                                  // 3391\n                                                                                                     // 3392\n/**                                                                                                  // 3393\n * Class constructor for Data Table Card MDL component.                                              // 3394\n * Implements MDL component design pattern defined at:                                               // 3395\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 3396\n * @param {HTMLElement} element The element that will be upgraded.                                   // 3397\n */                                                                                                  // 3398\nfunction MaterialDataTable(element) {                                                                // 3399\n  'use strict';                                                                                      // 3400\n                                                                                                     // 3401\n  this.element_ = element;                                                                           // 3402\n                                                                                                     // 3403\n  // Initialize instance.                                                                            // 3404\n  this.init();                                                                                       // 3405\n}                                                                                                    // 3406\n                                                                                                     // 3407\n/**                                                                                                  // 3408\n * Store constants in one place so they can be updated easily.                                       // 3409\n * @enum {string | number}                                                                           // 3410\n * @private                                                                                          // 3411\n */                                                                                                  // 3412\nMaterialDataTable.prototype.Constant_ = {                                                            // 3413\n  // None at the moment.                                                                             // 3414\n};                                                                                                   // 3415\n                                                                                                     // 3416\n/**                                                                                                  // 3417\n * Store strings for class names defined by this component that are used in                          // 3418\n * JavaScript. This allows us to simply change it in one place should we                             // 3419\n * decide to modify at a later date.                                                                 // 3420\n * @enum {string}                                                                                    // 3421\n * @private                                                                                          // 3422\n */                                                                                                  // 3423\nMaterialDataTable.prototype.CssClasses_ = {                                                          // 3424\n  DATA_TABLE: 'mdl-data-table',                                                                      // 3425\n  SELECTABLE: 'mdl-data-table--selectable',                                                          // 3426\n  IS_SELECTED: 'is-selected',                                                                        // 3427\n  IS_UPGRADED: 'is-upgraded'                                                                         // 3428\n};                                                                                                   // 3429\n                                                                                                     // 3430\nMaterialDataTable.prototype.selectRow_ = function(checkbox, row, rows) {                             // 3431\n  'use strict';                                                                                      // 3432\n                                                                                                     // 3433\n  if (row) {                                                                                         // 3434\n    return function() {                                                                              // 3435\n      if (checkbox.checked) {                                                                        // 3436\n        row.classList.add(this.CssClasses_.IS_SELECTED);                                             // 3437\n      } else {                                                                                       // 3438\n        row.classList.remove(this.CssClasses_.IS_SELECTED);                                          // 3439\n      }                                                                                              // 3440\n    }.bind(this);                                                                                    // 3441\n  }                                                                                                  // 3442\n                                                                                                     // 3443\n  if (rows) {                                                                                        // 3444\n    return function() {                                                                              // 3445\n      var i;                                                                                         // 3446\n      var el;                                                                                        // 3447\n      if (checkbox.checked) {                                                                        // 3448\n        for (i = 0; i < rows.length; i++) {                                                          // 3449\n          el = rows[i].querySelector('td').querySelector('.mdl-checkbox');                           // 3450\n          el.MaterialCheckbox.check();                                                               // 3451\n          rows[i].classList.add(this.CssClasses_.IS_SELECTED);                                       // 3452\n        }                                                                                            // 3453\n      } else {                                                                                       // 3454\n        for (i = 0; i < rows.length; i++) {                                                          // 3455\n          el = rows[i].querySelector('td').querySelector('.mdl-checkbox');                           // 3456\n          el.MaterialCheckbox.uncheck();                                                             // 3457\n          rows[i].classList.remove(this.CssClasses_.IS_SELECTED);                                    // 3458\n        }                                                                                            // 3459\n      }                                                                                              // 3460\n    }.bind(this);                                                                                    // 3461\n  }                                                                                                  // 3462\n};                                                                                                   // 3463\n                                                                                                     // 3464\nMaterialDataTable.prototype.createCheckbox_ = function(row, rows) {                                  // 3465\n  'use strict';                                                                                      // 3466\n                                                                                                     // 3467\n  var label = document.createElement('label');                                                       // 3468\n  label.classList.add('mdl-checkbox');                                                               // 3469\n  label.classList.add('mdl-js-checkbox');                                                            // 3470\n  label.classList.add('mdl-js-ripple-effect');                                                       // 3471\n  label.classList.add('mdl-data-table__select');                                                     // 3472\n  var checkbox = document.createElement('input');                                                    // 3473\n  checkbox.type = 'checkbox';                                                                        // 3474\n  checkbox.classList.add('mdl-checkbox__input');                                                     // 3475\n  if (row) {                                                                                         // 3476\n    checkbox.addEventListener('change', this.selectRow_(checkbox, row));                             // 3477\n  } else if (rows) {                                                                                 // 3478\n    checkbox.addEventListener('change', this.selectRow_(checkbox, null, rows));                      // 3479\n  }                                                                                                  // 3480\n  label.appendChild(checkbox);                                                                       // 3481\n  componentHandler.upgradeElement(label, 'MaterialCheckbox');                                        // 3482\n  return label;                                                                                      // 3483\n};                                                                                                   // 3484\n                                                                                                     // 3485\n/**                                                                                                  // 3486\n * Initialize element.                                                                               // 3487\n */                                                                                                  // 3488\nMaterialDataTable.prototype.init = function() {                                                      // 3489\n  'use strict';                                                                                      // 3490\n                                                                                                     // 3491\n  if (this.element_) {                                                                               // 3492\n                                                                                                     // 3493\n    var firstHeader = this.element_.querySelector('th');                                             // 3494\n    var rows = this.element_.querySelector('tbody').querySelectorAll('tr');                          // 3495\n                                                                                                     // 3496\n    if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {                             // 3497\n      var th = document.createElement('th');                                                         // 3498\n      var headerCheckbox = this.createCheckbox_(null, rows);                                         // 3499\n      th.appendChild(headerCheckbox);                                                                // 3500\n      firstHeader.parentElement.insertBefore(th, firstHeader);                                       // 3501\n                                                                                                     // 3502\n      for (var i = 0; i < rows.length; i++) {                                                        // 3503\n        var firstCell = rows[i].querySelector('td');                                                 // 3504\n        if (firstCell) {                                                                             // 3505\n          var td = document.createElement('td');                                                     // 3506\n          var rowCheckbox = this.createCheckbox_(rows[i]);                                           // 3507\n          td.appendChild(rowCheckbox);                                                               // 3508\n          rows[i].insertBefore(td, firstCell);                                                       // 3509\n        }                                                                                            // 3510\n      }                                                                                              // 3511\n    }                                                                                                // 3512\n                                                                                                     // 3513\n    this.element_.classList.add(this.CssClasses_.IS_UPGRADED);                                       // 3514\n  }                                                                                                  // 3515\n};                                                                                                   // 3516\n                                                                                                     // 3517\n// The component registers itself. It can assume componentHandler is available                       // 3518\n// in the global scope.                                                                              // 3519\ncomponentHandler.register({                                                                          // 3520\n  constructor: MaterialDataTable,                                                                    // 3521\n  classAsString: 'MaterialDataTable',                                                                // 3522\n  cssClass: 'mdl-js-data-table'                                                                      // 3523\n});                                                                                                  // 3524\n                                                                                                     // 3525\n/**                                                                                                  // 3526\n * @license                                                                                          // 3527\n * Copyright 2015 Google Inc. All Rights Reserved.                                                   // 3528\n *                                                                                                   // 3529\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                   // 3530\n * you may not use this file except in compliance with the License.                                  // 3531\n * You may obtain a copy of the License at                                                           // 3532\n *                                                                                                   // 3533\n *      http://www.apache.org/licenses/LICENSE-2.0                                                   // 3534\n *                                                                                                   // 3535\n * Unless required by applicable law or agreed to in writing, software                               // 3536\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                 // 3537\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                          // 3538\n * See the License for the specific language governing permissions and                               // 3539\n * limitations under the License.                                                                    // 3540\n */                                                                                                  // 3541\n                                                                                                     // 3542\n/**                                                                                                  // 3543\n * Class constructor for Ripple MDL component.                                                       // 3544\n * Implements MDL component design pattern defined at:                                               // 3545\n * https://github.com/jasonmayes/mdl-component-design-pattern                                        // 3546\n * @param {HTMLElement} element The element that will be upgraded.                                   // 3547\n */                                                                                                  // 3548\nfunction MaterialRipple(element) {                                                                   // 3549\n  'use strict';                                                                                      // 3550\n                                                                                                     // 3551\n  this.element_ = element;                                                                           // 3552\n                                                                                                     // 3553\n  // Initialize instance.                                                                            // 3554\n  this.init();                                                                                       // 3555\n}                                                                                                    // 3556\n                                                                                                     // 3557\n/**                                                                                                  // 3558\n * Store constants in one place so they can be updated easily.                                       // 3559\n * @enum {string | number}                                                                           // 3560\n * @private                                                                                          // 3561\n */                                                                                                  // 3562\nMaterialRipple.prototype.Constant_ = {                                                               // 3563\n  INITIAL_SCALE: 'scale(0.0001, 0.0001)',                                                            // 3564\n  INITIAL_SIZE: '1px',                                                                               // 3565\n  INITIAL_OPACITY: '0.4',                                                                            // 3566\n  FINAL_OPACITY: '0',                                                                                // 3567\n  FINAL_SCALE: ''                                                                                    // 3568\n};                                                                                                   // 3569\n                                                                                                     // 3570\n/**                                                                                                  // 3571\n * Store strings for class names defined by this component that are used in                          // 3572\n * JavaScript. This allows us to simply change it in one place should we                             // 3573\n * decide to modify at a later date.                                                                 // 3574\n * @enum {string}                                                                                    // 3575\n * @private                                                                                          // 3576\n */                                                                                                  // 3577\nMaterialRipple.prototype.CssClasses_ = {                                                             // 3578\n  RIPPLE_CENTER: 'mdl-ripple--center',                                                               // 3579\n  RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',                                // 3580\n  RIPPLE: 'mdl-ripple',                                                                              // 3581\n  IS_ANIMATING: 'is-animating',                                                                      // 3582\n  IS_VISIBLE: 'is-visible'                                                                           // 3583\n};                                                                                                   // 3584\n                                                                                                     // 3585\n/**                                                                                                  // 3586\n * Handle mouse / finger down on element.                                                            // 3587\n * @param {Event} event The event that fired.                                                        // 3588\n * @private                                                                                          // 3589\n */                                                                                                  // 3590\nMaterialRipple.prototype.downHandler_ = function(event) {                                            // 3591\n  'use strict';                                                                                      // 3592\n                                                                                                     // 3593\n  if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {                       // 3594\n    var rect = this.element_.getBoundingClientRect();                                                // 3595\n    this.boundHeight = rect.height;                                                                  // 3596\n    this.boundWidth = rect.width;                                                                    // 3597\n    this.rippleSize_ = Math.sqrt(rect.width * rect.width +                                           // 3598\n        rect.height * rect.height) * 2 + 2;                                                          // 3599\n    this.rippleElement_.style.width = this.rippleSize_ + 'px';                                       // 3600\n    this.rippleElement_.style.height = this.rippleSize_ + 'px';                                      // 3601\n  }                                                                                                  // 3602\n                                                                                                     // 3603\n  this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);                                    // 3604\n                                                                                                     // 3605\n  if (event.type === 'mousedown' && this.ignoringMouseDown_) {                                       // 3606\n    this.ignoringMouseDown_ = false;                                                                 // 3607\n  } else {                                                                                           // 3608\n    if (event.type === 'touchstart') {                                                               // 3609\n      this.ignoringMouseDown_ = true;                                                                // 3610\n    }                                                                                                // 3611\n    var frameCount = this.getFrameCount();                                                           // 3612\n    if (frameCount > 0) {                                                                            // 3613\n      return;                                                                                        // 3614\n    }                                                                                                // 3615\n    this.setFrameCount(1);                                                                           // 3616\n    var bound = event.currentTarget.getBoundingClientRect();                                         // 3617\n    var x;                                                                                           // 3618\n    var y;                                                                                           // 3619\n    // Check if we are handling a keyboard click.                                                    // 3620\n    if (event.clientX === 0 && event.clientY === 0) {                                                // 3621\n      x = Math.round(bound.width / 2);                                                               // 3622\n      y = Math.round(bound.height / 2);                                                              // 3623\n    } else {                                                                                         // 3624\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;                        // 3625\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;                        // 3626\n      x = Math.round(clientX - bound.left);                                                          // 3627\n      y = Math.round(clientY - bound.top);                                                           // 3628\n    }                                                                                                // 3629\n    this.setRippleXY(x, y);                                                                          // 3630\n    this.setRippleStyles(true);                                                                      // 3631\n    window.requestAnimationFrame(this.animFrameHandler.bind(this));                                  // 3632\n  }                                                                                                  // 3633\n};                                                                                                   // 3634\n                                                                                                     // 3635\n/**                                                                                                  // 3636\n * Handle mouse / finger up on element.                                                              // 3637\n * @param {Event} event The event that fired.                                                        // 3638\n * @private                                                                                          // 3639\n */                                                                                                  // 3640\nMaterialRipple.prototype.upHandler_ = function(event) {                                              // 3641\n  'use strict';                                                                                      // 3642\n                                                                                                     // 3643\n  // Don't fire for the artificial \"mouseup\" generated by a double-click.                            // 3644\n  if (event && event.detail !== 2) {                                                                 // 3645\n    this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);                               // 3646\n  }                                                                                                  // 3647\n};                                                                                                   // 3648\n                                                                                                     // 3649\n/**                                                                                                  // 3650\n * Initialize element.                                                                               // 3651\n */                                                                                                  // 3652\nMaterialRipple.prototype.init = function() {                                                         // 3653\n  'use strict';                                                                                      // 3654\n                                                                                                     // 3655\n  if (this.element_) {                                                                               // 3656\n    var recentering =                                                                                // 3657\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);                            // 3658\n    if (!this.element_.classList.contains(                                                           // 3659\n        this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {                                             // 3660\n      this.rippleElement_ = this.element_.querySelector('.' +                                        // 3661\n          this.CssClasses_.RIPPLE);                                                                  // 3662\n      this.frameCount_ = 0;                                                                          // 3663\n      this.rippleSize_ = 0;                                                                          // 3664\n      this.x_ = 0;                                                                                   // 3665\n      this.y_ = 0;                                                                                   // 3666\n                                                                                                     // 3667\n      // Touch start produces a compat mouse down event, which would cause a                         // 3668\n      // second ripples. To avoid that, we use this property to ignore the first                     // 3669\n      // mouse down after a touch start.                                                             // 3670\n      this.ignoringMouseDown_ = false;                                                               // 3671\n                                                                                                     // 3672\n      this.boundDownHandler = this.downHandler_.bind(this);                                          // 3673\n      this.element_.addEventListener('mousedown',                                                    // 3674\n        this.boundDownHandler);                                                                      // 3675\n      this.element_.addEventListener('touchstart',                                                   // 3676\n          this.boundDownHandler);                                                                    // 3677\n                                                                                                     // 3678\n      this.boundUpHandler = this.upHandler_.bind(this);                                              // 3679\n      this.element_.addEventListener('mouseup', this.boundUpHandler);                                // 3680\n      this.element_.addEventListener('mouseleave', this.boundUpHandler);                             // 3681\n      this.element_.addEventListener('touchend', this.boundUpHandler);                               // 3682\n      this.element_.addEventListener('blur', this.boundUpHandler);                                   // 3683\n                                                                                                     // 3684\n      this.getFrameCount = function() {                                                              // 3685\n        return this.frameCount_;                                                                     // 3686\n      };                                                                                             // 3687\n                                                                                                     // 3688\n      this.setFrameCount = function(fC) {                                                            // 3689\n        this.frameCount_ = fC;                                                                       // 3690\n      };                                                                                             // 3691\n                                                                                                     // 3692\n      this.getRippleElement = function() {                                                           // 3693\n        return this.rippleElement_;                                                                  // 3694\n      };                                                                                             // 3695\n                                                                                                     // 3696\n      this.setRippleXY = function(newX, newY) {                                                      // 3697\n        this.x_ = newX;                                                                              // 3698\n        this.y_ = newY;                                                                              // 3699\n      };                                                                                             // 3700\n                                                                                                     // 3701\n      this.setRippleStyles = function(start) {                                                       // 3702\n        if (this.rippleElement_ !== null) {                                                          // 3703\n          var transformString;                                                                       // 3704\n          var scale;                                                                                 // 3705\n          var size;                                                                                  // 3706\n          var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';                            // 3707\n                                                                                                     // 3708\n          if (start) {                                                                               // 3709\n            scale = this.Constant_.INITIAL_SCALE;                                                    // 3710\n            size = this.Constant_.INITIAL_SIZE;                                                      // 3711\n          } else {                                                                                   // 3712\n            scale = this.Constant_.FINAL_SCALE;                                                      // 3713\n            size = this.rippleSize_ + 'px';                                                          // 3714\n            if (recentering) {                                                                       // 3715\n              offset = 'translate(' + this.boundWidth / 2 + 'px, ' +                                 // 3716\n                this.boundHeight / 2 + 'px)';                                                        // 3717\n            }                                                                                        // 3718\n          }                                                                                          // 3719\n                                                                                                     // 3720\n          transformString = 'translate(-50%, -50%) ' + offset + scale;                               // 3721\n                                                                                                     // 3722\n          this.rippleElement_.style.webkitTransform = transformString;                               // 3723\n          this.rippleElement_.style.msTransform = transformString;                                   // 3724\n          this.rippleElement_.style.transform = transformString;                                     // 3725\n                                                                                                     // 3726\n          if (start) {                                                                               // 3727\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);                     // 3728\n          } else {                                                                                   // 3729\n            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);                        // 3730\n          }                                                                                          // 3731\n        }                                                                                            // 3732\n      };                                                                                             // 3733\n                                                                                                     // 3734\n      this.animFrameHandler = function() {                                                           // 3735\n        if (this.frameCount_-- > 0) {                                                                // 3736\n          window.requestAnimationFrame(this.animFrameHandler.bind(this));                            // 3737\n        } else {                                                                                     // 3738\n          this.setRippleStyles(false);                                                               // 3739\n        }                                                                                            // 3740\n      };                                                                                             // 3741\n    }                                                                                                // 3742\n  }                                                                                                  // 3743\n};                                                                                                   // 3744\n                                                                                                     // 3745\n/*                                                                                                   // 3746\n* Downgrade the component                                                                            // 3747\n*/                                                                                                   // 3748\nMaterialRipple.prototype.mdlDowngrade_ = function() {                                                // 3749\n  'use strict';                                                                                      // 3750\n  this.element_.removeEventListener('mousedown',                                                     // 3751\n  this.boundDownHandler);                                                                            // 3752\n  this.element_.removeEventListener('touchstart',                                                    // 3753\n      this.boundDownHandler);                                                                        // 3754\n                                                                                                     // 3755\n  this.element_.removeEventListener('mouseup', this.boundUpHandler);                                 // 3756\n  this.element_.removeEventListener('mouseleave', this.boundUpHandler);                              // 3757\n  this.element_.removeEventListener('touchend', this.boundUpHandler);                                // 3758\n  this.element_.removeEventListener('blur', this.boundUpHandler);                                    // 3759\n};                                                                                                   // 3760\n                                                                                                     // 3761\n// The component registers itself. It can assume componentHandler is available                       // 3762\n// in the global scope.                                                                              // 3763\ncomponentHandler.register({                                                                          // 3764\n  constructor: MaterialRipple,                                                                       // 3765\n  classAsString: 'MaterialRipple',                                                                   // 3766\n  cssClass: 'mdl-js-ripple-effect',                                                                  // 3767\n  widget: false                                                                                      // 3768\n});                                                                                                  // 3769\n                                                                                                     // 3770\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]