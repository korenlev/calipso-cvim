{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/lib/d3three.js","filenameRelative":"/client/lib/d3three.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/lib/d3three.js.map","sourceFileName":"/client/lib/d3three.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"d3three"},"ignored":false,"code":"var chartOffset = 0;\n\n// D3.layout.force3d.js\n// (C) 2012 ziggy.jonsson.nyc@gmail.com\n// BSD license (http://opensource.org/licenses/BSD-3-Clause)\n\nd3.layout.force3d = function () {\n  var forceXY = d3.layout.force(),\n      forceZ = d3.layout.force(),\n      zNodes = {},\n      zLinks = {},\n      nodeID = 1,\n      linkID = 1,\n      tickFunction = Object;\n\n  var force3d = {};\n\n  Object.keys(forceXY).forEach(function (d) {\n    force3d[d] = function () {\n      var result = forceXY[d].apply(this, arguments);\n      if (d != \"nodes\" && d != \"links\") forceZ[d].apply(this, arguments);\n      return result == forceXY ? force3d : result;\n    };\n  });\n\n  force3d.on = function (name, fn) {\n    tickFunction = fn;\n    return force3d;\n  };\n\n  forceXY.on(\"tick\", function () {\n\n    // Refresh zNodes add new, delete removed\n    var _zNodes = {};\n    forceXY.nodes().forEach(function (d, i) {\n      if (!d.id) d.id = nodeID++;\n      _zNodes[d.id] = zNodes[d.id] || { x: d.z, px: d.z, py: d.z, y: d.z, id: d.id };\n      d.z = _zNodes[d.id].x;\n    });\n    zNodes = _zNodes;\n\n    // Refresh zLinks add new, delete removed\n    var _zLinks = {};\n    forceXY.links().forEach(function (d) {\n      var nytt = false;\n      if (!d.linkID) {\n        d.linkID = linkID++;nytt = true;\n      }\n      _zLinks[d.linkID] = zLinks[d.linkID] || { target: zNodes[d.target.id], source: zNodes[d.source.id] };\n    });\n    zLinks = _zLinks;\n\n    // Update the nodes/links in forceZ\n    forceZ.nodes(d3.values(zNodes));\n    forceZ.links(d3.values(zLinks));\n    forceZ.start(); // Need to kick forceZ so we don't lose the update mechanism\n\n    // And run the user defined function, if defined\n    tickFunction();\n  });\n\n  // Expose the sub-forces for debugging purposes\n  force3d.xy = forceXY;\n  force3d.z = forceZ;\n\n  return force3d;\n};\n// end of d3.layout.force3d.js\n\n// Override default functions for d3\nTHREE.Object3D.prototype.appendChild = function (c) {\n  this.add(c);\n  return c;\n};\nTHREE.Object3D.prototype.querySelectorAll = function () {\n  return [];\n};\n\n// this one is to use D3's .attr() on THREE's objects\nTHREE.Object3D.prototype.setAttribute = function (name, value) {\n  var chain = name.split('.');\n  var object = this;\n  for (var i = 0; i < chain.length - 1; i++) {\n    object = object[chain[i]];\n  }\n  object[chain[chain.length - 1]] = value;\n};\n\n// d3three object\nD3THREE = function D3THREE(singleton) {\n  this.labelGroup = new THREE.Object3D();\n  this.maxY = 0;\n  this.axisObjects = {};\n\n  this.running = true;\n\n  if (singleton) {\n    if (typeof d3three !== 'undefined') {\n      d3three.stop();\n    }\n    d3three = this;\n  }\n\n  //if (!singleton) {\n  //  d3threes.push(this);\n  //}\n};\n\nD3THREE.prototype.init = function (divId) {\n  // standard THREE stuff, straight from examples\n  this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, preserveDrawingBuffer: true });\n  this.renderer.shadowMap.enabled = true;\n  this.renderer.shadowMap.type = THREE.PCFSoftShadow;\n  this.renderer.shadowMapSoft = true;\n  this.renderer.shadowCameraNear = 1000;\n  this.renderer.shadowCameraFar = 10000;\n  this.renderer.shadowCameraFov = 50;\n  this.renderer.shadowMapBias = 0.0039;\n  this.renderer.shadowMapDarkness = 0.25;\n  this.renderer.shadowMapWidth = 10000;\n  this.renderer.shadowMapHeight = 10000;\n  this.renderer.physicallyBasedShading = true;\n\n  this.divId = divId;\n  this.width = document.getElementById(divId).offsetWidth;\n  this.height = document.getElementById(divId).offsetHeight;\n\n  this.renderer.setSize(this.width, this.height);\n\n  document.getElementById(divId).appendChild(this.renderer.domElement);\n\n  this.camera = new THREE.PerspectiveCamera(30, this.width / this.height, 1, 100000);\n  this.camera.position.z = -1000;\n  this.camera.position.x = -800;\n  this.camera.position.y = 600;\n\n  this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n\n  this.scene = new THREE.Scene();\n\n  this.defaultLight = new THREE.AmbientLight(0xbbbbb); // soft white light\n  this.scene.add(this.defaultLight);\n\n  this.scene.add(this.labelGroup);\n\n  var self = this;\n  window.addEventListener('resize', self.onWindowResize.bind(self), false);\n};\n\nD3THREE.prototype.onWindowResize = function () {\n  var self = this;\n  self.camera.aspect = self.width / self.height;\n  self.camera.updateProjectionMatrix();\n\n  self.renderer.setSize(self.width, self.height);\n};\n\nD3THREE.prototype.animate = function () {\n  var self = this;\n  if (this.running) {\n    setTimeout(function () {\n      this.requestId = requestAnimationFrame(self.animate.bind(self));\n    }, 1000 / 15);\n\n    self.renderer.render(self.scene, self.camera);\n    self.controls.update();\n\n    self.labelGroup.children.forEach(function (l) {\n      l.rotation.setFromRotationMatrix(self.camera.matrix, \"YXZ\");\n      l.rotation.x = 0;\n      l.rotation.z = 0;\n    });\n  } else {\n    window.removeEventListener('resize', self.onWindowResize.bind(self));\n    while (self.scene.children.length > 0) {\n      var childObject = self.scene.children[0];\n      if (childObject.geometry) {\n        childObject.geometry.dispose();\n      }\n      if (childObject.material) {\n        childObject.material.dispose();\n      }\n      self.scene.remove(childObject);\n      delete childObject;\n    }\n\n    self.renderer.context = null;\n    self.renderer.domElement = null;\n    self.renderer = null;\n\n    self.camera = null;\n    self.controls = null;\n    self.scene = null;\n    self.labelGroup = null;\n\n    cancelAnimationFrame(self.requestId);\n  }\n};\n\nD3THREE.prototype.stop = function () {\n  this.running = false;\n};\n\nD3THREE.prototype.render = function (element, data) {\n  element.render(data);\n};\n\nD3THREE.createAxis = function (dt) {\n  return new D3THREE.Axis(dt);\n};\n\n// d3three axis\nD3THREE.Axis = function (dt) {\n  this._scale = d3.scale.linear();\n  this._orient = \"x\";\n  this._tickFormat = function (d) {\n    return d;\n  };\n  this._dt = dt;\n};\n\nD3THREE.Axis.prototype.orient = function (o) {\n  if (o) {\n    this._dt.axisObjects[o] = this;\n    this._orient = o;\n  }\n  return this;\n};\n\nD3THREE.Axis.prototype.scale = function (s) {\n  if (s) {\n    this._scale = s;\n  }\n  return this;\n};\n\nD3THREE.Axis.prototype.tickFormat = function (f) {\n  if (f) {\n    this._tickFormat = f;\n  }\n  return this;\n};\n\nD3THREE.Axis.prototype.interval = function () {\n  var interval;\n  if (typeof this._scale.rangeBand === 'function') {\n    // ordinal scale\n    interval = this._scale.range()[1];\n  } else {\n    interval = this._scale.range()[1] / (this._scale.ticks().length - 1);\n  }\n  return interval;\n};\n\nD3THREE.Axis.prototype.ticks = function () {\n  var ticks;\n  if (typeof this._scale.rangeBand === 'function') {\n    // ordinal scale\n    ticks = this._scale.domain();\n  } else {\n    ticks = this._scale.ticks();\n  }\n  return ticks;\n};\n\nD3THREE.Axis.prototype.getRotationShift = function () {\n  return this.interval() * (this.ticks().length - 1) / 2;\n};\n\nD3THREE.Axis.prototype.render = function () {\n  var material = new THREE.LineBasicMaterial({\n    color: 0xbbbbbb,\n    linewidth: 2\n  });\n\n  var tickMaterial = new THREE.LineBasicMaterial({\n    color: 0xbbbbbb,\n    linewidth: 1\n  });\n\n  var geometry = new THREE.Geometry();\n\n  interval = this.interval();\n\n  var interval = this.interval(),\n      ticks = this.ticks();\n\n  // x,y axis shift, so rotation is from center of screen\n  var xAxisShift = this._dt.axisObjects.x.getRotationShift(),\n      yAxisShift = this._dt.axisObjects.y.getRotationShift();\n\n  for (var i = 0; i < ticks.length; i++) {\n    var tickMarGeometry = new THREE.Geometry();\n\n    var shape = new THREE.TextGeometry(this._tickFormat(ticks[i]), {\n      size: 5,\n      height: 1,\n      curveSegments: 20\n    });\n    var wrapper = new THREE.MeshBasicMaterial({ color: 0xbbbbbb });\n    var words = new THREE.Mesh(shape, wrapper);\n\n    if (this._orient === \"y\") {\n      // tick\n      geometry.vertices.push(new THREE.Vector3(i * interval - yAxisShift, chartOffset, 0 - xAxisShift));\n\n      tickMarGeometry.vertices.push(new THREE.Vector3(i * interval - yAxisShift, chartOffset, 0 - xAxisShift));\n      tickMarGeometry.vertices.push(new THREE.Vector3(i * interval - yAxisShift, -10 + chartOffset, 0 - xAxisShift));\n      var tickLine = new THREE.Line(tickMarGeometry, tickMaterial);\n      this._dt.scene.add(tickLine);\n\n      if (i * interval > this._dt.maxY) {\n        this._dt.maxY = i * interval;\n      }\n\n      words.position.set(i * interval - yAxisShift, -20 + chartOffset, 0 - xAxisShift);\n    } else if (this._orient === \"z\") {\n      // tick\n      geometry.vertices.push(new THREE.Vector3(0 + this._dt.maxY - yAxisShift, i * interval + chartOffset, 0 - xAxisShift));\n\n      tickMarGeometry.vertices.push(new THREE.Vector3(0 + this._dt.maxY - yAxisShift, i * interval + chartOffset, 0 - xAxisShift));\n      tickMarGeometry.vertices.push(new THREE.Vector3(10 + this._dt.maxY - yAxisShift, i * interval + chartOffset, 0 - xAxisShift));\n      var tickLine = new THREE.Line(tickMarGeometry, tickMaterial);\n      this._dt.scene.add(tickLine);\n\n      words.position.set(20 + this._dt.maxY - yAxisShift, i * interval + chartOffset, 0 - xAxisShift);\n    } else if (this._orient === \"x\") {\n      // tick\n      geometry.vertices.push(new THREE.Vector3(0 - yAxisShift, chartOffset, i * interval - xAxisShift));\n\n      tickMarGeometry.vertices.push(new THREE.Vector3(0 - yAxisShift, 0 + chartOffset, i * interval - xAxisShift));\n      tickMarGeometry.vertices.push(new THREE.Vector3(0 - yAxisShift, -10 + chartOffset, i * interval - xAxisShift));\n      var tickLine = new THREE.Line(tickMarGeometry, tickMaterial);\n      this._dt.scene.add(tickLine);\n\n      words.position.set(0 - yAxisShift, -20 + chartOffset, i * interval - xAxisShift);\n    }\n\n    this._dt.labelGroup.add(words);\n  }\n\n  var line = new THREE.Line(geometry, material);\n\n  this._dt.scene.add(line);\n};\n\n// Chart object\nD3THREE.Chart = function () {};\n\nD3THREE.Chart.prototype.config = function (c) {\n  this._config = $.extend(this._config, c);\n};\n\nD3THREE.Chart.prototype.init = function (dt) {\n  this._dt = dt;\n  // mouse move\n  var self = this;\n  this._dt.renderer.domElement.addEventListener('mousemove', function (e) {\n    self.onDocumentMouseMove(e);\n  }, false);\n};\n\nvar cumulativeOffset = function cumulativeOffset(element) {\n  var top = 0,\n      left = 0;\n  do {\n    top += element.offsetTop || 0;\n    left += element.offsetLeft || 0;\n    element = element.offsetParent;\n  } while (element);\n\n  return {\n    top: top,\n    left: left\n  };\n};\n\nD3THREE.Chart.prototype.detectNodeHover = function (e) {\n  var boundingRect = this._dt.renderer.domElement.getBoundingClientRect();\n\n  var vector = new THREE.Vector3();\n  vector.x = (e.clientX - boundingRect.left) / this._dt.renderer.domElement.width * 2 - 1;\n  vector.y = 1 - (e.clientY - boundingRect.top) / this._dt.renderer.domElement.height * 2;\n  vector.z = 1;\n\n  // create a check ray\n  vector.unproject(this._dt.camera);\n  var ray = new THREE.Raycaster(this._dt.camera.position, vector.sub(this._dt.camera.position).normalize());\n\n  var intersects = ray.intersectObjects(this._nodeGroup.children);\n\n  for (var i = 0; i < this._nodeGroup.children.length; i++) {\n    this._nodeGroup.children[i].material.opacity = 1;\n  }\n\n  if (intersects.length > 0) {\n    var obj = intersects[0].object;\n    obj.material.opacity = 0.5;\n\n    var html = \"\";\n\n    html += \"<div class=\\\"tooltip_kv\\\">\";\n    html += \"<span>\";\n    html += \"x: \" + this._dt.axisObjects.x._tickFormat(obj.userData.x);\n    html += \"</span><br>\";\n    html += \"<span>\";\n    html += \"y: \" + this._dt.axisObjects.y._tickFormat(obj.userData.y);\n    html += \"</span><br>\";\n    html += \"<span>\";\n    html += \"z: \" + this._dt.axisObjects.z._tickFormat(obj.userData.z);\n    html += \"</span><br>\";\n    html += \"</div>\";\n\n    document.getElementById(\"tooltip-container\").innerHTML = html;\n    document.getElementById(\"tooltip-container\").style.display = \"block\";\n\n    document.getElementById(\"tooltip-container\").style.top = e.pageY + 10 + \"px\";\n    document.getElementById(\"tooltip-container\").style.left = e.pageX + 10 + \"px\";\n  } else {\n    document.getElementById(\"tooltip-container\").style.display = \"none\";\n  }\n};\n\n// Scatter plot\nD3THREE.Scatter = function (dt) {\n  this.init(dt);\n\n  this._nodeGroup = new THREE.Object3D();\n\n  this._config = { color: 0x4682B4, pointRadius: 5 };\n};\n\nD3THREE.Scatter.prototype = new D3THREE.Chart();\n\nD3THREE.Scatter.prototype.onDocumentMouseMove = function (e) {\n  // detect intersected spheres\n  this.detectNodeHover(e);\n};\n\nD3THREE.Scatter.prototype.render = function (data) {\n  var geometry = new THREE.SphereGeometry(this._config.pointRadius, 32, 32);\n\n  this._dt.scene.add(this._nodeGroup);\n\n  // x,y axis shift, so rotation is from center of screen\n  var xAxisShift = this._dt.axisObjects.x.getRotationShift(),\n      yAxisShift = this._dt.axisObjects.y.getRotationShift();\n\n  var self = this;\n  d3.select(this._nodeGroup).selectAll().data(data).enter().append(function (d) {\n    var material = new THREE.MeshBasicMaterial({\n      color: self._config.color });\n    var mesh = new THREE.Mesh(geometry, material);\n    mesh.userData = { x: d.x, y: d.y, z: d.z };\n    return mesh;\n  }).attr(\"position.z\", function (d) {\n    return self._dt.axisObjects.x._scale(d.x) - xAxisShift;\n  }).attr(\"position.x\", function (d) {\n    return self._dt.axisObjects.y._scale(d.y) - yAxisShift;\n  }).attr(\"position.y\", function (d) {\n    return self._dt.axisObjects.z._scale(d.z) + chartOffset;\n  });\n};\n\n// Surface plot\nD3THREE.Surface = function (dt) {\n  this.init(dt);\n\n  this._nodeGroup = new THREE.Object3D();\n\n  this._config = { color: 0x4682B4, pointColor: 0xff7f0e, pointRadius: 2 };\n};\n\nD3THREE.Surface.prototype = new D3THREE.Chart();\n\nD3THREE.Surface.prototype.onDocumentMouseMove = function (e) {\n  // detect intersected spheres\n  var boundingRect = this._dt.renderer.domElement.getBoundingClientRect();\n\n  var vector = new THREE.Vector3();\n  vector.x = (e.clientX - boundingRect.left) / this._dt.renderer.domElement.width * 2 - 1;\n  vector.y = 1 - (e.clientY - boundingRect.top) / this._dt.renderer.domElement.height * 2;\n  vector.z = 1;\n\n  // create a check ray\n  vector.unproject(this._dt.camera);\n  var ray = new THREE.Raycaster(this._dt.camera.position, vector.sub(this._dt.camera.position).normalize());\n\n  var meshIntersects = ray.intersectObjects([this._meshSurface]);\n\n  if (meshIntersects.length > 0) {\n    for (var i = 0; i < this._nodeGroup.children.length; i++) {\n      this._nodeGroup.children[i].visible = true;\n      this._nodeGroup.children[i].material.opacity = 1;\n    }\n\n    this.detectNodeHover(e);\n  } else {\n    // hide nodes\n    for (var i = 0; i < this._nodeGroup.children.length; i++) {\n      this._nodeGroup.children[i].visible = false;\n    }\n  }\n};\n\nD3THREE.Surface.prototype.render = function (threeData) {\n  /* render data points */\n  var geometry = new THREE.SphereGeometry(this._config.pointRadius, 32, 32);\n\n  this._dt.scene.add(this._nodeGroup);\n\n  // x,y axis shift, so rotation is from center of screen\n  var xAxisShift = this._dt.axisObjects.x.getRotationShift(),\n      yAxisShift = this._dt.axisObjects.y.getRotationShift();\n\n  var self = this;\n  d3.select(this._nodeGroup).selectAll().data(threeData).enter().append(function (d) {\n    var material = new THREE.MeshBasicMaterial({\n      color: self._config.pointColor });\n    var mesh = new THREE.Mesh(geometry, material);\n    mesh.userData = { x: d.x, y: d.y, z: d.z };\n    mesh.visible = false;\n    return mesh;\n  }).attr(\"position.z\", function (d) {\n    return self._dt.axisObjects.x._scale(d.x) - xAxisShift;\n  }).attr(\"position.x\", function (d) {\n    return self._dt.axisObjects.y._scale(d.y) - yAxisShift;\n  }).attr(\"position.y\", function (d) {\n    return self._dt.axisObjects.z._scale(d.z) + chartOffset;\n  });\n\n  /* custom surface */\n  function distance(v1, v2) {\n    var dx = v1.x - v2.x;\n    var dy = v1.y - v2.y;\n    var dz = v1.z - v2.z;\n\n    return Math.sqrt(dx * dx + dz * dz);\n  }\n\n  var vertices = [];\n  var holes = [];\n  var triangles, mesh;\n  var geometry = new THREE.Geometry();\n  var material = new THREE.MeshBasicMaterial({ color: this._config.color });\n\n  for (var i = 0; i < threeData.length; i++) {\n    vertices.push(new THREE.Vector3(self._dt.axisObjects.y._scale(threeData[i].y) - yAxisShift, self._dt.axisObjects.z._scale(threeData[i].z) + chartOffset, self._dt.axisObjects.x._scale(threeData[i].x) - xAxisShift));\n  }\n\n  geometry.vertices = vertices;\n\n  for (var i = 0; i < vertices.length; i++) {\n    // find three closest vertices to generate surface\n    var v1, v2, v3;\n    var distances = [];\n\n    // find vertices in same y or y + 1 row\n    var minY = Number.MAX_VALUE;\n    for (var j = i + 1; j < vertices.length; j++) {\n      if (i !== j && vertices[j].x > vertices[i].x) {\n        if (vertices[j].x < minY) {\n          minY = vertices[j].x;\n        }\n      }\n    }\n\n    var rowVertices = [],\n        row2Vertices = [];\n    for (var j = i + 1; j < vertices.length; j++) {\n      if (i !== j && vertices[j].x === vertices[i].x) {\n        rowVertices.push({ index: j, v: vertices[j] });\n      }\n      if (i !== j && vertices[j].x === minY) {\n        row2Vertices.push({ index: j, v: vertices[j] });\n      }\n    }\n\n    if (rowVertices.length >= 1 && row2Vertices.length >= 2) {\n      // find smallest x\n      rowVertices.sort(function (a, b) {\n        if (a.v.z < b.v.z) {\n          return -1;\n        } else if (a.v.z === b.v.z) {\n          return 0;\n        } else {\n          return 1;\n        }\n      });\n\n      v1 = rowVertices[0].index;\n\n      row2Vertices.sort(function (a, b) {\n        if (a.v.z < b.v.z) {\n          return -1;\n        } else if (a.v.z === b.v.z) {\n          return 0;\n        } else {\n          return 1;\n        }\n      });\n\n      v2 = row2Vertices[0].index;\n      v3 = row2Vertices[1].index;\n\n      var fv = [i, v1, v2, v3];\n      fv = fv.sort(function (a, b) {\n        if (a < b) return -1;else if (a === b) return 0;else return 1;\n      });\n\n      geometry.faces.push(new THREE.Face3(fv[1], fv[0], fv[3]));\n      geometry.faces.push(new THREE.Face3(fv[0], fv[2], fv[3]));\n    }\n  }\n\n  this._meshSurface = new THREE.Mesh(geometry, material);\n  this._dt.scene.add(this._meshSurface);\n};\n\n// Bar plot\nD3THREE.Bar = function (dt) {\n  this.init(dt);\n\n  this._nodeGroup = new THREE.Object3D();\n\n  this._config = { color: 0x4682B4, barSize: 5 };\n};\n\nD3THREE.Bar.prototype = new D3THREE.Chart();\n\nD3THREE.Bar.prototype.onDocumentMouseMove = function (e) {\n  this.detectNodeHover(e);\n};\n\nD3THREE.Bar.prototype.render = function (threeData) {\n  /* render data points */\n  this._dt.scene.add(this._nodeGroup);\n\n  // x,y axis shift, so rotation is from center of screen\n  var xAxisShift = this._dt.axisObjects.x.getRotationShift(),\n      yAxisShift = this._dt.axisObjects.y.getRotationShift();\n\n  var self = this;\n  d3.select(this._nodeGroup).selectAll().data(threeData).enter().append(function (d) {\n    var height = self._dt.axisObjects.z._scale(d.z) + chartOffset;\n    var geometry = new THREE.BoxGeometry(self._config.barSize, height, self._config.barSize);\n    var material = new THREE.MeshBasicMaterial({\n      color: self._config.color });\n    var mesh = new THREE.Mesh(geometry, material);\n    mesh.userData = { x: d.x, y: d.y, z: d.z };\n    return mesh;\n  }).attr(\"position.z\", function (d) {\n    return self._dt.axisObjects.x._scale(d.x) - xAxisShift;\n  }).attr(\"position.x\", function (d) {\n    return self._dt.axisObjects.y._scale(d.y) - yAxisShift;\n  }).attr(\"position.y\", function (d) {\n    var height = self._dt.axisObjects.z._scale(d.z) + chartOffset;\n    return height / 2;\n  });\n};\n\n// Force layout plot\nD3THREE.Force = function (dt) {\n  this.init(dt);\n\n  this._nodeGroup = new THREE.Object3D();\n\n  this._config = { color: 0x4682B4, linkColor: 0xcccccc, linkWidth: 1 };\n};\n\nD3THREE.Force.prototype = new D3THREE.Chart();\n\nD3THREE.Force.prototype.onDocumentMouseMove = function (e) {};\n\nD3THREE.Force.prototype.render = function (threeData) {\n  var spheres = [],\n      three_links = [];\n  // Define the 3d force\n  var force = d3.layout.force3d().nodes(sort_data = []).links(links = []).size([50, 50]).gravity(0.3).charge(-400);\n\n  var DISTANCE = 1;\n\n  for (var i = 0; i < threeData.nodes.length; i++) {\n    sort_data.push({ x: threeData.nodes.x + DISTANCE, y: threeData.nodes.y + DISTANCE, z: 0 });\n\n    // set up the sphere vars\n    var radius = 5,\n        segments = 16,\n        rings = 16;\n\n    // create the sphere's material\n    var sphereMaterial = new THREE.MeshLambertMaterial({ color: this._config.color });\n\n    var sphere = new THREE.Mesh(new THREE.SphereGeometry(radius, segments, rings), sphereMaterial);\n\n    spheres.push(sphere);\n\n    // add the sphere to the scene\n    this._dt.scene.add(sphere);\n  }\n\n  for (var i = 0; i < threeData.links.length; i++) {\n    links.push({ target: sort_data[threeData.links[i].target], source: sort_data[threeData.links[i].source] });\n\n    var material = new THREE.LineBasicMaterial({ color: this._config.linkColor,\n      linewidth: this._config.linkWidth });\n    var geometry = new THREE.Geometry();\n\n    geometry.vertices.push(new THREE.Vector3(0, 0, 0));\n    geometry.vertices.push(new THREE.Vector3(0, 0, 0));\n    var line = new THREE.Line(geometry, material);\n    line.userData = { source: threeData.links[i].source,\n      target: threeData.links[i].target };\n    three_links.push(line);\n    this._dt.scene.add(line);\n\n    force.start();\n  }\n\n  // set up the axes\n  var x = d3.scale.linear().domain([0, 350]).range([0, 10]),\n      y = d3.scale.linear().domain([0, 350]).range([0, 10]),\n      z = d3.scale.linear().domain([0, 350]).range([0, 10]);\n\n  var self = this;\n  force.on(\"tick\", function (e) {\n    for (var i = 0; i < sort_data.length; i++) {\n      spheres[i].position.set(x(sort_data[i].x) * 40 - 40, y(sort_data[i].y) * 40 - 40, z(sort_data[i].z) * 40 - 40);\n\n      for (var j = 0; j < three_links.length; j++) {\n        var line = three_links[j];\n        var vi = -1;\n        if (line.userData.source === i) {\n          vi = 0;\n        }\n        if (line.userData.target === i) {\n          vi = 1;\n        }\n\n        if (vi >= 0) {\n          line.geometry.vertices[vi].x = x(sort_data[i].x) * 40 - 40;\n          line.geometry.vertices[vi].y = y(sort_data[i].y) * 40 - 40;\n          line.geometry.vertices[vi].z = y(sort_data[i].z) * 40 - 40;\n          line.geometry.verticesNeedUpdate = true;\n        }\n      }\n    }\n  });\n};","ast":null,"map":{"version":3,"sources":["/client/lib/d3three.js"],"names":[],"mappings":"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","file":"/client/lib/d3three.js.map","sourcesContent":["var chartOffset = 0;\n\n// D3.layout.force3d.js\n// (C) 2012 ziggy.jonsson.nyc@gmail.com\n// BSD license (http://opensource.org/licenses/BSD-3-Clause)\n\nd3.layout.force3d = function() {\n    var  forceXY = d3.layout.force()\n        ,forceZ = d3.layout.force()\n        ,zNodes = {}\n        ,zLinks = {}\n        ,nodeID = 1\n        ,linkID = 1\n        ,tickFunction = Object\n\n    var force3d = {}\n\n    Object.keys(forceXY).forEach(function(d) {\n        force3d[d] = function() {\n            var result = forceXY[d].apply(this,arguments)\n            if (d !=\"nodes\" && d!=\"links\")  forceZ[d].apply(this,arguments)\n            return (result == forceXY) ? force3d : result\n        }\n    })\n\n\n    force3d.on = function(name,fn) {\n        tickFunction = fn\n        return force3d\n    }\n\n\n    forceXY.on(\"tick\",function() {\n\n        // Refresh zNodes add new, delete removed\n        var _zNodes = {}\n        forceXY.nodes().forEach(function(d,i) {\n            if (!d.id) d.id = nodeID++\n            _zNodes[d.id] = zNodes[d.id] ||  {x:d.z,px:d.z,py:d.z,y:d.z,id:d.id}\n            d.z =  _zNodes[d.id].x\n        })\n        zNodes = _zNodes\n\n        // Refresh zLinks add new, delete removed\n        var _zLinks = {}\n        forceXY.links().forEach(function(d) {\n            var nytt = false\n            if (!d.linkID) { d.linkID = linkID++;nytt=true}\n            _zLinks[d.linkID] = zLinks[d.linkID]  || {target:zNodes[d.target.id],source:zNodes[d.source.id]}\n\n        })\n        zLinks = _zLinks\n\n        // Update the nodes/links in forceZ\n        forceZ.nodes(d3.values(zNodes))\n        forceZ.links(d3.values(zLinks))\n        forceZ.start() // Need to kick forceZ so we don't lose the update mechanism\n\n        // And run the user defined function, if defined\n        tickFunction()\n    })\n\n    // Expose the sub-forces for debugging purposes\n    force3d.xy = forceXY\n    force3d.z = forceZ\n\n    return force3d\n}\n// end of d3.layout.force3d.js\n\n// Override default functions for d3\nTHREE.Object3D.prototype.appendChild = function (c) {\n  this.add(c);\n  return c;\n};\nTHREE.Object3D.prototype.querySelectorAll = function () { return []; };\n\n// this one is to use D3's .attr() on THREE's objects\nTHREE.Object3D.prototype.setAttribute = function (name, value) {\n    var chain = name.split('.');\n    var object = this;\n    for (var i = 0; i < chain.length - 1; i++) {\n        object = object[chain[i]];\n    }\n    object[chain[chain.length - 1]] = value;\n}\n\n// d3three object\nD3THREE = function(singleton) {\n  this.labelGroup = new THREE.Object3D();\n  this.maxY = 0;\n  this.axisObjects = {};\n\n  this.running = true;\n\n  if (singleton) {\n    if (typeof(d3three) !== 'undefined') {\n      d3three.stop();\n    }\n    d3three = this;\n  }\n\n  //if (!singleton) {\n  //  d3threes.push(this);\n  //}\n}\n\nD3THREE.prototype.init = function(divId) {\n  // standard THREE stuff, straight from examples\n  this.renderer = new THREE.WebGLRenderer({antialias: true, alpha : true, preserveDrawingBuffer: true});\n  this.renderer.shadowMap.enabled = true;\n  this.renderer.shadowMap.type = THREE.PCFSoftShadow;\n  this.renderer.shadowMapSoft = true;\n  this.renderer.shadowCameraNear = 1000;\n  this.renderer.shadowCameraFar = 10000;\n  this.renderer.shadowCameraFov = 50;\n  this.renderer.shadowMapBias = 0.0039;\n  this.renderer.shadowMapDarkness = 0.25;\n  this.renderer.shadowMapWidth = 10000;\n  this.renderer.shadowMapHeight = 10000;\n  this.renderer.physicallyBasedShading = true;\n\n  this.divId = divId;\n  this.width = document.getElementById(divId).offsetWidth;\n  this.height = document.getElementById(divId).offsetHeight;\n\n  this.renderer.setSize( this.width, this.height );\n\n  document.getElementById(divId).appendChild( this.renderer.domElement );\n\n  this.camera = new THREE.PerspectiveCamera( 30, this.width / this.height, 1, 100000 );\n  this.camera.position.z = -1000;\n  this.camera.position.x = -800;\n  this.camera.position.y = 600;\n\n  this.controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n\n  this.scene = new THREE.Scene();\n\n  this.defaultLight = new THREE.AmbientLight( 0xbbbbb ); // soft white light\n  this.scene.add( this.defaultLight );\n\n  this.scene.add(this.labelGroup);\n\n  var self = this;\n  window.addEventListener( 'resize', self.onWindowResize.bind(self), false );\n}\n\nD3THREE.prototype.onWindowResize = function() {\n  var self = this;\n  self.camera.aspect = self.width / self.height;\n  self.camera.updateProjectionMatrix();\n\n  self.renderer.setSize( self.width, self.height );\n}\n\nD3THREE.prototype.animate = function() {\n  var self = this;\n  if (this.running) {\n    setTimeout( function() {\n      this.requestId = requestAnimationFrame( self.animate.bind(self) );\n    }, 1000 / 15 );\n\n    self.renderer.render( self.scene, self.camera );\n    self.controls.update();\n\n    self.labelGroup.children.forEach(function(l){\n      l.rotation.setFromRotationMatrix(self.camera.matrix, \"YXZ\");\n      l.rotation.x = 0;\n      l.rotation.z = 0;\n    });\n  } else {\n    window.removeEventListener( 'resize', self.onWindowResize.bind(self) );\n    while (self.scene.children.length > 0) {\n      var childObject = self.scene.children[0];\n      if (childObject.geometry) {\n        childObject.geometry.dispose();\n      }\n      if (childObject.material) {\n        childObject.material.dispose();\n      }\n      self.scene.remove(childObject);\n      delete(childObject);\n    }\n\n    self.renderer.context = null;\n    self.renderer.domElement = null;\n    self.renderer = null;\n\n    self.camera = null;\n    self.controls = null;\n    self.scene = null;\n    self.labelGroup = null;\n\n    cancelAnimationFrame(self.requestId);\n  }\n}\n\nD3THREE.prototype.stop = function() {\n  this.running = false;\n}\n\nD3THREE.prototype.render = function(element, data) {\n  element.render(data);\n}\n\nD3THREE.createAxis = function(dt) {\n  return new D3THREE.Axis(dt);\n}\n\n// d3three axis\nD3THREE.Axis = function(dt) {\n  this._scale = d3.scale.linear();\n  this._orient = \"x\";\n  this._tickFormat = function(d) { return d };\n  this._dt = dt;\n}\n\nD3THREE.Axis.prototype.orient = function(o) {\n  if (o) {\n    this._dt.axisObjects[o] = this;\n    this._orient = o;\n  }\n  return this;\n}\n\nD3THREE.Axis.prototype.scale = function(s) {\n  if (s) {\n    this._scale = s;\n  }\n  return this;\n}\n\nD3THREE.Axis.prototype.tickFormat = function(f) {\n  if (f) {\n    this._tickFormat = f;\n  }\n  return this;\n}\n\nD3THREE.Axis.prototype.interval = function() {\n  var interval;\n  if (typeof(this._scale.rangeBand) === 'function') {\n    // ordinal scale\n    interval = this._scale.range()[1];\n  } else {\n    interval = this._scale.range()[1] / (this._scale.ticks().length - 1);\n  }\n  return interval;\n}\n\nD3THREE.Axis.prototype.ticks = function() {\n  var ticks;\n  if (typeof(this._scale.rangeBand) === 'function') {\n    // ordinal scale\n    ticks = this._scale.domain();\n  } else {\n    ticks = this._scale.ticks();\n  }\n  return ticks;\n}\n\nD3THREE.Axis.prototype.getRotationShift = function() {\n  return this.interval() * (this.ticks().length - 1) / 2;\n}\n\nD3THREE.Axis.prototype.render = function() {\n  var material = new THREE.LineBasicMaterial({\n    color: 0xbbbbbb,\n    linewidth: 2\n  });\n\n  var tickMaterial = new THREE.LineBasicMaterial({\n    color: 0xbbbbbb,\n    linewidth: 1\n  });\n\n  var geometry = new THREE.Geometry();\n\n  interval = this.interval();\n\n  var interval = this.interval(), ticks = this.ticks();\n\n  // x,y axis shift, so rotation is from center of screen\n  var xAxisShift = this._dt.axisObjects.x.getRotationShift(),\n      yAxisShift = this._dt.axisObjects.y.getRotationShift();\n\n  for (var i = 0; i < ticks.length; i++) {\n    var tickMarGeometry = new THREE.Geometry();\n\n    var shape = new THREE.TextGeometry(this._tickFormat(ticks[i]),\n      {\n        size: 5,\n        height: 1,\n        curveSegments: 20\n      });\n    var wrapper = new THREE.MeshBasicMaterial({color: 0xbbbbbb});\n    var words = new THREE.Mesh(shape, wrapper);\n\n    if (this._orient === \"y\") {\n      // tick\n      geometry.vertices.push(new THREE.Vector3(i * interval - yAxisShift, chartOffset, 0 - xAxisShift));\n\n      tickMarGeometry.vertices.push(new THREE.Vector3(i * interval - yAxisShift, chartOffset, 0 - xAxisShift));\n      tickMarGeometry.vertices.push(new THREE.Vector3(i * interval - yAxisShift, -10 + chartOffset, 0 - xAxisShift));\n      var tickLine = new THREE.Line(tickMarGeometry, tickMaterial);\n      this._dt.scene.add(tickLine);\n\n      if (i * interval > this._dt.maxY) {\n        this._dt.maxY = i * interval;\n      }\n\n      words.position.set(i * interval - yAxisShift, -20 + chartOffset, 0 - xAxisShift);\n    } else if (this._orient === \"z\") {\n      // tick\n      geometry.vertices.push(new THREE.Vector3(0 + this._dt.maxY - yAxisShift, i * interval + chartOffset, 0 - xAxisShift));\n\n      tickMarGeometry.vertices.push(new THREE.Vector3(0 + this._dt.maxY - yAxisShift, i * interval + chartOffset, 0 - xAxisShift));\n      tickMarGeometry.vertices.push(new THREE.Vector3(10 + this._dt.maxY - yAxisShift, i * interval + chartOffset, 0 - xAxisShift));\n      var tickLine = new THREE.Line(tickMarGeometry, tickMaterial);\n      this._dt.scene.add(tickLine);\n\n      words.position.set(20 + this._dt.maxY - yAxisShift, i * interval + chartOffset, 0 - xAxisShift);\n    } else if (this._orient === \"x\") {\n      // tick\n      geometry.vertices.push(new THREE.Vector3(0 - yAxisShift, chartOffset, i * interval - xAxisShift));\n\n      tickMarGeometry.vertices.push(new THREE.Vector3(0 - yAxisShift, 0 + chartOffset, i * interval - xAxisShift));\n      tickMarGeometry.vertices.push(new THREE.Vector3(0 - yAxisShift, -10 + chartOffset, i * interval - xAxisShift));\n      var tickLine = new THREE.Line(tickMarGeometry, tickMaterial);\n      this._dt.scene.add(tickLine);\n\n      words.position.set(0 - yAxisShift, -20 + chartOffset, i * interval - xAxisShift);\n    }\n\n    this._dt.labelGroup.add(words);\n  }\n\n  var line = new THREE.Line(geometry, material);\n\n  this._dt.scene.add(line);\n}\n\n// Chart object\nD3THREE.Chart = function() {\n}\n\nD3THREE.Chart.prototype.config = function(c) {\n  this._config = $.extend(this._config, c);\n}\n\nD3THREE.Chart.prototype.init = function(dt) {\n  this._dt = dt;\n  // mouse move\n  var self = this;\n  this._dt.renderer.domElement.addEventListener( 'mousemove', function(e) {\n    self.onDocumentMouseMove(e);\n  }, false );\n}\n\nvar cumulativeOffset = function(element) {\n    var top = 0, left = 0;\n    do {\n        top += element.offsetTop  || 0;\n        left += element.offsetLeft || 0;\n        element = element.offsetParent;\n    } while(element);\n\n    return {\n        top: top,\n        left: left\n    };\n};\n\nD3THREE.Chart.prototype.detectNodeHover = function(e) {\n  var boundingRect = this._dt.renderer.domElement.getBoundingClientRect();\n\n  var vector = new THREE.Vector3();\n  vector.x = ( (e.clientX - boundingRect.left) / this._dt.renderer.domElement.width ) * 2 - 1;\n  vector.y = 1 - ( (e.clientY - boundingRect.top) / this._dt.renderer.domElement.height ) * 2;\n  vector.z = 1;\n\n  // create a check ray\n\tvector.unproject( this._dt.camera );\n  var ray = new THREE.Raycaster( this._dt.camera.position,\n    vector.sub( this._dt.camera.position ).normalize() );\n\n  var intersects = ray.intersectObjects( this._nodeGroup.children );\n\n  for (var i = 0; i < this._nodeGroup.children.length; i++) {\n    this._nodeGroup.children[i].material.opacity = 1;\n  }\n\n  if (intersects.length > 0) {\n    var obj = intersects[0].object;\n    obj.material.opacity = 0.5;\n\n    var html = \"\";\n\n    html += \"<div class=\\\"tooltip_kv\\\">\";\n    html += \"<span>\";\n    html += \"x: \" + this._dt.axisObjects.x._tickFormat(obj.userData.x);\n    html += \"</span><br>\";\n    html += \"<span>\";\n    html += \"y: \" + this._dt.axisObjects.y._tickFormat(obj.userData.y);\n    html += \"</span><br>\";\n    html += \"<span>\";\n    html += \"z: \" + this._dt.axisObjects.z._tickFormat(obj.userData.z);\n    html += \"</span><br>\";\n    html += \"</div>\";\n\n    document.getElementById(\"tooltip-container\").innerHTML = html;\n    document.getElementById(\"tooltip-container\").style.display = \"block\";\n\n    document.getElementById(\"tooltip-container\").style.top = (e.pageY + 10) + \"px\";\n    document.getElementById(\"tooltip-container\").style.left = (e.pageX + 10) + \"px\";\n  } else {\n    document.getElementById(\"tooltip-container\").style.display = \"none\";\n  }\n}\n\n// Scatter plot\nD3THREE.Scatter = function(dt) {\n  this.init(dt);\n\n  this._nodeGroup = new THREE.Object3D();\n\n  this._config = {color: 0x4682B4, pointRadius: 5};\n}\n\nD3THREE.Scatter.prototype = new D3THREE.Chart();\n\nD3THREE.Scatter.prototype.onDocumentMouseMove = function(e) {\n  // detect intersected spheres\n  this.detectNodeHover(e);\n}\n\nD3THREE.Scatter.prototype.render = function(data) {\n  var geometry = new THREE.SphereGeometry( this._config.pointRadius, 32, 32 );\n\n  this._dt.scene.add(this._nodeGroup);\n\n  // x,y axis shift, so rotation is from center of screen\n  var xAxisShift = this._dt.axisObjects.x.getRotationShift(),\n    yAxisShift = this._dt.axisObjects.y.getRotationShift();\n\n  var self = this;\n  d3.select(this._nodeGroup)\n        .selectAll()\n        .data(data)\n    .enter().append( function(d) {\n      var material = new THREE.MeshBasicMaterial( {\n        color: self._config.color } );\n      var mesh = new THREE.Mesh( geometry, material );\n      mesh.userData = {x: d.x, y: d.y, z: d.z};\n      return mesh;\n    } )\n        .attr(\"position.z\", function(d) {\n          return self._dt.axisObjects.x._scale(d.x) - xAxisShift;\n        })\n        .attr(\"position.x\", function(d) {\n          return self._dt.axisObjects.y._scale(d.y) - yAxisShift;\n        })\n        .attr(\"position.y\", function(d) {\n          return self._dt.axisObjects.z._scale(d.z) + chartOffset;\n        });\n}\n\n// Surface plot\nD3THREE.Surface = function(dt) {\n  this.init(dt);\n\n  this._nodeGroup = new THREE.Object3D();\n\n  this._config = {color: 0x4682B4, pointColor: 0xff7f0e, pointRadius: 2};\n}\n\nD3THREE.Surface.prototype = new D3THREE.Chart();\n\nD3THREE.Surface.prototype.onDocumentMouseMove = function(e) {\n  // detect intersected spheres\n  var boundingRect = this._dt.renderer.domElement.getBoundingClientRect();\n\n  var vector = new THREE.Vector3();\n  vector.x = ( (e.clientX - boundingRect.left) / this._dt.renderer.domElement.width ) * 2 - 1;\n  vector.y = 1 - ( (e.clientY - boundingRect.top) / this._dt.renderer.domElement.height ) * 2;\n  vector.z = 1;\n\n  // create a check ray\n\tvector.unproject( this._dt.camera );\n  var ray = new THREE.Raycaster( this._dt.camera.position,\n    vector.sub( this._dt.camera.position ).normalize() );\n\n  var meshIntersects = ray.intersectObjects( [this._meshSurface] );\n\n  if (meshIntersects.length > 0) {\n    for (var i = 0; i < this._nodeGroup.children.length; i++) {\n      this._nodeGroup.children[i].visible = true;\n      this._nodeGroup.children[i].material.opacity = 1;\n    }\n\n    this.detectNodeHover(e);\n  } else {\n    // hide nodes\n    for (var i = 0; i < this._nodeGroup.children.length; i++) {\n      this._nodeGroup.children[i].visible = false;\n    }\n  }\n}\n\nD3THREE.Surface.prototype.render = function(threeData) {\n  /* render data points */\n  var geometry = new THREE.SphereGeometry( this._config.pointRadius, 32, 32 );\n\n  this._dt.scene.add(this._nodeGroup);\n\n  // x,y axis shift, so rotation is from center of screen\n  var xAxisShift = this._dt.axisObjects.x.getRotationShift(),\n      yAxisShift = this._dt.axisObjects.y.getRotationShift();\n\n  var self = this;\n  d3.select(this._nodeGroup)\n        .selectAll()\n        .data(threeData)\n    .enter().append( function(d) {\n      var material = new THREE.MeshBasicMaterial( {\n        color: self._config.pointColor } );\n      var mesh = new THREE.Mesh( geometry, material );\n      mesh.userData = {x: d.x, y: d.y, z: d.z};\n      mesh.visible = false;\n      return mesh;\n    } )\n        .attr(\"position.z\", function(d) {\n          return self._dt.axisObjects.x._scale(d.x) - xAxisShift;\n        })\n        .attr(\"position.x\", function(d) {\n          return self._dt.axisObjects.y._scale(d.y) - yAxisShift;\n        })\n        .attr(\"position.y\", function(d) {\n          return self._dt.axisObjects.z._scale(d.z) + chartOffset;\n        });\n\n  /* custom surface */\n  function distance (v1, v2)\n  {\n    var dx = v1.x - v2.x;\n    var dy = v1.y - v2.y;\n    var dz = v1.z - v2.z;\n\n    return Math.sqrt(dx*dx+dz*dz);\n  }\n\n  var vertices = [];\n  var holes = [];\n  var triangles, mesh;\n  var geometry = new THREE.Geometry();\n  var material = new THREE.MeshBasicMaterial({color: this._config.color});\n\n  for (var i = 0; i < threeData.length; i++) {\n    vertices.push(new THREE.Vector3(\n      self._dt.axisObjects.y._scale(threeData[i].y) - yAxisShift,\n      self._dt.axisObjects.z._scale(threeData[i].z) + chartOffset,\n      self._dt.axisObjects.x._scale(threeData[i].x) - xAxisShift));\n  }\n\n  geometry.vertices = vertices;\n\n  for (var i = 0; i < vertices.length; i++) {\n    // find three closest vertices to generate surface\n    var v1, v2, v3;\n    var distances = [];\n\n    // find vertices in same y or y + 1 row\n    var minY = Number.MAX_VALUE;\n    for (var j = i + 1; j < vertices.length; j++) {\n      if (i !== j && vertices[j].x > vertices[i].x) {\n        if (vertices[j].x < minY) {\n          minY = vertices[j].x;\n        }\n      }\n    }\n\n    var rowVertices = [], row2Vertices = [];\n    for (var j = i + 1; j < vertices.length; j++) {\n      if (i !== j && (vertices[j].x === vertices[i].x)) {\n        rowVertices.push({index: j, v: vertices[j]});\n      }\n      if (i !== j && (vertices[j].x === minY)) {\n        row2Vertices.push({index: j, v: vertices[j]});\n      }\n    }\n\n    if (rowVertices.length >= 1 && row2Vertices.length >= 2) {\n      // find smallest x\n      rowVertices.sort(function(a, b) {\n        if (a.v.z < b.v.z) {\n          return -1;\n        } else if (a.v.z === b.v.z) {\n          return 0;\n        } else {\n          return 1;\n        }\n      });\n\n      v1 = rowVertices[0].index;\n\n      row2Vertices.sort(function(a, b) {\n        if (a.v.z < b.v.z) {\n          return -1;\n        } else if (a.v.z === b.v.z) {\n          return 0;\n        } else {\n          return 1;\n        }\n      });\n\n      v2 = row2Vertices[0].index;\n      v3 = row2Vertices[1].index;\n\n      var fv = [i, v1, v2, v3];\n      fv = fv.sort(function(a, b) {\n        if (a < b) return -1;\n        else if (a === b) return 0;\n        else return 1;\n      });\n\n      geometry.faces.push( new THREE.Face3(fv[1], fv[0], fv[3]));\n      geometry.faces.push( new THREE.Face3(fv[0], fv[2], fv[3]));\n    }\n  }\n\n  this._meshSurface = new THREE.Mesh( geometry, material );\n  this._dt.scene.add(this._meshSurface);\n}\n\n// Bar plot\nD3THREE.Bar = function(dt) {\n  this.init(dt);\n\n  this._nodeGroup = new THREE.Object3D();\n\n  this._config = {color: 0x4682B4, barSize: 5};\n}\n\nD3THREE.Bar.prototype = new D3THREE.Chart();\n\nD3THREE.Bar.prototype.onDocumentMouseMove = function(e) {\n  this.detectNodeHover(e);\n}\n\nD3THREE.Bar.prototype.render = function(threeData) {\n  /* render data points */\n  this._dt.scene.add(this._nodeGroup);\n\n  // x,y axis shift, so rotation is from center of screen\n  var xAxisShift = this._dt.axisObjects.x.getRotationShift(),\n      yAxisShift = this._dt.axisObjects.y.getRotationShift();\n\n  var self = this;\n  d3.select(this._nodeGroup)\n        .selectAll()\n        .data(threeData)\n    .enter().append( function(d) {\n      var height = self._dt.axisObjects.z._scale(d.z) + chartOffset;\n      var geometry = new THREE.BoxGeometry( self._config.barSize, height, self._config.barSize );\n      var material = new THREE.MeshBasicMaterial( {\n        color: self._config.color } );\n      var mesh = new THREE.Mesh( geometry, material );\n      mesh.userData = {x: d.x, y: d.y, z: d.z};\n      return mesh;\n    } )\n        .attr(\"position.z\", function(d) {\n          return self._dt.axisObjects.x._scale(d.x) - xAxisShift;\n        })\n        .attr(\"position.x\", function(d) {\n          return self._dt.axisObjects.y._scale(d.y) - yAxisShift;\n        })\n        .attr(\"position.y\", function(d) {\n          var height = self._dt.axisObjects.z._scale(d.z) + chartOffset;\n          return height / 2;\n        });\n}\n\n// Force layout plot\nD3THREE.Force = function(dt) {\n  this.init(dt);\n\n  this._nodeGroup = new THREE.Object3D();\n\n  this._config = {color: 0x4682B4, linkColor: 0xcccccc, linkWidth: 1};\n}\n\nD3THREE.Force.prototype = new D3THREE.Chart();\n\nD3THREE.Force.prototype.onDocumentMouseMove = function(e) {\n}\n\nD3THREE.Force.prototype.render = function(threeData) {\n  var spheres = [], three_links = [];\n  // Define the 3d force\n  var force = d3.layout.force3d()\n      .nodes(sort_data=[])\n      .links(links=[])\n      .size([50, 50])\n      .gravity(0.3)\n      .charge(-400)\n\n  var DISTANCE = 1;\n\n  for (var i = 0; i < threeData.nodes.length; i++) {\n    sort_data.push({x:threeData.nodes.x + DISTANCE,y:threeData.nodes.y + DISTANCE,z:0})\n\n    // set up the sphere vars\n    var radius = 5,\n        segments = 16,\n        rings = 16;\n\n    // create the sphere's material\n    var sphereMaterial = new THREE.MeshLambertMaterial({ color: this._config.color });\n\n    var sphere = new THREE.Mesh(\n      new THREE.SphereGeometry(\n        radius,\n        segments,\n        rings),\n      sphereMaterial);\n\n    spheres.push(sphere);\n\n    // add the sphere to the scene\n    this._dt.scene.add(sphere);\n  }\n\n  for (var i = 0; i < threeData.links.length; i++) {\n    links.push({target:sort_data[threeData.links[i].target],source:sort_data[threeData.links[i].source]});\n\n    var material = new THREE.LineBasicMaterial({ color: this._config.linkColor,\n                  linewidth: this._config.linkWidth});\n    var geometry = new THREE.Geometry();\n\n    geometry.vertices.push( new THREE.Vector3( 0, 0, 0 ) );\n    geometry.vertices.push( new THREE.Vector3( 0, 0, 0 ) );\n    var line = new THREE.Line( geometry, material );\n    line.userData = { source: threeData.links[i].source,\n                      target: threeData.links[i].target };\n    three_links.push(line);\n    this._dt.scene.add(line);\n\n    force.start();\n  }\n\n  // set up the axes\n  var x = d3.scale.linear().domain([0, 350]).range([0, 10]),\n      y = d3.scale.linear().domain([0, 350]).range([0, 10]),\n      z = d3.scale.linear().domain([0, 350]).range([0, 10]);\n\n  var self = this;\n  force.on(\"tick\", function(e) {\n    for (var i = 0; i < sort_data.length; i++) {\n      spheres[i].position.set(x(sort_data[i].x) * 40 - 40, y(sort_data[i].y) * 40 - 40,z(sort_data[i].z) * 40 - 40);\n\n      for (var j = 0; j < three_links.length; j++) {\n        var line = three_links[j];\n        var vi = -1;\n        if (line.userData.source === i) {\n          vi = 0;\n        }\n        if (line.userData.target === i) {\n          vi = 1;\n        }\n\n        if (vi >= 0) {\n          line.geometry.vertices[vi].x = x(sort_data[i].x) * 40 - 40;\n          line.geometry.vertices[vi].y = y(sort_data[i].y) * 40 - 40;\n          line.geometry.vertices[vi].z = y(sort_data[i].z) * 40 - 40;\n          line.geometry.verticesNeedUpdate = true;\n        }\n      }\n    }\n  });\n}\n"]},"hash":"4b09fbb867793c890f578bed45a7742fee441a29"}
