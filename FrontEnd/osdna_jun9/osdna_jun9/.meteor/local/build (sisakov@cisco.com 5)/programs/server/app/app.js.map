{"version":3,"sources":["meteor://ðŸ’»app/lib/collections.js","meteor://ðŸ’»app/lib/router.js","meteor://ðŸ’»app/server/methods.js","meteor://ðŸ’»app/server/publications.js","meteor://ðŸ’»app/osdna_new.js"],"names":[],"mappings":";;;;;;;;AAAA,YAAY,IAAI,MAAM,UAAN,CAAiB,WAArB,CAAZ;AACA,UAAU,IAAI,MAAM,UAAN,CAAiB,SAArB,CAAV;AACA,QAAQ,IAAI,MAAM,UAAN,CAAiB,OAArB,CAAR;AACA,eAAe,IAAI,MAAM,UAAN,CAAiB,qBAArB,CAAf;AACA,gBAAgB,IAAI,MAAM,UAAN,CAAiB,8BAArB,CAAhB,2C;;;;;;;;;;;;;;ACDA,OAAO,SAAP,CAAiB;AACb,oBAAgB,MAAhB;AACA,qBAAiB,SAAjB;CAFJ;AAIA,OAAO,KAAP,CAAa,GAAb,EAAkB;AACd,UAAM,UAAN;AACA,cAAU,UAAV;CAFJ;AAIA,OAAO,KAAP,CAAa,MAAb,EAAqB;AACjB,UAAM,OAAN;AACA;AAAQ,0BAAY;AAChB,mBAAO,OAAO,SAAP,CAAiB,WAAjB,CAAP,CADgB;SAAZ;;;OAAR;AAGA;AAAQ,0BAAY;AAChB,gBAAI,KAAK,KAAL,EAAJ,EAAiB;;AAEb,qBAAK,KAAL,CAAW,GAAX,CAAe,SAAf,EAA0B,KAAK,MAAL,CAAY,KAAZ,CAAkB,GAAlB,CAA1B;;;;;;;;;;;;;;;;AAFa,oBAkBb,CAAK,MAAL,CAAY,MAAZ,EAlBa;aAAjB,MAqBI;;AAEA,qBAAK,MAAL,CAAY,SAAZ,EAFA;aArBJ;SADI;;;OAAR;;CALJ;AAkCA,OAAO,KAAP,CAAa,aAAb,EAA4B;AACxB,UAAM,aAAN;AACA,UAAM,UAAN;CAFJ;AAIA,OAAO,KAAP,CAAa,aAAb,EAA4B;AACxB,UAAM,SAAN;CADJ;AAGA,OAAO,KAAP,CAAa,WAAb,EAA0B;AACtB,UAAM,QAAN;CADJ;AAGA,OAAO,KAAP,CAAa,YAAb,EAA2B;AACvB,UAAM,SAAN;CADJ,4G;;;;;;;;;;;ACvDA,OAAO,OAAP,CAAe,EAAf,8F;;;;;;;;;;;ACAA,OAAO,OAAP,CAAe,WAAf,EAA4B,YAAY;;;AAGpC,WAAO,UAAU,IAAV,CAAe,EAAf,CAAP,CAHoC;CAAZ,CAA5B;AAKA,OAAO,OAAP,CAAe,qBAAf,EAAsC,YAAY;AAC9C,WAAO,aAAa,IAAb,CAAkB,EAAC,MAAK,aAAL,EAAnB,CAAP,CAD8C;CAAZ,CAAtC;AAGA,OAAO,OAAP,CAAe,SAAf,EAA0B,YAAY;;AAElC,WAAO,QAAQ,IAAR,CAAa,EAAb,CAAP,CAFkC;CAAZ,CAA1B;AAIA,OAAO,OAAP,CAAe,OAAf,EAAwB,YAAY;;AAEhC,WAAO,MAAM,IAAN,CAAW,EAAX,CAAP,CAFgC;CAAZ,CAAxB;AAIA,OAAO,OAAP,CAAe,8BAAf,EAA+C,YAAY;;AAEvD,WAAO,cAAc,IAAd,CAAmB,EAAnB,CAAP,CAFuD;CAAZ,CAA/C;;;;;;;;;AAYA,OAAO,OAAP,CAAe,YAAY;;;CAAZ,CAAf,2G;;;;;;;;;;;AC5BA,OAAO,QAAQ,SAAR,CAAP,sF","file":"/app.js","sourcesContent":["Inventory = new Mongo.Collection(\"inventory\");\r\nCliques = new Mongo.Collection(\"cliques\");\r\nLinks = new Mongo.Collection(\"links\");\r\nEnvironments = new Mongo.Collection(\"environments_config\");\r\nNodeHoverAttr = new Mongo.Collection(\"attributes_for_hover_on_data\");\r\n","/**\r\n * Created by oashery on 3/2/2016.\r\n */\r\nRouter.configure({\r\n    layoutTemplate: 'main',\r\n    loadingTemplate: 'loading'\r\n});\r\nRouter.route('/', {\r\n    name: 'homePage',\r\n    template: 'mainPage'\r\n});\r\nRouter.route('home', {\r\n    path: '/home',\r\n    waitOn: function () {\r\n        return Meteor.subscribe('inventory');\r\n    },\r\n    action: function () {\r\n        if (this.ready()){\r\n\r\n            this.state.set('envName', this.params.query.env);\r\n            /*\r\n                        if(query){\r\n                                //return Inventory.find({$where: \"this.id_path.match('^/WebEX-Mirantis@Cisco/')\"});\r\n                                console.log(query);\r\n                                this.render('home', {\r\n                                    data: function () {\r\n                                        return Inventory.find({environment: query, parent_id: query});\r\n                                    }\r\n                                });\r\n                                //\r\n                        }\r\n            */\r\n\r\n        // if the sub handle returned from waitOn ready() method returns\r\n        // true then we're ready to go ahead and render the page.\r\n            this.render('home');\r\n\r\n        }\r\n        else{\r\n            // otherwise render the loading template.\r\n            this.render('loading');\r\n        }\r\n    }\r\n\r\n});\r\nRouter.route('landingpage', {\r\n    name: 'landingpage',\r\n    path: '/landing'\r\n});\r\nRouter.route('d3plusgraph', {\r\n    path: '/d3plus'\r\n});\r\nRouter.route('threeTest', {\r\n    path: '/three',\r\n});\r\nRouter.route('threeTest2', {\r\n    path: '/three2',\r\n});\r\n","Meteor.methods({\r\n});","Meteor.publish(\"inventory\", function () {\r\n    //return Inventory.find({$where: \"this.id_path.match('^/WebEX-Mirantis@Cisco/')\"});\r\n    //return Inventory.find({ \"show_in_tree\": true });\r\n    return Inventory.find({});\r\n});\r\nMeteor.publish(\"environments_config\", function () {\r\n    return Environments.find({type:\"environment\"});\r\n});\r\nMeteor.publish(\"cliques\", function () {\r\n    //return Inventory.find({$where: \"this.id_path.match('^/WebEX-Mirantis@Cisco/')\"});\r\n    return Cliques.find({});\r\n});\r\nMeteor.publish(\"links\", function () {\r\n    //return Inventory.find({$where: \"this.id_path.match('^/WebEX-Mirantis@Cisco/')\"});\r\n    return Links.find({});\r\n});\r\nMeteor.publish(\"attributes_for_hover_on_data\", function () {\r\n    //return Inventory.find({$where: \"this.id_path.match('^/WebEX-Mirantis@Cisco/')\"});\r\n    return NodeHoverAttr.find({});\r\n});\r\n/*\r\nMeteor.publish(\"nodesList\", function (nodeId) {\r\n    return Inventory.find({ \"type\": \"instance\", $and: [ { \"id\": nodeId } ] }[\"Entities\"]);\r\n});\r\nMeteor.publish(\"edgesList\", function (nodeId) {\r\n    return Inventory.find({ \"type\": \"instance\", $and: [ { \"id\": nodeId } ] }[\"Relations\"]);\r\n});\r\n*/\r\nMeteor.startup(function () {\r\n\r\n    // code to run on server at startup\r\n});\r\n","cola = require('webcola');"]}